{
    "abi": [
        {
            "type": "function",
            "name": "ASSERTER_ROLE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "KPICounter",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MAX_QUEUE_LENGTH",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "amountPaid",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "assertDataFor",
            "inputs": [
                {
                    "name": "dataId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "data",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "asserter",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "assertionConfig",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "creationTime",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "assertedValue",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "KpiToUse",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "distributed",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "assertionData",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "dataId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "data",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "asserter",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "resolved",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "assertionDisputedCallback",
            "inputs": [
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "assertionLiveness",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint64",
                    "internalType": "uint64"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "assertionResolvedCallback",
            "inputs": [
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "assertedTruthfully",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "claimRewards",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "collectPaymentOrders",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
                    "components": [
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "paymentToken",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "amount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "start",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "cliff",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "end",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "createKPI",
            "inputs": [
                {
                    "name": "_continuous",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "_trancheValues",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "_trancheRewards",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "defaultCurrency",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IERC20"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "defaultIdentifier",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "depositFeeFunds",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dequeueStake",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "earned",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "estimateReward",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "duration",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAssertion",
            "inputs": [
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IOptimisticOracleIntegrator.DataAssertion",
                    "components": [
                        {
                            "name": "dataId",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "data",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "asserter",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "resolved",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAssertionConfig",
            "inputs": [
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration",
                    "components": [
                        {
                            "name": "creationTime",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "assertedValue",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "KpiToUse",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "distributed",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getData",
            "inputs": [
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getKPI",
            "inputs": [
                {
                    "name": "KPInum",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct ILM_PC_KPIRewarder_v1.KPI",
                    "components": [
                        {
                            "name": "numOfTranches",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "totalRewards",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "continuous",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "trancheValues",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        },
                        {
                            "name": "trancheRewards",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStakingQueue",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "grantModuleRole",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "grantModuleRoleBatched",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "targets",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "identifier",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "init",
            "inputs": [
                {
                    "name": "orchestrator_",
                    "type": "address",
                    "internalType": "contract IOrchestrator_v1"
                },
                {
                    "name": "metadata",
                    "type": "tuple",
                    "internalType": "struct IModule_v1.Metadata",
                    "components": [
                        {
                            "name": "majorVersion",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "minorVersion",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "url",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                },
                {
                    "name": "configData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isTrustedForwarder",
            "inputs": [
                {
                    "name": "forwarder",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "oo",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract OptimisticOracleV3Interface"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "orchestrator",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IOrchestrator_v1"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "outstandingTokenAmount",
            "inputs": [
                {
                    "name": "_token",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "paymentOrders",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
                    "components": [
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "paymentToken",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "amount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "start",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "cliff",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "end",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "postAssertion",
            "inputs": [
                {
                    "name": "dataId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "data",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "asserter",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "assertedValue",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "targetKPI",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "registryOfKPIs",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "numOfTranches",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "totalRewards",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "continuous",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "revokeModuleRole",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "revokeModuleRoleBatched",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "targets",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "rewardRate",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "rewardsEnd",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "setDefaultAssertionLiveness",
            "inputs": [
                {
                    "name": "_newLiveness",
                    "type": "uint64",
                    "internalType": "uint64"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setDefaultCurrency",
            "inputs": [
                {
                    "name": "_newCurrency",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setOptimisticOracle",
            "inputs": [
                {
                    "name": "_newOO",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setRewards",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "duration",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "stake",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "stakingQueue",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "stakingQueueAmounts",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "stakingToken",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "title",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalQueuedFunds",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "trustedForwarder",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "unstake",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "url",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "DataAsserted",
            "inputs": [
                {
                    "name": "dataId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "data",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                },
                {
                    "name": "asserter",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "DataAssertionResolved",
            "inputs": [
                {
                    "name": "assertedTruthfully",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                },
                {
                    "name": "dataId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "data",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                },
                {
                    "name": "asserter",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "assertionId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "FeeFundsDeposited",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Initialized",
            "inputs": [
                {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "KPICreated",
            "inputs": [
                {
                    "name": "KPI_Id",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "numOfTranches",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "totalKPIRewards",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "continuous",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                },
                {
                    "name": "trancheValues",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "trancheRewards",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ModuleInitialized",
            "inputs": [
                {
                    "name": "parentOrchestrator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "moduleTitle",
                    "type": "string",
                    "indexed": true,
                    "internalType": "string"
                },
                {
                    "name": "majorVersion",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "minorVersion",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "PaymentOrderAdded",
            "inputs": [
                {
                    "name": "recipient",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "token",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RewardSet",
            "inputs": [
                {
                    "name": "rewardAmount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "duration",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newRewardRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newRewardsEnd",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RewardsDistributed",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RewardsDurationUpdated",
            "inputs": [
                {
                    "name": "newDuration",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "StakeDequeued",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "StakeEnqueued",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Staked",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Unstaked",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AddressEmptyCode",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "AddressInsufficientBalance",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "FailedInnerCall",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidInitialization",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module_OrchestratorCallbackFailed",
            "inputs": [
                {
                    "name": "funcSig",
                    "type": "string",
                    "internalType": "string"
                }
            ]
        },
        {
            "type": "error",
            "name": "Module__CallerNotAuthorized",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "caller",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "Module__ERC20PaymentClientBase__ArrayLengthMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__ERC20PaymentClientBase__CallerNotAuthorized",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__ERC20PaymentClientBase__InsufficientFunds",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "Module__ERC20PaymentClientBase__InvalidAmount",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__ERC20PaymentClientBase__InvalidRecipient",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__ERC20PaymentClientBase__InvalidToken",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__ERC20PaymentClientBase__Invalidend",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__ERC20PaymentClientBase__TokenTransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__InvalidMetadata",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__InvalidOrchestratorAddress",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPINumber",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_KPIRewarder_v1__InvalidTargetValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_KPIRewarder_v1__StakingQueueIsFull",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_Staking_v1__InvalidDuration",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_Staking_v1__InvalidRewardRate",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__LM_PC_Staking_v1__InvalidStakingToken",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__OnlyCallableByOrchestrator",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__OptimisticOracleIntegrator__CallerNotOO",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__OptimisticOracleIntegrator__InvalidDefaultCurrency",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__OptimisticOracleIntegrator__InvalidDefaultLiveness",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Module__OptimisticOracleIntegrator__InvalidOOInstance",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotInitializing",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ReentrancyGuardReentrantCall",
            "inputs": []
        },
        {
            "type": "error",
            "name": "SafeERC20FailedOperation",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        }
    ],
    "bytecode": {
        "object": "0x60a06040523480156200001157600080fd5b506000608052620000216200002c565b6001600755620000e0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156200007d5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000dd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051615dd8620000f960003960005050615dd86000f3fe608060405234801561001057600080fd5b50600436106103775760003560e01c806375fa0b76116101d3578063a6d14d6911610104578063bf5c3252116100a2578063d448a4ec1161007c578063d448a4ec14610999578063d509b017146109aa578063d701aedb146109b3578063f1b156b2146109bc57600080fd5b8063bf5c32521461095c578063c0231ff61461096f578063c84c84f01461098657600080fd5b8063b75d4e24116100de578063b75d4e24146108db578063bc7d2a331461090f578063bcb6192014610922578063bf14d4a91461093557600080fd5b8063a6d14d69146108ae578063b33ec618146108b7578063b74795d9146108ca57600080fd5b80637e5f43ff116101715780638921a6141161014b5780638921a6141461082d57806393ee663b14610840578063956ae17b14610853578063a694fc3a1461089b57600080fd5b80637e5f43ff1461074257806381d0951714610755578063883028841461076857600080fd5b80637998a1c4116101ad5780637998a1c4146106cf5780637b0a47ee146106d75780637b9a9c7f146106e05780637da0a8771461073a57600080fd5b806375fa0b7614610691578063772fd8da146106a657806378802654146106c657600080fd5b80633ecd7972116102ad5780636315a4551161024b5780636c67e807116102255780636c67e8071461063a5780636e73ba5b1461064d57806370a082311461065557806372f702f31461067e57600080fd5b80636315a455146105ff57806364e6bbe514610614578063654e51e71461062757600080fd5b806354f6127f1161028757806354f6127f1461059f57806354fd4d50146105c95780635600f04f146105e4578063572b6c05146105ec57600080fd5b80633ecd79721461052857806342dfe958146105775780634a79d50c1461058a57600080fd5b806324e302701161031a5780632a4e1904116102f45780632a4e19041461046f5780632e17de78146104e45780632e84db5f146104f7578063372500ab1461052057600080fd5b806324e3027014610441578063272bbd44146104545780632979b6701461046757600080fd5b80630f14c8cf116103565780630f14c8cf146103e55780630fe5bc3b146103fa57806318160ddd1461042557806320402e1d1461042e57600080fd5b80628cc2621461037c57806301ffc9a7146103a25780630dfc4357146103c5575b600080fd5b61038f61038a366004614f96565b6109cf565b6040519081526020015b60405180910390f35b6103b56103b0366004614fb3565b6109e8565b6040519015158152602001610399565b61038f6103d3366004614f96565b60196020526000908152604090205481565b6103f86103f3366004614f96565b610a26565b005b61040d610408366004614fdd565b610b0c565b6040516001600160a01b039091168152602001610399565b61038f60095481565b60115461040d906001600160a01b031681565b6103f861044f366004615042565b610b36565b6103f8610462366004615042565b610c5c565b6103f8610d4b565b6104b361047d366004614fdd565b6014602052600090815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b604051610399949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6103f86104f2366004614fdd565b610f29565b61038f610505366004614f96565b6001600160a01b031660009081526006602052604090205490565b6103f8611023565b61055a610536366004614fdd565b60166020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610399565b6103f861058536600461517c565b611049565b6105926111da565b60405161039991906152a8565b6105b26105ad366004614fdd565b61126f565b604080519215158352602083019190915201610399565b60015460025460408051928352602083019190915201610399565b6105926112b6565b6103b56105fa366004614f96565b6112c8565b610607611350565b6040516103999190615300565b6103f8610622366004614fdd565b6113b1565b6103f8610635366004615313565b61147e565b6103f8610648366004615335565b611494565b61038f603281565b61038f610663366004614f96565b6001600160a01b03166000908152600e602052604090205490565b60085461040d906001600160a01b031681565b6106996115d6565b60405161039991906153d6565b6106b96106b4366004614fdd565b611679565b604051610399919061541a565b61038f60155481565b61038f611799565b61038f600a5481565b6107186106ee366004614fdd565b60176020526000908152604090208054600182015460028301546003909301549192909160ff1684565b6040805194855260208501939093529183015215156060820152608001610399565b61040d6118e9565b61038f610750366004615313565b611961565b6103f8610763366004615489565b611a36565b6107ef610776366004614fdd565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260146020908152604091829020825160808101845281548152600182015492810192909252600201546001600160a01b03811692820192909252600160a01b90910460ff161515606082015290565b604051610399919081518152602080830151908201526040808301516001600160a01b03169082015260609182015115159181019190915260800190565b60125461040d906001600160a01b031681565b61038f61084e3660046154a6565b611a8a565b610866610861366004614fdd565b611e41565b604051610399919081518152602080830151908201526040808301519082015260609182015115159181019190915260800190565b6103f86108a9366004614fdd565b611eb8565b61038f600b5481565b6103f86108c53660046154df565b612036565b6000546001600160a01b031661040d565b6012546108f690600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610399565b61038f61091d366004615519565b6120ad565b6103f8610930366004615335565b6123b9565b61038f7f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba81565b6103f861096a366004614f96565b6124c9565b61097761251d565b6040516103999392919061559c565b61038f6109943660046155d5565b6129f5565b6103f86109a7366004614fdd565b50565b61038f60135481565b61038f601a5481565b6103f86109ca36600461561e565b612c33565b60006109e2826109dd612f52565b612fb3565b92915050565b60006001600160e01b031982167fb8fe3ea20000000000000000000000000000000000000000000000000000000014806109e257506109e28261301b565b6000546040805163d09edf3160e01b81529051610b03926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190615643565b6001600160a01b03166355ff58d46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af69190615660565b610afe613059565b6130ab565b6109a7816131f9565b60188181548110610b1c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546040805163d09edf3160e01b81529051610b81926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190615643565b6001600160a01b0316637d540a648484846040518463ffffffff1660e01b8152600401610c2593929190615679565b600060405180830381600087803b158015610c3f57600080fd5b505af1158015610c53573d6000803e3d6000fd5b50505050505050565b6000546040805163d09edf3160e01b81529051610ca7926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c9190615643565b6001600160a01b031663648154538484846040518463ffffffff1660e01b8152600401610c2593929190615679565b610d53613268565b6000610d5d613059565b6001600160a01b03811660009081526019602052604090205490915015610f1c576001600160a01b0381166000908152601960205260408120805490829055601a805491928392610daf9084906156e7565b90915550600090505b601854811015610ec057826001600160a01b031660188281548110610ddf57610ddf6156fa565b6000918252602090912001546001600160a01b031603610eb85760188054610e09906001906156e7565b81548110610e1957610e196156fa565b600091825260209091200154601880546001600160a01b039092169183908110610e4557610e456156fa565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506018805480610e8457610e84615710565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055610ec0565b600101610db8565b50604080516001600160a01b0384168152602081018390527f2b96a2ef42d32e30dc79e8bf1b1e41bb95318494f4f578c8b28aa8dba3adb2d3910160405180910390a1600854610f1a906001600160a01b031683836132ab565b505b50610f276001600755565b565b610f31613268565b80610f3b81613324565b6000610f45613059565b9050610f508161335e565b6001600160a01b0381166000908152600e602052604081208054859290610f789084906156e7565b925050819055508260096000828254610f9191906156e7565b9091555050600854610fad906001600160a01b031682856132ab565b6001600160a01b03811660009081526010602052604090205415610fd457610fd4816133bd565b806001600160a01b03167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758460405161100f91815260200190565b60405180910390a250506109a76001600755565b61102b613268565b6000611035613059565b90506110408161335e565b610f1c816133bd565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156110945750825b905060008267ffffffffffffffff1660011480156110b15750303b155b9050811580156110bf575080155b156110f6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000166001178555831561114157845468ff00000000000000001916680100000000000000001785555b61114b888861362e565b600080600080898060200190518101906111659190615726565b93509350935093506111768461377f565b611181838383613790565b5050505083156111d057845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6060600160030180546111ec90615785565b80601f016020809104026020016040519081016040528092919081815260200182805461121890615785565b80156112655780601f1061123a57610100808354040283529160200191611265565b820191906000526020600020905b81548152906001019060200180831161124857829003601f168201915b5050505050905090565b6000818152601460205260408120600201548190600160a01b900460ff1661129c57506000928392509050565b505060009081526014602052604090206001908101549091565b6060600160020180546111ec90615785565b600080546040517f572b6c050000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301529091169063572b6c0590602401602060405180830381865afa15801561132c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e291906157bf565b6060601880548060200260200160405190810160405280929190818152602001828054801561126557602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161138a575050505050905090565b6000546040805163d09edf3160e01b815290516113fc926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b611404613268565b8061140e81613324565b61142d611419613059565b6011546001600160a01b03169030856137b3565b601154604080516001600160a01b039092168252602082018490527f643b1bd5b160e780fef319c0a18a3535edb10da7f7136320b2935bb6f1a9f605910160405180910390a1506109a76001600755565b6114866137f2565b6114908282613aa1565b5050565b6000546040805163d09edf3160e01b815290516114df926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015611530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115549190615643565b6040517fe1788154000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b038381166024830152919091169063e1788154906044015b600060405180830381600087803b1580156115ba57600080fd5b505af11580156115ce573d6000803e3d6000fd5b505050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156116705760008481526020908190206040805160c0810182526006860290920180546001600160a01b0390811684526001808301549091168486015260028201549284019290925260038101546060840152600481015460808401526005015460a083015290835290920191016115fa565b50505050905090565b6116ad6040518060a00160405280600081526020016000815260200160001515815260200160608152602001606081525090565b600082815260166020908152604091829020825160a08101845281548152600182015481840152600282015460ff16151581850152600382018054855181860281018601909652808652919492936060860193929083018282801561173157602002820191906000526020600020905b81548152602001906001019080831161171d575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561178957602002820191906000526020600020905b815481526020019060010190808311611775575b5050505050815250509050919050565b604080516080810182526001805482526002546020830152600380546000946118e4949392908401916117cb90615785565b80601f01602080910402602001604051908101604052809291908181526020018280546117f790615785565b80156118445780601f1061181957610100808354040283529160200191611844565b820191906000526020600020905b81548152906001019060200180831161182757829003601f168201915b5050505050815260200160038201805461185d90615785565b80601f016020809104026020016040519081016040528092919081815260200182805461188990615785565b80156118d65780601f106118ab576101008083540402835291602001916118d6565b820191906000526020600020905b8154815290600101906020018083116118b957829003601f168201915b505050505081525050613be6565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b0316637da0a8776040518163ffffffff1660e01b8152600401602060405180830381865afa15801561193d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e49190615643565b60008261196d81613324565b82806000036119a8576040517fe05ce79000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b544211156119bb5760009250611a2e565b600b546119c885426157dc565b11156119df5742600b546119dc91906156e7565b93505b600954600003611a0757600a546119f685876157ef565b611a0091906157ef565b9250611a2e565b600954600a54611a1786886157ef565b611a2191906157ef565b611a2b919061581c565b92505b505092915050565b6000546040805163d09edf3160e01b81529051611a81926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b6109a781613c26565b60007f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba611b8d60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b259190615643565b6040517ffdd5205f000000000000000000000000000000000000000000000000000000008152306004820152602481018490526001600160a01b03919091169063fdd5205f906044016020604051808303816000875af1158015610ad2573d6000803e3d6000fd5b6001600160a01b03831615611ba25782611baa565b611baa613059565b6012546011546040517f4360af3d0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152929550600092911690634360af3d90602401602060405180830381865afa158015611c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c399190615660565b9050611c5a611c46613059565b6011546001600160a01b03169030846137b3565b601254601154611c77916001600160a01b03918216911683613cac565b6012546001600160a01b0316636457c979611c9187613d4f565b611c9a89613d4f565b611ca388613d90565b611cac42613e08565b611cb530613d90565b604051602001611cc995949392919061585a565b60408051808303601f190181529082905260125460115460135460e086901b6001600160e01b0319168552611d2a948b933093600093600160a01b90920467ffffffffffffffff16926001600160a01b03909116918b9185906004016159de565b6020604051808303816000875af1158015611d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6d9190615660565b6040805160808101825288815260208082018981526001600160a01b03808a168486018181526000606087018181528982526014909652879020955186559251600186015591516002909401805493511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009094169490911693909317919091179091559051919450849188907f29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec90611e30908a815260200190565b60405180910390a450509392505050565b611e6e60405180608001604052806000815260200160008152602001600081526020016000151581525090565b5060009081526017602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff161515606082015290565b611ec0613268565b80611eca81613324565b601854603211611f06576040517ff5fc3d4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611f10613059565b6001600160a01b03811660009081526019602052604081205491925003611f8a57601880546001810182556000919091527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790555b6001600160a01b03811660009081526019602052604081208054859290611fb29084906157dc565b9250508190555082601a6000828254611fcb91906157dc565b9091555050600854611fe8906001600160a01b03168230866137b3565b604080516001600160a01b0383168152602081018590527f092e6d0fb46de0430e74e875a283441f97dbd0a5f7495483c8a78e78c5ef8683910160405180910390a150506109a76001600755565b612046612041613059565b613f68565b61207c576040517fe4597a6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216600090815260066020526040812080548392906120a49084906156e7565b90915550505050565b600080546040805163d09edf3160e01b815290516120f9926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b8360018110806121095750601481115b15612140576040517fdb680bc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808314612179576040517f8b37be2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484600081811061218e5761218e6156fa565b90506020020135905060018211156122505760015b8281101561224e578787828181106121bd576121bd6156fa565b9050602002013588886001846121d391906156e7565b8181106121e2576121e26156fa565b9050602002013510612220576040517f8b1ec82600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858582818110612232576122326156fa565b905060200201358261224491906157dc565b91506001016121a3565b505b600060155490506040518060a001604052808481526020018381526020018a1515815260200189898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060408051602089810282810182019093528982529283019290918a918a918291850190849080828437600092018290525093909452505083815260166020908152604091829020845181558482015160018201559184015160028301805460ff1916911515919091179055606084015180519293506123349260038501929190910190614e91565b5060808201518051612350916004840191602090910190614e91565b5050601580549150600061236383615a4c565b91905055507fc1063bd63d477506eb51343042d915c0d3377b74bb787bc0f4d255ca1a7039b68184848c8c8c8c8c6040516123a5989796959493929190615ab1565b60405180910390a198975050505050505050565b6000546040805163d09edf3160e01b81529051612404926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015612455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124799190615643565b6040517fba66f9fc000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b038381166024830152919091169063ba66f9fc906044016115a0565b6000546040805163d09edf3160e01b81529051612514926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b6109a781614001565b606080606061252d612041613059565b612563576040517fe4597a6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005546000808267ffffffffffffffff8111156125825761258261508e565b6040519080825280602002602001820160405280156125ab578160200160208202803683370190505b50905060008367ffffffffffffffff8111156125c9576125c961508e565b6040519080825280602002602001820160405280156125f2578160200160208202803683370190505b50905060008467ffffffffffffffff8111156126105761261061508e565b60405190808252806020026020018201604052801561268c57816020015b6126796040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161262e5790505b50905060005b8581101561286657600581815481106126ad576126ad6156fa565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03908116845260018201541693830193909352600283015490820152600382015460608201526004820154608082015260059091015460a08201528251839083908110612722576127226156fa565b60200260200101819052506000805b868110156127995783838151811061274b5761274b6156fa565b6020026020010151602001516001600160a01b0316868281518110612772576127726156fa565b60200260200101516001600160a01b0316036127915760019150612799565b600101612731565b508061285d578282815181106127b1576127b16156fa565b6020026020010151602001518587815181106127cf576127cf6156fa565b60200260200101906001600160a01b031690816001600160a01b03168152505060066000848481518110612805576128056156fa565b6020026020010151602001516001600160a01b03166001600160a01b0316815260200190815260200160002054848781518110612844576128446156fa565b60209081029190910101528561285981615a4c565b9650505b50600101612692565b5061287360056000614edc565b60008467ffffffffffffffff81111561288e5761288e61508e565b6040519080825280602002602001820160405280156128b7578160200160208202803683370190505b50905060008567ffffffffffffffff8111156128d5576128d561508e565b6040519080825280602002602001820160405280156128fe578160200160208202803683370190505b50905060005b868110156129e45785818151811061291e5761291e6156fa565b6020026020010151838281518110612938576129386156fa565b60200260200101906001600160a01b031690816001600160a01b03168152505084818151811061296a5761296a6156fa565b6020026020010151828281518110612984576129846156fa565b6020026020010181815250506129ba61299b613059565b8483815181106129ad576129ad6156fa565b60200260200101516140ea565b6129dc8382815181106129cf576129cf6156fa565b602002602001015161410f565b600101612904565b509199909850909650945050505050565b60007f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba612a6c60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b01573d6000803e3d6000fd5b6001600160a01b03851630148015612a9457506008546011546001600160a01b039081169116145b15612acb576040517fafdd001600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6015541580612adc57506015548310155b15612b13576040517fb88c02af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b601854811015612bb957600060188281548110612b3557612b356156fa565b60009182526020808320909101546001600160a01b03168083526019909152604090912054909150612b68908290614485565b6001600160a01b038116600090815260196020526040812054601a805491929091612b949084906156e7565b90915550506001600160a01b0316600090815260196020526040812055600101612b16565b50612bc660186000614efd565b612bd1878787611a8a565b60408051608081018252428152602080820197885281830196875260006060830181815285825260179092529290922090518155955160018701559351600286015592516003909401805460ff19169415159490941790935550949350505050565b6012546001600160a01b0316612c47613059565b6001600160a01b031614612c87576040517f236ef68600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015612eeb576000828152601760209081526040808320600290810154845260168352818420825160a081018452815481526001820154818601529181015460ff161515828401526003810180548451818702810187019095528085529294919360608601939092830182828015612d1e57602002820191906000526020600020905b815481526020019060010190808311612d0a575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015612d7657602002820191906000526020600020905b815481526020019060010190808311612d62575b50505050508152505090506000805b8251811015612edc576000858152601760205260409020600101546060840151805183908110612db757612db76156fa565b602002602001015111612df45782608001518181518110612dda57612dda6156fa565b602002602001015182612ded91906157dc565b9150612ed4565b826040015115612ecf57600083608001518281518110612e1657612e166156fa565b60200260200101519050600082600014612e57576060850151612e3a6001856156e7565b81518110612e4a57612e4a6156fa565b6020026020010151612e5a565b60005b60008881526017602052604081206001015491925090612e7b9083906156e7565b905060008287606001518681518110612e9657612e966156fa565b6020026020010151612ea891906156e7565b9050612eb4818561581c565b612ebe90836157ef565b612ec890876157dc565b9550505050505b612edc565b600101612d85565b50612ee8816001613aa1565b50505b60008281526014602090815260409182902060028101548154600190920154845186151581529384015285936001600160a01b03909116927f557deaca39aedd0a84876c0dcbcb715b9b68641286033d7e79a274bdfe8d8a40910160405180910390a45050565b6000600954600003612f655750600c5490565b600c54600954600a54600d54612f79614536565b612f8391906156e7565b612f8d91906157ef565b612f9f90670de0b6b3a76400006157ef565b612fa9919061581c565b6118e491906157dc565b6001600160a01b038216600090815260106020908152604080832054600e835281842054600f909352908320549091670de0b6b3a764000091612ff690866156e7565b61300091906157ef565b61300a919061581c565b61301491906157dc565b9392505050565b60006001600160e01b031982167f548475a00000000000000000000000000000000000000000000000000000000014806109e257506109e28261454e565b6000366014613067336112c8565b80156130735750808210155b156130a35760003661308583856156e7565b613090928290615b01565b61309991615b2b565b60601c9250505090565b339250505090565b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131209190615643565b6040517f91d14854000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b03838116602483015291909116906391d1485490604401602060405180830381865afa158015613188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ac91906157bf565b611490576040517f42abbb77000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b03821660248201526044015b60405180910390fd5b6001600160a01b038116613239576040517f0d03dd3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6011805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6002600754036132a4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600755565b6040516001600160a01b0383811660248301526044820183905261331f91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061458c565b505050565b806000036109a7576040517fa39a350e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613366612f52565b600c55613371614536565b600d556001600160a01b038116156109a75761338f81600c54612fb3565b6001600160a01b038216600090815260106020908152604080832093909355600c54600f9091529190205550565b60006133cb82600c54612fb3565b6001600160a01b038316600081815260106020908152604080832092909255815160c081019092529181529192506134fe919081016134126000546001600160a01b031690565b6001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561344f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134739190615643565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d49190615643565b6001600160a01b031681526020018381526020014281526020016000815260200142815250614608565b60008054906101000a90046001600160a01b03166001600160a01b031663f1c6bdf86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561354f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135739190615643565b6040517fe151fc610000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03919091169063e151fc6190602401600060405180830381600087803b1580156135cf57600080fd5b505af11580156135e3573d6000803e3d6000fd5b50505050816001600160a01b03167fdf29796aad820e4bb192f3a8d631b76519bcd2cbe77cc85af20e9df53cece0868260405161362291815260200190565b60405180910390a25050565b6136366147ca565b6001600160a01b038216613676576040517f7280679300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790556136a781614831565b6136dd576040517f7511254100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80516001908155602082015160025560408201518291906003906137019082615bb9565b50606082015160038201906137169082615bb9565b505050606081015160405161372b9190615c79565b604080519182900382208351602080860151918552840152916001600160a01b038516917feb175f148a71d29a5f7bf5439182fcd81e6ea9cfc8a11b54ab0f705fa98fa8ca91015b60405180910390a35050565b6137876147ca565b6109a781614883565b6137986147ca565b6137a1836131f9565b6137aa82614001565b61331f81613c26565b6040516001600160a01b0384811660248301528381166044830152606482018390526137ec9186918216906323b872dd906084016132d8565b50505050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015613846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061386a9190615643565b90506000816001600160a01b03166355ff58d46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138d09190615660565b90506000826001600160a01b031663328c4c306040518163ffffffff1660e01b8152600401602060405180830381865afa158015613912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139369190615660565b9050826001600160a01b03166391d1485483613950613059565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa15801561399a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139be91906157bf565b80613a4a5750826001600160a01b03166391d14854826139dc613059565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa158015613a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a4a91906157bf565b15613a5457505050565b81613a5d613059565b6040517f42abbb7700000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b031660248201526044016131f0565b81613aab81613324565b8180600003613ae6576040517fe05ce79000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613af0600061335e565b600b544210613b0b57613b03838561581c565b600a55613b44565b6000600a5442600b54613b1e91906156e7565b613b2891906157ef565b905083613b3582876157dc565b613b3f919061581c565b600a55505b600a54600003613b80576040517f76e6bcec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613b8a83426157dc565b600b81905542600d55600a5460408051878152602081018790529081019190915260608101919091527fe6ff9e5909ab32d770b5c8e779b77275ca8dda9d96cfb24d0287d80715dd02969060800160405180910390a150505050565b6000816000015182604001518360600151604051602001613c0993929190615c95565b604051602081830303815290604052805190602001209050919050565b8067ffffffffffffffff16600003613c6a576040517f4f0d3f4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6012805467ffffffffffffffff909216600160a01b027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015613d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d399190615660565b90506137ec8484613d4a85856157dc565b6148f2565b6060613d5e608083901c6149b0565b613d67836149b0565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b6060613db16fffffffffffffffffffffffffffffffff602084901c166149b0565b613dcc8360601b6bffffffffffffffffffffffff19166149b0565b604051602001613d7a9291909182527fffffffffffffffff00000000000000000000000000000000000000000000000016602082015260280190565b606081600003613e4b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613e755780613e5f81615a4c565b9150613e6e9050600a8361581c565b9150613e4f565b60008167ffffffffffffffff811115613e9057613e9061508e565b6040519080825280601f01601f191660200182016040528015613eba576020820181803683370190505b509050815b8515613f5f57613ed06001826156e7565b90506000613edf600a8861581c565b613eea90600a6157ef565b613ef490886156e7565b613eff906030615cd2565b905060008160f81b905080848481518110613f1c57613f1c6156fa565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613f56600a8961581c565b97505050613ebf565b50949350505050565b60008054604080517ff1c6bdf800000000000000000000000000000000000000000000000000000000815290516001600160a01b0380861693169163f1c6bdf89160048083019260209291908290030181865afa158015613fcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ff19190615643565b6001600160a01b03161492915050565b6001600160a01b038116614041576040517f87a80d4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6012805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316908117909155604080517fd509b017000000000000000000000000000000000000000000000000000000008152905163d509b017916004808201926020929091908290030181865afa1580156140c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140e49190615660565b60135550565b6001600160a01b038116600081815260066020526040902054611490919084906148f2565b6001600160a01b0381166000818152600660205260408082205490517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529092906370a0823190602401602060405180830381865afa15801561417d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141a19190615660565b90508181101561331f5760008054906101000a90046001600160a01b03166001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156141fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142209190615643565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561425d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142819190615643565b6001600160a01b0316836001600160a01b0316036144485760008054604080517f04baed9e00000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169163685dc6b19183916304baed9e916004808201926020929091908290030181865afa158015614305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143299190615643565b3061433486886156e7565b6040516001600160a01b039092166024830152604482015260640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f759cc4b500000000000000000000000000000000000000000000000000000000179052516001600160e01b031960e085901b1681526143c7929190600401615ceb565b6000604051808303816000875af11580156143e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261440e9190810190615d15565b509050806137ec576040517f1a299f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f8ca235960000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024016131f0565b61448e8261335e565b6001600160a01b038216600090815260106020526040902054156144b5576144b5826133bd565b6001600160a01b0382166000908152600e6020526040812080548392906144dd9084906157dc565b9250508190555080600960008282546144f691906157dc565b90915550506040518181526001600160a01b038316907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001613622565b600042600b54111561454757504290565b50600b5490565b60006001600160e01b031982167f286309c70000000000000000000000000000000000000000000000000000000014806109e257506109e282614b52565b60006145a16001600160a01b03841683614bb9565b905080516000141580156145c65750808060200190518101906145c491906157bf565b155b1561331f576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024016131f0565b8061461281614bc7565b81604001516006600084602001516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461464f91906157dc565b909155505060058054600181018255600091909152825160069091027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810180546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff19918216811790925560208601517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18401805491909516911681179093556040808601517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2840181905560608701517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db385015560808701517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db485015560a08701517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5909401939093555190917f21b8b94494ef1aff6ce0f5f3741800bdb27204fd430c1280b54d4cc653ae6f3a9161377391815260200190565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610f27576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081604001515160000361484857506000919050565b81606001515160000361485d57506000919050565b815115801561486e57506020820151155b1561487b57506000919050565b506001919050565b6001600160a01b0381166148c3576040517fe183dff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526149718482614bec565b6137ec576040516001600160a01b038481166024830152600060448301526149a691869182169063095ea7b3906064016132d8565b6137ec848261458c565b6000808260001c9050806fffffffffffffffffffffffffffffffff169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681614ad457614ad4615806565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60006001600160e01b031982167f179dfb450000000000000000000000000000000000000000000000000000000014806109e257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146109e2565b606061301483836000614c8f565b8051614bd290614d45565b614bdf8160200151614d9a565b6109a78160400151613324565b6000806000846001600160a01b031684604051614c099190615c79565b6000604051808303816000865af19150503d8060008114614c46576040519150601f19603f3d011682016040523d82523d6000602084013e614c4b565b606091505b5091509150818015614c75575080511580614c75575080806020019051810190614c7591906157bf565b8015611a2b5750505050506001600160a01b03163b151590565b606081471015614ccd576040517fcd7860590000000000000000000000000000000000000000000000000000000081523060048201526024016131f0565b600080856001600160a01b03168486604051614ce99190615c79565b60006040518083038185875af1925050503d8060008114614d26576040519150601f19603f3d011682016040523d82523d6000602084013e614d2b565b606091505b5091509150614d3b868383614dda565b9695505050505050565b6001600160a01b0381161580614d6357506001600160a01b03811630145b156109a7576040517f0cef278700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381166109a7576040517f9bfa9a6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082614def57614dea82614e4f565b613014565b8151158015614e0657506001600160a01b0384163b155b15614e48576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016131f0565b5080613014565b805115614e5f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828054828255906000526020600020908101928215614ecc579160200282015b82811115614ecc578251825591602001919060010190614eb1565b50614ed8929150614f17565b5090565b50805460008255600602906000526020600020908101906109a79190614f2c565b50805460008255906000526020600020908101906109a791905b5b80821115614ed85760008155600101614f18565b5b80821115614ed857805473ffffffffffffffffffffffffffffffffffffffff199081168255600182018054909116905560006002820181905560038201819055600482018190556005820155600601614f2d565b6001600160a01b03811681146109a757600080fd5b600060208284031215614fa857600080fd5b813561301481614f81565b600060208284031215614fc557600080fd5b81356001600160e01b03198116811461301457600080fd5b600060208284031215614fef57600080fd5b5035919050565b60008083601f84011261500857600080fd5b50813567ffffffffffffffff81111561502057600080fd5b6020830191508360208260051b850101111561503b57600080fd5b9250929050565b60008060006040848603121561505757600080fd5b83359250602084013567ffffffffffffffff81111561507557600080fd5b61508186828701614ff6565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156150c7576150c761508e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156150f6576150f661508e565b604052919050565b600067ffffffffffffffff8211156151185761511861508e565b50601f01601f191660200190565b600082601f83011261513757600080fd5b813561514a615145826150fe565b6150cd565b81815284602083860101111561515f57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561519157600080fd5b833561519c81614f81565b9250602084013567ffffffffffffffff808211156151b957600080fd5b90850190608082880312156151cd57600080fd5b6151d56150a4565b82358152602083013560208201526040830135828111156151f557600080fd5b61520189828601615126565b60408301525060608301358281111561521957600080fd5b61522589828601615126565b6060830152509350604086013591508082111561524157600080fd5b5061524e86828701615126565b9150509250925092565b60005b8381101561527357818101518382015260200161525b565b50506000910152565b60008151808452615294816020860160208601615258565b601f01601f19169290920160200192915050565b602081526000613014602083018461527c565b60008151808452602080850194506020840160005b838110156152f55781516001600160a01b0316875295820195908201906001016152d0565b509495945050505050565b60208152600061301460208301846152bb565b6000806040838503121561532657600080fd5b50508035926020909101359150565b6000806040838503121561534857600080fd5b82359150602083013561535a81614f81565b809150509250929050565b60008151808452602080850194506020840160005b838110156152f557815180516001600160a01b03908116895284820151168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c0909601959082019060010161537a565b6020815260006130146020830184615365565b60008151808452602080850194506020840160005b838110156152f5578151875295820195908201906001016153fe565b6020815281516020820152602082015160408201526040820151151560608201526000606083015160a0608084015261545660c08401826153e9565b90506080840151601f198483030160a0850152611a2b82826153e9565b67ffffffffffffffff811681146109a757600080fd5b60006020828403121561549b57600080fd5b813561301481615473565b6000806000606084860312156154bb57600080fd5b833592506020840135915060408401356154d481614f81565b809150509250925092565b600080604083850312156154f257600080fd5b82356154fd81614f81565b946020939093013593505050565b80151581146109a757600080fd5b60008060008060006060868803121561553157600080fd5b853561553c8161550b565b9450602086013567ffffffffffffffff8082111561555957600080fd5b61556589838a01614ff6565b9096509450604088013591508082111561557e57600080fd5b5061558b88828901614ff6565b969995985093965092949392505050565b6060815260006155af6060830186615365565b82810360208401526155c181866152bb565b90508281036040840152614d3b81856153e9565b600080600080600060a086880312156155ed57600080fd5b8535945060208601359350604086013561560681614f81565b94979396509394606081013594506080013592915050565b6000806040838503121561563157600080fd5b82359150602083013561535a8161550b565b60006020828403121561565557600080fd5b815161301481614f81565b60006020828403121561567257600080fd5b5051919050565b83815260406020808301829052908201839052600090849060608401835b868110156156c55783356156aa81614f81565b6001600160a01b031682529282019290820190600101615697565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156109e2576109e26156d1565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000806000806080858703121561573c57600080fd5b845161574781614f81565b602086015190945061575881614f81565b604086015190935061576981614f81565b606086015190925061577a81615473565b939692955090935050565b600181811c9082168061579957607f821691505b6020821081036157b957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156157d157600080fd5b81516130148161550b565b808201808211156109e2576109e26156d1565b80820281158282048414176109e2576109e26156d1565b634e487b7160e01b600052601260045260246000fd5b60008261583957634e487b7160e01b600052601260045260246000fd5b500490565b60008151615850818560208601615258565b9290920192915050565b7f446174612061737365727465643a20307800000000000000000000000000000081526000865160206158938260118601838c01615258565b7f20666f72206461746149643a203078000000000000000000000000000000000060119285019283015287516158ce81838501848c01615258565b7f20616e642061737365727465723a203078000000000000000000000000000000920181810192909252865161590a81603185018a8501615258565b7f2061742074696d657374616d703a2000000000000000000000000000000000006031939091019283015285516159478160408501848a01615258565b7f20696e207468652044617461417373657274657220636f6e747261637420617460409390910192830152507f203078000000000000000000000000000000000000000000000000000000000060608201526159d26159a9606383018661583e565b7f2069732076616c69642e000000000000000000000000000000000000000000008152600a0190565b98975050505050505050565b60006101208083526159f28184018d61527c565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006000198203615a5f57615a5f6156d1565b5060010190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115615a9857600080fd5b8260051b80836020870137939093016020019392505050565b888152876020820152866040820152851515606082015260c060808201526000615adf60c083018688615a66565b82810360a0840152615af2818587615a66565b9b9a5050505050505050505050565b60008085851115615b1157600080fd5b83861115615b1e57600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015611a2e5760149490940360031b84901b1690921692915050565b601f82111561331f576000816000526020600020601f850160051c81016020861015615b9a5750805b601f850160051c820191505b818110156115ce57828155600101615ba6565b815167ffffffffffffffff811115615bd357615bd361508e565b615be781615be18454615785565b84615b71565b602080601f831160018114615c1c5760008415615c045750858301515b600019600386901b1c1916600185901b1785556115ce565b600085815260208120601f198616915b82811015615c4b57888601518255948401946001909101908401615c2c565b5085821015615c695787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251615c8b818460208701615258565b9190910192915050565b83815260008351615cad816020850160208801615258565b80830190508351615cc5816020840160208801615258565b0160200195945050505050565b60ff81811683821601908111156109e2576109e26156d1565b6001600160a01b0383168152604060208201526000615d0d604083018461527c565b949350505050565b60008060408385031215615d2857600080fd5b8251615d338161550b565b602084015190925067ffffffffffffffff811115615d5057600080fd5b8301601f81018513615d6157600080fd5b8051615d6f615145826150fe565b818152866020838501011115615d8457600080fd5b615d95826020830160208601615258565b809350505050925092905056fea2646970667358221220b4a47ea87a2145d0f114ef961e73851c76c449c08004c637cfe6e43a576acb9664736f6c63430008170033",
        "sourceMap": "834:12493:146:-:0;;;;;;;;;;;;-1:-1:-1;4069:1:117;1621:37:22;;4083:22:117::1;:20;:22::i;:::-;1713:1:56::0;1917:7;:21;834:12493:146;;7711:422:23;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:23;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:23;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:23;-1:-1:-1;;;;;8035:33:23;;;;;8087:29;;158:50:267;;;8087:29:23;;146:2:267;131:18;8087:29:23;;;;;;;7981:146;7760:373;7711:422::o;14:200:267:-;834:12493:146;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106103775760003560e01c806375fa0b76116101d3578063a6d14d6911610104578063bf5c3252116100a2578063d448a4ec1161007c578063d448a4ec14610999578063d509b017146109aa578063d701aedb146109b3578063f1b156b2146109bc57600080fd5b8063bf5c32521461095c578063c0231ff61461096f578063c84c84f01461098657600080fd5b8063b75d4e24116100de578063b75d4e24146108db578063bc7d2a331461090f578063bcb6192014610922578063bf14d4a91461093557600080fd5b8063a6d14d69146108ae578063b33ec618146108b7578063b74795d9146108ca57600080fd5b80637e5f43ff116101715780638921a6141161014b5780638921a6141461082d57806393ee663b14610840578063956ae17b14610853578063a694fc3a1461089b57600080fd5b80637e5f43ff1461074257806381d0951714610755578063883028841461076857600080fd5b80637998a1c4116101ad5780637998a1c4146106cf5780637b0a47ee146106d75780637b9a9c7f146106e05780637da0a8771461073a57600080fd5b806375fa0b7614610691578063772fd8da146106a657806378802654146106c657600080fd5b80633ecd7972116102ad5780636315a4551161024b5780636c67e807116102255780636c67e8071461063a5780636e73ba5b1461064d57806370a082311461065557806372f702f31461067e57600080fd5b80636315a455146105ff57806364e6bbe514610614578063654e51e71461062757600080fd5b806354f6127f1161028757806354f6127f1461059f57806354fd4d50146105c95780635600f04f146105e4578063572b6c05146105ec57600080fd5b80633ecd79721461052857806342dfe958146105775780634a79d50c1461058a57600080fd5b806324e302701161031a5780632a4e1904116102f45780632a4e19041461046f5780632e17de78146104e45780632e84db5f146104f7578063372500ab1461052057600080fd5b806324e3027014610441578063272bbd44146104545780632979b6701461046757600080fd5b80630f14c8cf116103565780630f14c8cf146103e55780630fe5bc3b146103fa57806318160ddd1461042557806320402e1d1461042e57600080fd5b80628cc2621461037c57806301ffc9a7146103a25780630dfc4357146103c5575b600080fd5b61038f61038a366004614f96565b6109cf565b6040519081526020015b60405180910390f35b6103b56103b0366004614fb3565b6109e8565b6040519015158152602001610399565b61038f6103d3366004614f96565b60196020526000908152604090205481565b6103f86103f3366004614f96565b610a26565b005b61040d610408366004614fdd565b610b0c565b6040516001600160a01b039091168152602001610399565b61038f60095481565b60115461040d906001600160a01b031681565b6103f861044f366004615042565b610b36565b6103f8610462366004615042565b610c5c565b6103f8610d4b565b6104b361047d366004614fdd565b6014602052600090815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b604051610399949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6103f86104f2366004614fdd565b610f29565b61038f610505366004614f96565b6001600160a01b031660009081526006602052604090205490565b6103f8611023565b61055a610536366004614fdd565b60166020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610399565b6103f861058536600461517c565b611049565b6105926111da565b60405161039991906152a8565b6105b26105ad366004614fdd565b61126f565b604080519215158352602083019190915201610399565b60015460025460408051928352602083019190915201610399565b6105926112b6565b6103b56105fa366004614f96565b6112c8565b610607611350565b6040516103999190615300565b6103f8610622366004614fdd565b6113b1565b6103f8610635366004615313565b61147e565b6103f8610648366004615335565b611494565b61038f603281565b61038f610663366004614f96565b6001600160a01b03166000908152600e602052604090205490565b60085461040d906001600160a01b031681565b6106996115d6565b60405161039991906153d6565b6106b96106b4366004614fdd565b611679565b604051610399919061541a565b61038f60155481565b61038f611799565b61038f600a5481565b6107186106ee366004614fdd565b60176020526000908152604090208054600182015460028301546003909301549192909160ff1684565b6040805194855260208501939093529183015215156060820152608001610399565b61040d6118e9565b61038f610750366004615313565b611961565b6103f8610763366004615489565b611a36565b6107ef610776366004614fdd565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260146020908152604091829020825160808101845281548152600182015492810192909252600201546001600160a01b03811692820192909252600160a01b90910460ff161515606082015290565b604051610399919081518152602080830151908201526040808301516001600160a01b03169082015260609182015115159181019190915260800190565b60125461040d906001600160a01b031681565b61038f61084e3660046154a6565b611a8a565b610866610861366004614fdd565b611e41565b604051610399919081518152602080830151908201526040808301519082015260609182015115159181019190915260800190565b6103f86108a9366004614fdd565b611eb8565b61038f600b5481565b6103f86108c53660046154df565b612036565b6000546001600160a01b031661040d565b6012546108f690600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610399565b61038f61091d366004615519565b6120ad565b6103f8610930366004615335565b6123b9565b61038f7f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba81565b6103f861096a366004614f96565b6124c9565b61097761251d565b6040516103999392919061559c565b61038f6109943660046155d5565b6129f5565b6103f86109a7366004614fdd565b50565b61038f60135481565b61038f601a5481565b6103f86109ca36600461561e565b612c33565b60006109e2826109dd612f52565b612fb3565b92915050565b60006001600160e01b031982167fb8fe3ea20000000000000000000000000000000000000000000000000000000014806109e257506109e28261301b565b6000546040805163d09edf3160e01b81529051610b03926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190615643565b6001600160a01b03166355ff58d46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af69190615660565b610afe613059565b6130ab565b6109a7816131f9565b60188181548110610b1c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546040805163d09edf3160e01b81529051610b81926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190615643565b6001600160a01b0316637d540a648484846040518463ffffffff1660e01b8152600401610c2593929190615679565b600060405180830381600087803b158015610c3f57600080fd5b505af1158015610c53573d6000803e3d6000fd5b50505050505050565b6000546040805163d09edf3160e01b81529051610ca7926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c9190615643565b6001600160a01b031663648154538484846040518463ffffffff1660e01b8152600401610c2593929190615679565b610d53613268565b6000610d5d613059565b6001600160a01b03811660009081526019602052604090205490915015610f1c576001600160a01b0381166000908152601960205260408120805490829055601a805491928392610daf9084906156e7565b90915550600090505b601854811015610ec057826001600160a01b031660188281548110610ddf57610ddf6156fa565b6000918252602090912001546001600160a01b031603610eb85760188054610e09906001906156e7565b81548110610e1957610e196156fa565b600091825260209091200154601880546001600160a01b039092169183908110610e4557610e456156fa565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506018805480610e8457610e84615710565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055610ec0565b600101610db8565b50604080516001600160a01b0384168152602081018390527f2b96a2ef42d32e30dc79e8bf1b1e41bb95318494f4f578c8b28aa8dba3adb2d3910160405180910390a1600854610f1a906001600160a01b031683836132ab565b505b50610f276001600755565b565b610f31613268565b80610f3b81613324565b6000610f45613059565b9050610f508161335e565b6001600160a01b0381166000908152600e602052604081208054859290610f789084906156e7565b925050819055508260096000828254610f9191906156e7565b9091555050600854610fad906001600160a01b031682856132ab565b6001600160a01b03811660009081526010602052604090205415610fd457610fd4816133bd565b806001600160a01b03167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758460405161100f91815260200190565b60405180910390a250506109a76001600755565b61102b613268565b6000611035613059565b90506110408161335e565b610f1c816133bd565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156110945750825b905060008267ffffffffffffffff1660011480156110b15750303b155b9050811580156110bf575080155b156110f6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000166001178555831561114157845468ff00000000000000001916680100000000000000001785555b61114b888861362e565b600080600080898060200190518101906111659190615726565b93509350935093506111768461377f565b611181838383613790565b5050505083156111d057845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6060600160030180546111ec90615785565b80601f016020809104026020016040519081016040528092919081815260200182805461121890615785565b80156112655780601f1061123a57610100808354040283529160200191611265565b820191906000526020600020905b81548152906001019060200180831161124857829003601f168201915b5050505050905090565b6000818152601460205260408120600201548190600160a01b900460ff1661129c57506000928392509050565b505060009081526014602052604090206001908101549091565b6060600160020180546111ec90615785565b600080546040517f572b6c050000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301529091169063572b6c0590602401602060405180830381865afa15801561132c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e291906157bf565b6060601880548060200260200160405190810160405280929190818152602001828054801561126557602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161138a575050505050905090565b6000546040805163d09edf3160e01b815290516113fc926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b611404613268565b8061140e81613324565b61142d611419613059565b6011546001600160a01b03169030856137b3565b601154604080516001600160a01b039092168252602082018490527f643b1bd5b160e780fef319c0a18a3535edb10da7f7136320b2935bb6f1a9f605910160405180910390a1506109a76001600755565b6114866137f2565b6114908282613aa1565b5050565b6000546040805163d09edf3160e01b815290516114df926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015611530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115549190615643565b6040517fe1788154000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b038381166024830152919091169063e1788154906044015b600060405180830381600087803b1580156115ba57600080fd5b505af11580156115ce573d6000803e3d6000fd5b505050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156116705760008481526020908190206040805160c0810182526006860290920180546001600160a01b0390811684526001808301549091168486015260028201549284019290925260038101546060840152600481015460808401526005015460a083015290835290920191016115fa565b50505050905090565b6116ad6040518060a00160405280600081526020016000815260200160001515815260200160608152602001606081525090565b600082815260166020908152604091829020825160a08101845281548152600182015481840152600282015460ff16151581850152600382018054855181860281018601909652808652919492936060860193929083018282801561173157602002820191906000526020600020905b81548152602001906001019080831161171d575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561178957602002820191906000526020600020905b815481526020019060010190808311611775575b5050505050815250509050919050565b604080516080810182526001805482526002546020830152600380546000946118e4949392908401916117cb90615785565b80601f01602080910402602001604051908101604052809291908181526020018280546117f790615785565b80156118445780601f1061181957610100808354040283529160200191611844565b820191906000526020600020905b81548152906001019060200180831161182757829003601f168201915b5050505050815260200160038201805461185d90615785565b80601f016020809104026020016040519081016040528092919081815260200182805461188990615785565b80156118d65780601f106118ab576101008083540402835291602001916118d6565b820191906000526020600020905b8154815290600101906020018083116118b957829003601f168201915b505050505081525050613be6565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b0316637da0a8776040518163ffffffff1660e01b8152600401602060405180830381865afa15801561193d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e49190615643565b60008261196d81613324565b82806000036119a8576040517fe05ce79000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b544211156119bb5760009250611a2e565b600b546119c885426157dc565b11156119df5742600b546119dc91906156e7565b93505b600954600003611a0757600a546119f685876157ef565b611a0091906157ef565b9250611a2e565b600954600a54611a1786886157ef565b611a2191906157ef565b611a2b919061581c565b92505b505092915050565b6000546040805163d09edf3160e01b81529051611a81926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b6109a781613c26565b60007f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba611b8d60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b259190615643565b6040517ffdd5205f000000000000000000000000000000000000000000000000000000008152306004820152602481018490526001600160a01b03919091169063fdd5205f906044016020604051808303816000875af1158015610ad2573d6000803e3d6000fd5b6001600160a01b03831615611ba25782611baa565b611baa613059565b6012546011546040517f4360af3d0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152929550600092911690634360af3d90602401602060405180830381865afa158015611c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c399190615660565b9050611c5a611c46613059565b6011546001600160a01b03169030846137b3565b601254601154611c77916001600160a01b03918216911683613cac565b6012546001600160a01b0316636457c979611c9187613d4f565b611c9a89613d4f565b611ca388613d90565b611cac42613e08565b611cb530613d90565b604051602001611cc995949392919061585a565b60408051808303601f190181529082905260125460115460135460e086901b6001600160e01b0319168552611d2a948b933093600093600160a01b90920467ffffffffffffffff16926001600160a01b03909116918b9185906004016159de565b6020604051808303816000875af1158015611d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6d9190615660565b6040805160808101825288815260208082018981526001600160a01b03808a168486018181526000606087018181528982526014909652879020955186559251600186015591516002909401805493511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009094169490911693909317919091179091559051919450849188907f29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec90611e30908a815260200190565b60405180910390a450509392505050565b611e6e60405180608001604052806000815260200160008152602001600081526020016000151581525090565b5060009081526017602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff161515606082015290565b611ec0613268565b80611eca81613324565b601854603211611f06576040517ff5fc3d4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611f10613059565b6001600160a01b03811660009081526019602052604081205491925003611f8a57601880546001810182556000919091527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790555b6001600160a01b03811660009081526019602052604081208054859290611fb29084906157dc565b9250508190555082601a6000828254611fcb91906157dc565b9091555050600854611fe8906001600160a01b03168230866137b3565b604080516001600160a01b0383168152602081018590527f092e6d0fb46de0430e74e875a283441f97dbd0a5f7495483c8a78e78c5ef8683910160405180910390a150506109a76001600755565b612046612041613059565b613f68565b61207c576040517fe4597a6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216600090815260066020526040812080548392906120a49084906156e7565b90915550505050565b600080546040805163d09edf3160e01b815290516120f9926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b8360018110806121095750601481115b15612140576040517fdb680bc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808314612179576040517f8b37be2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484600081811061218e5761218e6156fa565b90506020020135905060018211156122505760015b8281101561224e578787828181106121bd576121bd6156fa565b9050602002013588886001846121d391906156e7565b8181106121e2576121e26156fa565b9050602002013510612220576040517f8b1ec82600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858582818110612232576122326156fa565b905060200201358261224491906157dc565b91506001016121a3565b505b600060155490506040518060a001604052808481526020018381526020018a1515815260200189898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060408051602089810282810182019093528982529283019290918a918a918291850190849080828437600092018290525093909452505083815260166020908152604091829020845181558482015160018201559184015160028301805460ff1916911515919091179055606084015180519293506123349260038501929190910190614e91565b5060808201518051612350916004840191602090910190614e91565b5050601580549150600061236383615a4c565b91905055507fc1063bd63d477506eb51343042d915c0d3377b74bb787bc0f4d255ca1a7039b68184848c8c8c8c8c6040516123a5989796959493929190615ab1565b60405180910390a198975050505050505050565b6000546040805163d09edf3160e01b81529051612404926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015612455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124799190615643565b6040517fba66f9fc000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b038381166024830152919091169063ba66f9fc906044016115a0565b6000546040805163d09edf3160e01b81529051612514926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610a71573d6000803e3d6000fd5b6109a781614001565b606080606061252d612041613059565b612563576040517fe4597a6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005546000808267ffffffffffffffff8111156125825761258261508e565b6040519080825280602002602001820160405280156125ab578160200160208202803683370190505b50905060008367ffffffffffffffff8111156125c9576125c961508e565b6040519080825280602002602001820160405280156125f2578160200160208202803683370190505b50905060008467ffffffffffffffff8111156126105761261061508e565b60405190808252806020026020018201604052801561268c57816020015b6126796040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161262e5790505b50905060005b8581101561286657600581815481106126ad576126ad6156fa565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03908116845260018201541693830193909352600283015490820152600382015460608201526004820154608082015260059091015460a08201528251839083908110612722576127226156fa565b60200260200101819052506000805b868110156127995783838151811061274b5761274b6156fa565b6020026020010151602001516001600160a01b0316868281518110612772576127726156fa565b60200260200101516001600160a01b0316036127915760019150612799565b600101612731565b508061285d578282815181106127b1576127b16156fa565b6020026020010151602001518587815181106127cf576127cf6156fa565b60200260200101906001600160a01b031690816001600160a01b03168152505060066000848481518110612805576128056156fa565b6020026020010151602001516001600160a01b03166001600160a01b0316815260200190815260200160002054848781518110612844576128446156fa565b60209081029190910101528561285981615a4c565b9650505b50600101612692565b5061287360056000614edc565b60008467ffffffffffffffff81111561288e5761288e61508e565b6040519080825280602002602001820160405280156128b7578160200160208202803683370190505b50905060008567ffffffffffffffff8111156128d5576128d561508e565b6040519080825280602002602001820160405280156128fe578160200160208202803683370190505b50905060005b868110156129e45785818151811061291e5761291e6156fa565b6020026020010151838281518110612938576129386156fa565b60200260200101906001600160a01b031690816001600160a01b03168152505084818151811061296a5761296a6156fa565b6020026020010151828281518110612984576129846156fa565b6020026020010181815250506129ba61299b613059565b8483815181106129ad576129ad6156fa565b60200260200101516140ea565b6129dc8382815181106129cf576129cf6156fa565b602002602001015161410f565b600101612904565b509199909850909650945050505050565b60007f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba612a6c60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b01573d6000803e3d6000fd5b6001600160a01b03851630148015612a9457506008546011546001600160a01b039081169116145b15612acb576040517fafdd001600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6015541580612adc57506015548310155b15612b13576040517fb88c02af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b601854811015612bb957600060188281548110612b3557612b356156fa565b60009182526020808320909101546001600160a01b03168083526019909152604090912054909150612b68908290614485565b6001600160a01b038116600090815260196020526040812054601a805491929091612b949084906156e7565b90915550506001600160a01b0316600090815260196020526040812055600101612b16565b50612bc660186000614efd565b612bd1878787611a8a565b60408051608081018252428152602080820197885281830196875260006060830181815285825260179092529290922090518155955160018701559351600286015592516003909401805460ff19169415159490941790935550949350505050565b6012546001600160a01b0316612c47613059565b6001600160a01b031614612c87576040517f236ef68600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015612eeb576000828152601760209081526040808320600290810154845260168352818420825160a081018452815481526001820154818601529181015460ff161515828401526003810180548451818702810187019095528085529294919360608601939092830182828015612d1e57602002820191906000526020600020905b815481526020019060010190808311612d0a575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015612d7657602002820191906000526020600020905b815481526020019060010190808311612d62575b50505050508152505090506000805b8251811015612edc576000858152601760205260409020600101546060840151805183908110612db757612db76156fa565b602002602001015111612df45782608001518181518110612dda57612dda6156fa565b602002602001015182612ded91906157dc565b9150612ed4565b826040015115612ecf57600083608001518281518110612e1657612e166156fa565b60200260200101519050600082600014612e57576060850151612e3a6001856156e7565b81518110612e4a57612e4a6156fa565b6020026020010151612e5a565b60005b60008881526017602052604081206001015491925090612e7b9083906156e7565b905060008287606001518681518110612e9657612e966156fa565b6020026020010151612ea891906156e7565b9050612eb4818561581c565b612ebe90836157ef565b612ec890876157dc565b9550505050505b612edc565b600101612d85565b50612ee8816001613aa1565b50505b60008281526014602090815260409182902060028101548154600190920154845186151581529384015285936001600160a01b03909116927f557deaca39aedd0a84876c0dcbcb715b9b68641286033d7e79a274bdfe8d8a40910160405180910390a45050565b6000600954600003612f655750600c5490565b600c54600954600a54600d54612f79614536565b612f8391906156e7565b612f8d91906157ef565b612f9f90670de0b6b3a76400006157ef565b612fa9919061581c565b6118e491906157dc565b6001600160a01b038216600090815260106020908152604080832054600e835281842054600f909352908320549091670de0b6b3a764000091612ff690866156e7565b61300091906157ef565b61300a919061581c565b61301491906157dc565b9392505050565b60006001600160e01b031982167f548475a00000000000000000000000000000000000000000000000000000000014806109e257506109e28261454e565b6000366014613067336112c8565b80156130735750808210155b156130a35760003661308583856156e7565b613090928290615b01565b61309991615b2b565b60601c9250505090565b339250505090565b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131209190615643565b6040517f91d14854000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b03838116602483015291909116906391d1485490604401602060405180830381865afa158015613188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ac91906157bf565b611490576040517f42abbb77000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b03821660248201526044015b60405180910390fd5b6001600160a01b038116613239576040517f0d03dd3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6011805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6002600754036132a4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600755565b6040516001600160a01b0383811660248301526044820183905261331f91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061458c565b505050565b806000036109a7576040517fa39a350e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613366612f52565b600c55613371614536565b600d556001600160a01b038116156109a75761338f81600c54612fb3565b6001600160a01b038216600090815260106020908152604080832093909355600c54600f9091529190205550565b60006133cb82600c54612fb3565b6001600160a01b038316600081815260106020908152604080832092909255815160c081019092529181529192506134fe919081016134126000546001600160a01b031690565b6001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561344f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134739190615643565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d49190615643565b6001600160a01b031681526020018381526020014281526020016000815260200142815250614608565b60008054906101000a90046001600160a01b03166001600160a01b031663f1c6bdf86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561354f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135739190615643565b6040517fe151fc610000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03919091169063e151fc6190602401600060405180830381600087803b1580156135cf57600080fd5b505af11580156135e3573d6000803e3d6000fd5b50505050816001600160a01b03167fdf29796aad820e4bb192f3a8d631b76519bcd2cbe77cc85af20e9df53cece0868260405161362291815260200190565b60405180910390a25050565b6136366147ca565b6001600160a01b038216613676576040517f7280679300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790556136a781614831565b6136dd576040517f7511254100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80516001908155602082015160025560408201518291906003906137019082615bb9565b50606082015160038201906137169082615bb9565b505050606081015160405161372b9190615c79565b604080519182900382208351602080860151918552840152916001600160a01b038516917feb175f148a71d29a5f7bf5439182fcd81e6ea9cfc8a11b54ab0f705fa98fa8ca91015b60405180910390a35050565b6137876147ca565b6109a781614883565b6137986147ca565b6137a1836131f9565b6137aa82614001565b61331f81613c26565b6040516001600160a01b0384811660248301528381166044830152606482018390526137ec9186918216906323b872dd906084016132d8565b50505050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015613846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061386a9190615643565b90506000816001600160a01b03166355ff58d46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138d09190615660565b90506000826001600160a01b031663328c4c306040518163ffffffff1660e01b8152600401602060405180830381865afa158015613912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139369190615660565b9050826001600160a01b03166391d1485483613950613059565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa15801561399a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139be91906157bf565b80613a4a5750826001600160a01b03166391d14854826139dc613059565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa158015613a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a4a91906157bf565b15613a5457505050565b81613a5d613059565b6040517f42abbb7700000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b031660248201526044016131f0565b81613aab81613324565b8180600003613ae6576040517fe05ce79000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613af0600061335e565b600b544210613b0b57613b03838561581c565b600a55613b44565b6000600a5442600b54613b1e91906156e7565b613b2891906157ef565b905083613b3582876157dc565b613b3f919061581c565b600a55505b600a54600003613b80576040517f76e6bcec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613b8a83426157dc565b600b81905542600d55600a5460408051878152602081018790529081019190915260608101919091527fe6ff9e5909ab32d770b5c8e779b77275ca8dda9d96cfb24d0287d80715dd02969060800160405180910390a150505050565b6000816000015182604001518360600151604051602001613c0993929190615c95565b604051602081830303815290604052805190602001209050919050565b8067ffffffffffffffff16600003613c6a576040517f4f0d3f4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6012805467ffffffffffffffff909216600160a01b027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015613d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d399190615660565b90506137ec8484613d4a85856157dc565b6148f2565b6060613d5e608083901c6149b0565b613d67836149b0565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b6060613db16fffffffffffffffffffffffffffffffff602084901c166149b0565b613dcc8360601b6bffffffffffffffffffffffff19166149b0565b604051602001613d7a9291909182527fffffffffffffffff00000000000000000000000000000000000000000000000016602082015260280190565b606081600003613e4b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613e755780613e5f81615a4c565b9150613e6e9050600a8361581c565b9150613e4f565b60008167ffffffffffffffff811115613e9057613e9061508e565b6040519080825280601f01601f191660200182016040528015613eba576020820181803683370190505b509050815b8515613f5f57613ed06001826156e7565b90506000613edf600a8861581c565b613eea90600a6157ef565b613ef490886156e7565b613eff906030615cd2565b905060008160f81b905080848481518110613f1c57613f1c6156fa565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613f56600a8961581c565b97505050613ebf565b50949350505050565b60008054604080517ff1c6bdf800000000000000000000000000000000000000000000000000000000815290516001600160a01b0380861693169163f1c6bdf89160048083019260209291908290030181865afa158015613fcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ff19190615643565b6001600160a01b03161492915050565b6001600160a01b038116614041576040517f87a80d4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6012805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316908117909155604080517fd509b017000000000000000000000000000000000000000000000000000000008152905163d509b017916004808201926020929091908290030181865afa1580156140c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140e49190615660565b60135550565b6001600160a01b038116600081815260066020526040902054611490919084906148f2565b6001600160a01b0381166000818152600660205260408082205490517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529092906370a0823190602401602060405180830381865afa15801561417d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141a19190615660565b90508181101561331f5760008054906101000a90046001600160a01b03166001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156141fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142209190615643565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561425d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142819190615643565b6001600160a01b0316836001600160a01b0316036144485760008054604080517f04baed9e00000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169163685dc6b19183916304baed9e916004808201926020929091908290030181865afa158015614305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143299190615643565b3061433486886156e7565b6040516001600160a01b039092166024830152604482015260640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f759cc4b500000000000000000000000000000000000000000000000000000000179052516001600160e01b031960e085901b1681526143c7929190600401615ceb565b6000604051808303816000875af11580156143e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261440e9190810190615d15565b509050806137ec576040517f1a299f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f8ca235960000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024016131f0565b61448e8261335e565b6001600160a01b038216600090815260106020526040902054156144b5576144b5826133bd565b6001600160a01b0382166000908152600e6020526040812080548392906144dd9084906157dc565b9250508190555080600960008282546144f691906157dc565b90915550506040518181526001600160a01b038316907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001613622565b600042600b54111561454757504290565b50600b5490565b60006001600160e01b031982167f286309c70000000000000000000000000000000000000000000000000000000014806109e257506109e282614b52565b60006145a16001600160a01b03841683614bb9565b905080516000141580156145c65750808060200190518101906145c491906157bf565b155b1561331f576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024016131f0565b8061461281614bc7565b81604001516006600084602001516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461464f91906157dc565b909155505060058054600181018255600091909152825160069091027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810180546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff19918216811790925560208601517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18401805491909516911681179093556040808601517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2840181905560608701517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db385015560808701517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db485015560a08701517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5909401939093555190917f21b8b94494ef1aff6ce0f5f3741800bdb27204fd430c1280b54d4cc653ae6f3a9161377391815260200190565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610f27576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081604001515160000361484857506000919050565b81606001515160000361485d57506000919050565b815115801561486e57506020820151155b1561487b57506000919050565b506001919050565b6001600160a01b0381166148c3576040517fe183dff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526149718482614bec565b6137ec576040516001600160a01b038481166024830152600060448301526149a691869182169063095ea7b3906064016132d8565b6137ec848261458c565b6000808260001c9050806fffffffffffffffffffffffffffffffff169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681614ad457614ad4615806565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60006001600160e01b031982167f179dfb450000000000000000000000000000000000000000000000000000000014806109e257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146109e2565b606061301483836000614c8f565b8051614bd290614d45565b614bdf8160200151614d9a565b6109a78160400151613324565b6000806000846001600160a01b031684604051614c099190615c79565b6000604051808303816000865af19150503d8060008114614c46576040519150601f19603f3d011682016040523d82523d6000602084013e614c4b565b606091505b5091509150818015614c75575080511580614c75575080806020019051810190614c7591906157bf565b8015611a2b5750505050506001600160a01b03163b151590565b606081471015614ccd576040517fcd7860590000000000000000000000000000000000000000000000000000000081523060048201526024016131f0565b600080856001600160a01b03168486604051614ce99190615c79565b60006040518083038185875af1925050503d8060008114614d26576040519150601f19603f3d011682016040523d82523d6000602084013e614d2b565b606091505b5091509150614d3b868383614dda565b9695505050505050565b6001600160a01b0381161580614d6357506001600160a01b03811630145b156109a7576040517f0cef278700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381166109a7576040517f9bfa9a6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082614def57614dea82614e4f565b613014565b8151158015614e0657506001600160a01b0384163b155b15614e48576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016131f0565b5080613014565b805115614e5f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828054828255906000526020600020908101928215614ecc579160200282015b82811115614ecc578251825591602001919060010190614eb1565b50614ed8929150614f17565b5090565b50805460008255600602906000526020600020908101906109a79190614f2c565b50805460008255906000526020600020908101906109a791905b5b80821115614ed85760008155600101614f18565b5b80821115614ed857805473ffffffffffffffffffffffffffffffffffffffff199081168255600182018054909116905560006002820181905560038201819055600482018190556005820155600601614f2d565b6001600160a01b03811681146109a757600080fd5b600060208284031215614fa857600080fd5b813561301481614f81565b600060208284031215614fc557600080fd5b81356001600160e01b03198116811461301457600080fd5b600060208284031215614fef57600080fd5b5035919050565b60008083601f84011261500857600080fd5b50813567ffffffffffffffff81111561502057600080fd5b6020830191508360208260051b850101111561503b57600080fd5b9250929050565b60008060006040848603121561505757600080fd5b83359250602084013567ffffffffffffffff81111561507557600080fd5b61508186828701614ff6565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156150c7576150c761508e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156150f6576150f661508e565b604052919050565b600067ffffffffffffffff8211156151185761511861508e565b50601f01601f191660200190565b600082601f83011261513757600080fd5b813561514a615145826150fe565b6150cd565b81815284602083860101111561515f57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561519157600080fd5b833561519c81614f81565b9250602084013567ffffffffffffffff808211156151b957600080fd5b90850190608082880312156151cd57600080fd5b6151d56150a4565b82358152602083013560208201526040830135828111156151f557600080fd5b61520189828601615126565b60408301525060608301358281111561521957600080fd5b61522589828601615126565b6060830152509350604086013591508082111561524157600080fd5b5061524e86828701615126565b9150509250925092565b60005b8381101561527357818101518382015260200161525b565b50506000910152565b60008151808452615294816020860160208601615258565b601f01601f19169290920160200192915050565b602081526000613014602083018461527c565b60008151808452602080850194506020840160005b838110156152f55781516001600160a01b0316875295820195908201906001016152d0565b509495945050505050565b60208152600061301460208301846152bb565b6000806040838503121561532657600080fd5b50508035926020909101359150565b6000806040838503121561534857600080fd5b82359150602083013561535a81614f81565b809150509250929050565b60008151808452602080850194506020840160005b838110156152f557815180516001600160a01b03908116895284820151168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c0909601959082019060010161537a565b6020815260006130146020830184615365565b60008151808452602080850194506020840160005b838110156152f5578151875295820195908201906001016153fe565b6020815281516020820152602082015160408201526040820151151560608201526000606083015160a0608084015261545660c08401826153e9565b90506080840151601f198483030160a0850152611a2b82826153e9565b67ffffffffffffffff811681146109a757600080fd5b60006020828403121561549b57600080fd5b813561301481615473565b6000806000606084860312156154bb57600080fd5b833592506020840135915060408401356154d481614f81565b809150509250925092565b600080604083850312156154f257600080fd5b82356154fd81614f81565b946020939093013593505050565b80151581146109a757600080fd5b60008060008060006060868803121561553157600080fd5b853561553c8161550b565b9450602086013567ffffffffffffffff8082111561555957600080fd5b61556589838a01614ff6565b9096509450604088013591508082111561557e57600080fd5b5061558b88828901614ff6565b969995985093965092949392505050565b6060815260006155af6060830186615365565b82810360208401526155c181866152bb565b90508281036040840152614d3b81856153e9565b600080600080600060a086880312156155ed57600080fd5b8535945060208601359350604086013561560681614f81565b94979396509394606081013594506080013592915050565b6000806040838503121561563157600080fd5b82359150602083013561535a8161550b565b60006020828403121561565557600080fd5b815161301481614f81565b60006020828403121561567257600080fd5b5051919050565b83815260406020808301829052908201839052600090849060608401835b868110156156c55783356156aa81614f81565b6001600160a01b031682529282019290820190600101615697565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156109e2576109e26156d1565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000806000806080858703121561573c57600080fd5b845161574781614f81565b602086015190945061575881614f81565b604086015190935061576981614f81565b606086015190925061577a81615473565b939692955090935050565b600181811c9082168061579957607f821691505b6020821081036157b957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156157d157600080fd5b81516130148161550b565b808201808211156109e2576109e26156d1565b80820281158282048414176109e2576109e26156d1565b634e487b7160e01b600052601260045260246000fd5b60008261583957634e487b7160e01b600052601260045260246000fd5b500490565b60008151615850818560208601615258565b9290920192915050565b7f446174612061737365727465643a20307800000000000000000000000000000081526000865160206158938260118601838c01615258565b7f20666f72206461746149643a203078000000000000000000000000000000000060119285019283015287516158ce81838501848c01615258565b7f20616e642061737365727465723a203078000000000000000000000000000000920181810192909252865161590a81603185018a8501615258565b7f2061742074696d657374616d703a2000000000000000000000000000000000006031939091019283015285516159478160408501848a01615258565b7f20696e207468652044617461417373657274657220636f6e747261637420617460409390910192830152507f203078000000000000000000000000000000000000000000000000000000000060608201526159d26159a9606383018661583e565b7f2069732076616c69642e000000000000000000000000000000000000000000008152600a0190565b98975050505050505050565b60006101208083526159f28184018d61527c565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006000198203615a5f57615a5f6156d1565b5060010190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115615a9857600080fd5b8260051b80836020870137939093016020019392505050565b888152876020820152866040820152851515606082015260c060808201526000615adf60c083018688615a66565b82810360a0840152615af2818587615a66565b9b9a5050505050505050505050565b60008085851115615b1157600080fd5b83861115615b1e57600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015611a2e5760149490940360031b84901b1690921692915050565b601f82111561331f576000816000526020600020601f850160051c81016020861015615b9a5750805b601f850160051c820191505b818110156115ce57828155600101615ba6565b815167ffffffffffffffff811115615bd357615bd361508e565b615be781615be18454615785565b84615b71565b602080601f831160018114615c1c5760008415615c045750858301515b600019600386901b1c1916600185901b1785556115ce565b600085815260208120601f198616915b82811015615c4b57888601518255948401946001909101908401615c2c565b5085821015615c695787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251615c8b818460208701615258565b9190910192915050565b83815260008351615cad816020850160208801615258565b80830190508351615cc5816020840160208801615258565b0160200195945050505050565b60ff81811683821601908111156109e2576109e26156d1565b6001600160a01b0383168152604060208201526000615d0d604083018461527c565b949350505050565b60008060408385031215615d2857600080fd5b8251615d338161550b565b602084015190925067ffffffffffffffff811115615d5057600080fd5b8301601f81018513615d6157600080fd5b8051615d6f615145826150fe565b818152866020838501011115615d8457600080fd5b615d95826020830160208601615258565b809350505050925092905056fea2646970667358221220b4a47ea87a2145d0f114ef961e73851c76c449c08004c637cfe6e43a576acb9664736f6c63430008170033",
        "sourceMap": "834:12493:146:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3565:121:149;;;;;;:::i;:::-;;:::i;:::-;;;571:25:267;;;559:2;544:18;3565:121:149;;;;;;;;986:294:146;;;;;;:::i;:::-;;:::i;:::-;;;1109:14:267;;1102:22;1084:41;;1072:2;1057:18;986:294:146;944:187:267;2575:51:146;;;;;;:::i;:::-;;;;;;;;;;;;;;3677:149:152;;;;;;:::i;:::-;;:::i;:::-;;2540:29:146;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1485:55:267;;;1467:74;;1455:2;1440:18;2540:29:146;1321:226:267;1690:23:149;;;;;;1557:29:152;;;;;-1:-1:-1;;;;;1557:29:152;;;6868:242:117;;;;;;:::i;:::-;;:::i;6423:240::-;;;;;;:::i;:::-;;:::i;9918:737:146:-;;;:::i;2015:54:152:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2015:54:152;;;-1:-1:-1;;;2015:54:152;;;;;;;;;;;;;;;3091:25:267;;;3147:2;3132:18;;3125:34;;;;-1:-1:-1;;;;;3195:55:267;3190:2;3175:18;;3168:83;3294:14;3287:22;3282:2;3267:18;;3260:50;3078:3;3063:19;;2866:450;5105:689:149;;;;;;:::i;:::-;;:::i;3755:177:150:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3893:32:150;3866:4;3893:32;;;:24;:32;;;;;;;3755:177;5800:171:149;;;:::i;2397:42:146:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3517:25:267;;;3573:2;3558:18;;3551:34;;;;3628:14;3621:22;3601:18;;;3594:50;3505:2;3490:18;2397:42:146;3321:329:267;3274:641:146;;;;;;:::i;:::-;;:::i;5870:100:117:-;;;:::i;:::-;;;;;;;:::i;3093:206:152:-;;;;;;:::i;:::-;;:::i;:::-;;;;7446:14:267;;7439:22;7421:41;;7493:2;7478:18;;7471:34;;;;7394:18;3093:206:152;7253:258:267;5560:140:117;5630:17;:30;5662;;5560:140;;;7690:25:267;;;7746:2;7731:18;;7724:34;;;;7663:18;5560:140:117;7516:248:267;5737:96:117;;;:::i;11620:237::-;;;;;;:::i;:::-;;:::i;4451:102:146:-;;;:::i;:::-;;;;;;;:::i;7258:291::-;;;;;;:::i;:::-;;:::i;6015:154:149:-;;;;;;:::i;:::-;;:::i;6226:191:117:-;;;;;;:::i;:::-;;:::i;2666:42:146:-;;2706:2;2666:42;;3420:101:149;;;;;;:::i;:::-;-1:-1:-1;;;;;3499:15:149;3476:4;3499:15;;;:9;:15;;;;;;;3420:101;1598:27;;;;;-1:-1:-1;;;;;1598:27:149;;;3556:146:150;;;:::i;:::-;;;;;;;:::i;4064:108:146:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2369:22::-;;;;;;5406:117:117;;;:::i;1840:22:149:-;;;;;;2445:67:146;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12045:25:267;;;12101:2;12086:18;;12079:34;;;;12129:18;;;12122:34;12199:14;12192:22;12187:2;12172:18;;12165:50;12032:3;12017:19;2445:67:146;11820:401:267;12182:210:117;;;:::i;3730:757:149:-;;;;;;:::i;:::-;;:::i;4053:166:152:-;;;;;;:::i;:::-;;:::i;3353:164::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3484:26:152;;;;:13;:26;;;;;;;;;3477:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3477:33:152;;;;;;;;;-1:-1:-1;;;3477:33:152;;;;;;;;;;;;3353:164;;;;;;;12839:13:267;;12821:32;;12909:4;12897:17;;;12891:24;12869:20;;;12862:54;12976:4;12964:17;;;12958:24;-1:-1:-1;;;;;12954:73:267;12932:20;;;12925:103;13098:4;13086:17;;;13080:24;13073:32;13066:40;13044:20;;;13037:70;;;;12808:3;12793:19;;12610:503;1627:37:152;;;;;-1:-1:-1;;;;;1627:37:152;;;5604:2120;;;;;;:::i;:::-;;:::i;4220:183:146:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;14025:13:267;;14007:32;;14095:4;14083:17;;;14077:24;14055:20;;;14048:54;14158:4;14146:17;;;14140:24;14118:20;;;14111:54;14235:4;14223:17;;;14217:24;14210:32;14203:40;14181:20;;;14174:70;;;;13994:3;13979:19;;13774:476;9187:683:146;;;;;;:::i;:::-;;:::i;1926:22:149:-;;;;;;6454:429:150;;;;;;:::i;:::-;;:::i;6007:108:117:-;6052:16;6087:21;-1:-1:-1;;;;;6087:21:117;6007:108;;1744:31:152;;;;;-1:-1:-1;;;1744:31:152;;;;;;;;;15006:18:267;14994:31;;;14976:50;;14964:2;14949:18;1744:31:152;14832:200:267;7597:1402:146;;;;;;:::i;:::-;;:::i;6669:193:117:-;;;;;;:::i;:::-;;:::i;1361:66:152:-;;1401:26;1361:66;;3880:119;;;;;;:::i;:::-;;:::i;3985:2416:150:-;;;:::i;:::-;;;;;;;;;:::i;5103:1935:146:-;;;;;;:::i;:::-;;:::i;13225:100::-;;;;;;:::i;:::-;3677:149:152;;1843:32;;;;;;2632:28:146;;;;;;10814:2229;;;;;;:::i;:::-;;:::i;3565:121:149:-;3618:4;3641:38;3649:4;3655:23;:21;:23::i;:::-;3641:7;:38::i;:::-;3634:45;3565:121;-1:-1:-1;;3565:121:149:o;986:294:146:-;1140:4;-1:-1:-1;;;;;;1167:54:146;;1182:39;1167:54;;:106;;;1237:36;1261:11;1237:23;:36::i;3677:149:152:-;2825:21:117;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2825:47:117;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2876:12;:10;:12::i;:::-;2793:18;:105::i;:::-;3786:33:152::1;3806:12;3786:19;:33::i;2540:29:146:-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2540:29:146;;-1:-1:-1;2540:29:146;:::o;6868:242:117:-;2825:21;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;2793:105;7004:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;7004:21:117::1;-1:-1:-1::0;;;;;7004:32:117::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7004:62:117::1;;7080:4;7086:7;;7004:99;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6868:242:::0;;;:::o;6423:240::-;2825:21;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;2793:105;6558:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;6558:21:117::1;-1:-1:-1::0;;;;;6558:32:117::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6558:61:117::1;;6633:4;6639:7;;6558:98;;;;;;;;;;;;;;;;;:::i;9918:737:146:-:0;2356:21:56;:19;:21::i;:::-;9972:12:146::1;9987;:10;:12::i;:::-;-1:-1:-1::0;;;;;10044:25:146;::::1;;::::0;;;:19:::1;:25;::::0;;;;;9972:27;;-1:-1:-1;10044:30:146;10040:609:::1;;-1:-1:-1::0;;;;;10104:25:146;::::1;10090:11;10104:25:::0;;;:19:::1;:25;::::0;;;;;;10144:29;;;;10187:16:::1;:26:::0;;10104:25;;;;10187:26:::1;::::0;10104:25;;10187:26:::1;:::i;:::-;::::0;;;-1:-1:-1;10233:6:146::1;::::0;-1:-1:-1;10228:267:146::1;10245:12;:19:::0;10241:23;::::1;10228:267;;;10312:4;-1:-1:-1::0;;;;;10293:23:146::1;:12;10306:1;10293:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;10293:15:146::1;:23:::0;10289:192:::1;;10358:12;10371:19:::0;;:23:::1;::::0;10393:1:::1;::::0;10371:23:::1;:::i;:::-;10358:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;10340:12:::1;:15:::0;;-1:-1:-1;;;;;10358:37:146;;::::1;::::0;10353:1;;10340:15;::::1;;;;;:::i;:::-;;;;;;;;;:55;;;;;-1:-1:-1::0;;;;;10340:55:146::1;;;;;-1:-1:-1::0;;;;;10340:55:146::1;;;;;;10417:12;:18;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;10417:18:146;;;;;-1:-1:-1;;10417:18:146::1;::::0;;;;;10457:5:::1;;10289:192;10266:3;;10228:267;;;-1:-1:-1::0;10514:27:146::1;::::0;;-1:-1:-1;;;;;19820:55:267;;19802:74;;19907:2;19892:18;;19885:34;;;10514:27:146::1;::::0;19775:18:267;10514:27:146::1;;;;;;;10598:12;::::0;10591:47:::1;::::0;-1:-1:-1;;;;;10598:12:146::1;10625:4:::0;10631:6;10591:33:::1;:47::i;:::-;10076:573;10040:609;9962:693;2398:20:56::0;1713:1;2924:7;:21;2744:208;2398:20;9918:737:146:o;5105:689:149:-;2356:21:56;:19;:21::i;:::-;5209:6:149::1;1780:26:150;1799:6;1780:18;:26::i;:::-;5231:14:149::2;5248:12;:10;:12::i;:::-;5231:29;;5335:15;5343:6;5335:7;:15::i;:::-;-1:-1:-1::0;;;;;5399:17:149;::::2;;::::0;;;:9:::2;:17;::::0;;;;:27;;5420:6;;5399:17;:27:::2;::::0;5420:6;;5399:27:::2;:::i;:::-;;;;;;;;5478:6;5463:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5542:12:149::2;::::0;5535:49:::2;::::0;-1:-1:-1;;;;;5542:12:149::2;5569:6:::0;5577;5535:33:::2;:49::i;:::-;-1:-1:-1::0;;;;;5642:15:149;::::2;;::::0;;;:7:::2;:15;::::0;;;;;:20;5638:110:::2;;5711:26;5730:6;5711:18;:26::i;:::-;5772:6;-1:-1:-1::0;;;;;5763:24:149::2;;5780:6;5763:24;;;;571:25:267::0;;559:2;544:18;;425:177;5763:24:149::2;;;;;;;;5221:573;2387:1:56::1;2398:20:::0;1713:1;2924:7;:21;2744:208;5800:171:149;2356:21:56;:19;:21::i;:::-;5864:17:149::1;5884:12;:10;:12::i;:::-;5864:32;;5907:18;5915:9;5907:7;:18::i;:::-;5935:29;5954:9;5935:18;:29::i;3274:641:146:-:0;8870:21:23;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:23;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:23;;;;;4979:67;3531:38:146::1;3545:13;3560:8;3531:13;:38::i;:::-;3594:24;3632:20:::0;3666:14:::1;3694:15:::0;3733:10:::1;3722:59;;;;;;;;;;;;:::i;:::-;3580:201;;;;;;;;3792:41;3816:16;3792:23;:41::i;:::-;3843:65;3877:12;3891:6;3899:8;3843:33;:65::i;:::-;3521:394;;;;5070:14:23::0;5066:101;;;5100:23;;-1:-1:-1;;5100:23:23;;;5142:14;;-1:-1:-1;14976:50:267;;5142:14:23;;14964:2:267;14949:18;5142:14:23;;;;;;;5066:101;4092:1081;;;;;3274:641:146;;;:::o;5870:100:117:-;5908:13;5940:17;:23;;5933:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5870:100;:::o;3093:206:152:-;3152:4;3182:26;;;:13;:26;;;;;:35;;;3152:4;;-1:-1:-1;;;3182:35:152;;;;3177:59;;-1:-1:-1;3227:5:152;;;;-1:-1:-1;3093:206:152;-1:-1:-1;3093:206:152:o;3177:59::-;-1:-1:-1;;3260:26:152;;;;:13;:26;;;;;3254:4;3260:31;;;;3254:4;;3093:206::o;5737:96:117:-;5773:13;5805:17;:21;;5798:28;;;;;:::i;11620:237::-;11772:4;11799:21;;:51;;;;;-1:-1:-1;;;;;1485:55:267;;;11799:51:117;;;1467:74:267;11799:21:117;;;;:40;;1440:18:267;;11799:51:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4451:102:146:-;4499:16;4534:12;4527:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4527:19:146;;;;;;;;;;;;;;;;;;;;;;4451:102;:::o;7258:291::-;2825:21:117;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;2793:105;2356:21:56::1;:19;:21::i;:::-;7384:6:146::2;1780:26:150;1799:6;1780:18;:26::i;:::-;7406:69:146::3;7439:12;:10;:12::i;:::-;7406:15;::::0;-1:-1:-1;;;;;7406:15:146::3;::::0;7461:4:::3;7468:6:::0;7406:32:::3;:69::i;:::-;7517:15;::::0;7491:51:::3;::::0;;-1:-1:-1;;;;;7517:15:146;;::::3;19802:74:267::0;;19907:2;19892:18;;19885:34;;;7491:51:146::3;::::0;19775:18:267;7491:51:146::3;;;;;;;2387:1:56::2;2398:20:::1;1713:1:::0;2924:7;:21;2744:208;6015:154:149;3139:46:117;:44;:46::i;:::-;6133:29:149::1;6145:6;6153:8;6133:11;:29::i;:::-;6015:154:::0;;:::o;6226:191:117:-;2825:21;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;2793:105;6342:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;6342:21:117::1;-1:-1:-1::0;;;;;6342:32:117::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;::::0;;;;::::1;::::0;::::1;21691:25:267::0;;;-1:-1:-1;;;;;21752:55:267;;;21732:18;;;21725:83;6342:54:117;;;::::1;::::0;::::1;::::0;21664:18:267;;6342:68:117::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6226:191:::0;;:::o;3556:146:150:-;3644:21;3688:7;3681:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3681:14:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3556:146;:::o;4064:108:146:-;4114:10;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4114:10:146;4143:22;;;;:14;:22;;;;;;;;;4136:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4143:22;;4136:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4064:108;;;:::o;5406:117:117:-;5475:41;;;;;;;;5498:17;5475:41;;;;;;;;;;;;;5449:7;;5475:41;;;5498:17;5475:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:41::i;:::-;5468:48;;5406:117;:::o;12182:210::-;12315:7;12345:21;;;;;;;;;-1:-1:-1;;;;;12345:21:117;-1:-1:-1;;;;;12345:38:117;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3730:757:149:-;3889:4;3832:6;1780:26:150;1799:6;1780:18;:26::i;:::-;3862:8:149::1;1331;1343:1;1331:13:::0;1327:94:::1;;1367:43;;;;;;;;;;;;;;1327:94;3991:10:::2;;3973:15;:28;3969:67;;;4024:1;4017:8;;;;3969:67;4121:10;::::0;4092:26:::2;4110:8:::0;4092:15:::2;:26;:::i;:::-;:39;4088:172;;;4234:15;4221:10;;:28;;;;:::i;:::-;4210:39;;4088:172;4305:11;;4320:1;4305:16:::0;4301:119:::2;;4399:10;::::0;4379:17:::2;4388:8:::0;4379:6;:17:::2;:::i;:::-;:30;;;;:::i;:::-;4372:37;;;;4301:119;4469:11;::::0;4456:10:::2;::::0;4436:17:::2;4445:8:::0;4436:6;:17:::2;:::i;:::-;:30;;;;:::i;:::-;:44;;;;:::i;:::-;4429:51;;1430:1;1816::150::1;3730:757:149::0;;;;;:::o;4053:166:152:-;2825:21:117;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;2793:105;4170:42:152::1;4199:12;4170:28;:42::i;5604:2120::-:0;5761:19;1401:26;3377:168:117;3409:21;;;;;;;;-1:-1:-1;;;;;3409:21:117;-1:-1:-1;;;;;3409:32:117;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:100;;;;;3484:4;3409:100;;;19802:74:267;19892:18;;;19885:34;;;-1:-1:-1;;;;;3409:49:117;;;;;;;19775:18:267;;3409:100:117;;;;;;;;;;;;;;;;;;;;;;;3377:168;-1:-1:-1;;;;;5807:22:152;::::1;::::0;:48:::1;;5847:8;5807:48;;;5832:12;:10;:12::i;:::-;5877:2;::::0;5903:15:::1;::::0;5877:43:::1;::::0;;;;-1:-1:-1;;;;;5903:15:152;;::::1;5877:43;::::0;::::1;1467:74:267::0;5796:59:152;;-1:-1:-1;5865:9:152::1;::::0;5877:2;::::1;::::0;:17:::1;::::0;1440:18:267;;5877:43:152::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5865:55;;5930:67;5963:12;:10;:12::i;:::-;5930:15;::::0;-1:-1:-1;;;;;5930:15:152::1;::::0;5985:4:::1;5992::::0;5930:32:::1;:67::i;:::-;6053:2;::::0;6007:15:::1;::::0;:56:::1;::::0;-1:-1:-1;;;;;6007:15:152;;::::1;::::0;6053:2:::1;6058:4:::0;6007:37:::1;:56::i;:::-;6678:2;::::0;-1:-1:-1;;;;;6678:2:152::1;:14;6845:27;6867:4:::0;6845:21:::1;:27::i;:::-;6925:29;6947:6;6925:21;:29::i;:::-;7009:38;7038:8;7009:28;:38::i;:::-;7100:42;7126:15;7100:25;:42::i;:::-;7215:43;7252:4;7215:28;:43::i;:::-;6706:596;;;;;;;;;;;;:::i;:::-;;::::0;;;;::::1;-1:-1:-1::0;;6706:596:152;;;;;;;7415:17:::1;::::0;7446:15:::1;::::0;7493:17:::1;::::0;6678:880:::1;::::0;;;-1:-1:-1;;;;;;6678:880:152;;;::::1;::::0;7316:8;;7346:4:::1;::::0;7373:1:::1;::::0;-1:-1:-1;;;7415:17:152;;::::1;;;::::0;-1:-1:-1;;;;;7446:15:152;;::::1;::::0;7475:4;;7373:1;;6678:880:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7609:44;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;7609:44:152;;::::1;::::0;;;;;;-1:-1:-1;7609:44:152;;;;;;7568:26;;;:13:::1;:26:::0;;;;;;:85;;;;;;7609:44;7568:85;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;::::1;;-1:-1:-1::0;;;7568:85:152::1;::::0;;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;7668:49;;6664:894;;-1:-1:-1;6664:894:152;;7623:6;;7668:49:::1;::::0;::::1;::::0;7631:4;571:25:267;;559:2;544:18;;425:177;7668:49:152::1;;;;;;;;5786:1938;5604:2120:::0;;;;;;:::o;4220:183:146:-;4314:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4314:31:146;-1:-1:-1;4368:28:146;;;;:15;:28;;;;;;;;;4361:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4220:183::o;9187:683::-;2356:21:56;:19;:21::i;:::-;9290:6:146::1;1780:26:150;1799:6;1780:18;:26::i;:::-;9316:12:146::2;:19:::0;2706:2:::2;-1:-1:-1::0;9312:127:146::2;;9378:50;;;;;;;;;;;;;;9312:127;9449:14;9466:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;9493:27:146;::::2;;::::0;;;:19:::2;:27;::::0;;;;;9449:29;;-1:-1:-1;9493:32:146;9489:123:::2;;9576:12;:25:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;9576:25:146;;;;;::::2;::::0;;-1:-1:-1;;9576:25:146::2;-1:-1:-1::0;;;;;9576:25:146;::::2;;::::0;;9489:123:::2;-1:-1:-1::0;;;;;9621:27:146;::::2;;::::0;;;:19:::2;:27;::::0;;;;:37;;9652:6;;9621:27;:37:::2;::::0;9652:6;;9621:37:::2;:::i;:::-;;;;;;;;9688:6;9668:16;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9757:12:146::2;::::0;9750:68:::2;::::0;-1:-1:-1;;;;;9757:12:146::2;9788:6:::0;9804:4:::2;9811:6:::0;9750:37:::2;:68::i;:::-;9834:29;::::0;;-1:-1:-1;;;;;19820:55:267;;19802:74;;19907:2;19892:18;;19885:34;;;9834:29:146::2;::::0;19775:18:267;9834:29:146::2;;;;;;;9302:568;2387:1:56::1;2398:20:::0;1713:1;2924:7;:21;2744:208;6454:429:150;6602:65;6653:12;:10;:12::i;:::-;6602:29;:65::i;:::-;6597:165;;6698:53;;;;;;;;;;;;;;6597:165;-1:-1:-1;;;;;6835:31:150;;;;;;:24;:31;;;;;:41;;6870:6;;6835:31;:41;;6870:6;;6835:41;:::i;:::-;;;;-1:-1:-1;;;;6454:429:150:o;7597:1402:146:-;7769:4;2825:21:117;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;2793:105;7807:14:146;7860:1:::1;7843:18:::0;::::1;::::0;:41:::1;;;7882:2;7865:14;:19;7843:41;7839:131;;;7907:52;;;;;;;;;;;;;;7839:131;7984:40:::0;;::::1;7980:132;;8047:54;;;;;;;;;;;;;;7980:132;8122:21;8146:15;;8162:1;8146:18;;;;;;;:::i;:::-;;;;;;;8122:42;;8195:1;8178:14;:18;8174:351;;;8226:1;8212:303;8233:14;8229:1;:18;8212:303;;;8301:14;;8316:1;8301:17;;;;;;;:::i;:::-;;;;;;;8276:14;;8295:1;8291;:5;;;;:::i;:::-;8276:21;;;;;;;:::i;:::-;;;;;;;:42;8272:172;;8349:76;;;;;;;;;;;;;;8272:172;8482:15;;8498:1;8482:18;;;;;;;:::i;:::-;;;;;;;8462:38;;;;;:::i;:::-;::::0;-1:-1:-1;8249:3:146::1;;8212:303;;;;8174:351;8535:11;8549:10;;8535:24;;8595:153;;;;;;;;8612:14;8595:153;;;;8640:16;8595:153;;;;8670:11;8595:153;;;;;;8695:14;;8595:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;8595:153:146;;;-1:-1:-1;8595:153:146::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;8723:15;;;;;;8595:153;::::1;::::0;8723:15;;8595:153;8723:15;8595:153;::::1;;::::0;::::1;::::0;;;-1:-1:-1;8595:153:146;;;;-1:-1:-1;;8570:22:146;;;:14:::1;:22;::::0;;;;;;;;:178;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;8570:178:146::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;:22;;-1:-1:-1;8570:178:146::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;8570:178:146::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;8758:10:146::1;:12:::0;;;-1:-1:-1;8758:10:146::1;:12;::::0;::::1;:::i;:::-;;;;;;8786:180;8810:6;8830:14;8858:16;8888:11;8913:14;;8941:15;;8786:180;;;;;;;;;;;;;:::i;:::-;;;;;;;;8985:6:::0;7597:1402;-1:-1:-1;;;;;;;;7597:1402:146:o;6669:193:117:-;2825:21;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;2793:105;6786:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;6786:21:117::1;-1:-1:-1::0;;;;;6786:32:117::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;::::0;;;;::::1;::::0;::::1;21691:25:267::0;;;-1:-1:-1;;;;;21752:55:267;;;21732:18;;;21725:83;6786:55:117;;;::::1;::::0;::::1;::::0;21664:18:267;;6786:69:117::1;21517:297:267::0;3880:119:152;2825:21:117;;:34;;;-1:-1:-1;;;2825:34:117;;;;2793:105;;-1:-1:-1;;;;;2825:21:117;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;2793:105;3964:28:152::1;3985:6;3964:20;:28::i;3985:2416:150:-:0;4067:21;4090:16;4108:13;4210:65;4261:12;:10;:12::i;4210:65::-;4205:165;;4306:53;;;;;;;;;;;;;;4205:165;4450:7;:14;4430:17;;4450:14;4533:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4533:27:150;;4500:60;;4570:28;4612:12;4601:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4601:24:150;;4570:55;;4635:26;4683:12;4664:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4664:32:150;;;;;;;;;;;;;;;;;4635:61;;4712:6;4707:618;4724:12;4720:1;:16;4707:618;;;4767:7;4775:1;4767:10;;;;;;;;:::i;:::-;;;;;;;;;;4757:20;;;;;;;;4767:10;;;;;;;4757:20;;-1:-1:-1;;;;;4757:20:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;:4;;4762:1;;4757:7;;;;;;:::i;:::-;;;;;;:20;;;;4791:10;4820:6;4815:192;4832:10;4828:1;:14;4815:192;;;4891:4;4896:1;4891:7;;;;;;;;:::i;:::-;;;;;;;:20;;;-1:-1:-1;;;;;4871:40:150;:13;4885:1;4871:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4871:40:150;;4867:126;;4943:4;4935:12;;4969:5;;4867:126;4844:3;;4815:192;;;;5025:5;5020:295;;5137:4;5142:1;5137:7;;;;;;;;:::i;:::-;;;;;;;:20;;;5109:13;5123:10;5109:25;;;;;;;;:::i;:::-;;;;;;:48;-1:-1:-1;;;;;5109:48:150;;;-1:-1:-1;;;;;5109:48:150;;;;;5224:24;:46;5249:4;5254:1;5249:7;;;;;;;;:::i;:::-;;;;;;;:20;;;-1:-1:-1;;;;;5224:46:150;-1:-1:-1;;;;;5224:46:150;;;;;;;;;;;;;5175:14;5190:10;5175:26;;;;;;;;:::i;:::-;;;;;;;;;;:95;5288:12;;;;:::i;:::-;;;;5020:295;-1:-1:-1;4738:3:150;;4707:618;;;-1:-1:-1;5377:14:150;5384:7;;5377:14;:::i;:::-;5455:23;5495:10;5481:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5481:25:150;;5455:51;;5516:21;5551:10;5540:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5540:22:150;;5516:46;;5578:6;5573:684;5590:10;5586:1;:14;5573:684;;;5633:13;5647:1;5633:16;;;;;;;;:::i;:::-;;;;;;;5621:6;5628:1;5621:9;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1;;;;;5621:28:150;;;-1:-1:-1;;;;;5621:28:150;;;;;5676:14;5691:1;5676:17;;;;;;;;:::i;:::-;;;;;;;5663:7;5671:1;5663:10;;;;;;;;:::i;:::-;;;;;;:30;;;;;5796:68;5839:12;:10;:12::i;:::-;5854:6;5861:1;5854:9;;;;;;;;:::i;:::-;;;;;;;5796:21;:68::i;:::-;6216:30;6236:6;6243:1;6236:9;;;;;;;;:::i;:::-;;;;;;;6216:19;:30::i;:::-;5602:3;;5573:684;;;-1:-1:-1;6372:4:150;;6378:6;;-1:-1:-1;6386:7:150;;-1:-1:-1;3985:2416:150;-1:-1:-1;;;;;3985:2416:150:o;5103:1935:146:-;5302:19;1401:26:152;3377:168:117;3409:21;;;;;;;;-1:-1:-1;;;;;3409:21:117;-1:-1:-1;;;;;3409:32:117;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:168;-1:-1:-1;;;;;5634:25:146;::::1;5654:4;5634:25;:85:::0;::::1;;;-1:-1:-1::0;5707:12:146::1;::::0;5687:15:::1;::::0;-1:-1:-1;;;;;5687:15:146;;::::1;5707:12:::0;::::1;5679:40;5634:85;5617:226;;;5767:65;;;;;;;;;;;;;;5617:226;5916:10;::::0;:15;;:42:::1;;;5948:10;;5935:9;:23;;5916:42;5912:128;;;5981:48;;;;;;;;;;;;;;5912:128;6388:6;6383:257;6404:12;:19:::0;6400:23;::::1;6383:257;;;6444:12;6459;6472:1;6459:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;6459:15:146::1;6501:25:::0;;;:19:::1;:25:::0;;;;;;;;6459:15;;-1:-1:-1;6488:39:146::1;::::0;6459:15;;6488:6:::1;:39::i;:::-;-1:-1:-1::0;;;;;6561:25:146;::::1;;::::0;;;:19:::1;:25;::::0;;;;;6541:16:::1;:45:::0;;6561:25;;6541:16;;:45:::1;::::0;6561:25;;6541:45:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6600:25:146::1;6628:1;6600:25:::0;;;:19:::1;:25;::::0;;;;:29;6425:3:::1;;6383:257;;;-1:-1:-1::0;6650:19:146::1;6657:12;;6650:19;:::i;:::-;6824:37;6838:6;6846:4;6852:8;6824:13;:37::i;:::-;6902:96;::::0;;::::1;::::0;::::1;::::0;;6940:15:::1;6902:96:::0;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;6902:96:146;;;;;;6871:28;;;:15:::1;:28:::0;;;;;;;:127;;;;;;6902:96;6871:127;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6871:127:146::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;6871:28:146;6810:51;-1:-1:-1;;;;5103:1935:146:o;10814:2229::-;10971:2;;-1:-1:-1;;;;;10971:2:146;10947:12;:10;:12::i;:::-;-1:-1:-1;;;;;10947:27:146;;10943:114;;10997:49;;;;;;;;;;;;;;10943:114;11071:18;11067:1726;;;11300:22;11356:28;;;:15;:28;;;;;;;;:37;;;;;11341:53;;:14;:53;;;;;11300:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11341:53;;11300:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11408:17;11445:6;11440:1300;11457:25;;11453:29;;11440:1300;;;11588:28;;;;:15;:28;;;;;:42;;;11532:25;;;;:28;;11558:1;;11532:28;;;;;;:::i;:::-;;;;;;;:98;11507:1219;;11749:11;:26;;;11776:1;11749:29;;;;;;;;:::i;:::-;;;;;;;11733:45;;;;;:::i;:::-;;;11507:1219;;;11877:11;:22;;;11873:731;;;11977:23;12003:11;:26;;;12030:1;12003:29;;;;;;;;:::i;:::-;;;;;;;11977:55;;12058:17;12106:1;12111;12106:6;:45;;12119:25;;;;12145:5;12149:1;12145;:5;:::i;:::-;12119:32;;;;;;;;:::i;:::-;;;;;;;12106:45;;;12115:1;12106:45;12178:19;12200:28;;;:15;:28;;;;;:71;;;12058:93;;-1:-1:-1;12178:19:146;12200:86;;12058:93;;12200:86;:::i;:::-;12178:108;;12312:15;12389:12;12358:11;:25;;;12384:1;12358:28;;;;;;;;:::i;:::-;;;;;;;:43;;;;:::i;:::-;12312:89;-1:-1:-1;12490:31:146;12312:89;12490:18;:31;:::i;:::-;12472:50;;:14;:50;:::i;:::-;12428:94;;;;:::i;:::-;;;11901:703;;;;11873:731;12702:5;;11507:1219;11484:3;;11440:1300;;;;12754:28;12766:12;12780:1;12754:11;:28::i;:::-;11091:1702;;11067:1726;12966:26;;;;:13;:26;;;;;;;;;:35;;;;12874:33;;12966:35;12921:31;;;;12807:229;;7446:14:267;;7439:22;7421:41;;7478:18;;;7471:34;12966:26:146;;-1:-1:-1;;;;;12966:35:146;;;;12807:229;;7394:18:267;12807:229:146;;;;;;;10814:2229;;:::o;7899:848:149:-;7955:4;8044:11;;8059:1;8044:16;8040:65;;-1:-1:-1;8083:11:149;;;7899:848::o;8040:65::-;8671:11;;8585;;8317:10;;8159;;8123:33;:31;:33::i;:::-;:46;;;;:::i;:::-;8122:205;;;;:::i;:::-;:321;;8439:4;8122:321;:::i;:::-;:474;;;;:::i;:::-;:560;;;;:::i;9510:512::-;-1:-1:-1;;;;;10002:13:149;;9614:4;10002:13;;;:7;:13;;;;;;;;;9831:9;:15;;;;;;9664;:21;;;;;;;10002:13;;9940:4;;9642:43;;:19;:43;:::i;:::-;9641:205;;;;:::i;:::-;:303;;;;:::i;:::-;:374;;;;:::i;:::-;9634:381;9510:512;-1:-1:-1;;;9510:512:149:o;886:288::-;1038:4;-1:-1:-1;;;;;;1065:50:149;;1080:35;1065:50;;:102;;;1131:36;1155:11;1131:23;:36::i;2327:429:22:-;2389:7;2433:8;3604:2;2524:30;2543:10;2524:18;:30::i;:::-;:71;;;;;2576:19;2558:14;:37;;2524:71;2520:230;;;2634:8;;2643:36;2660:19;2643:14;:36;:::i;:::-;2634:47;;;;;:::i;:::-;2626:56;;;:::i;:::-;2618:65;;2611:72;;;;2327:429;:::o;2520:230::-;966:10:24;2714:25:22;;;;2327:429;:::o;10124:218:117:-;10209:21;;;;;;;;-1:-1:-1;;;;;10209:21:117;-1:-1:-1;;;;;10209:32:117;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;;;;;;;21691:25:267;;;-1:-1:-1;;;;;21752:55:267;;;21732:18;;;21725:83;10209:42:117;;;;;;;21664:18:267;;10209:54:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10204:132;;10286:39;;;;;;;;21691:25:267;;;-1:-1:-1;;;;;21752:55:267;;21732:18;;;21725:83;21664:18;;10286:39:117;;;;;;;;4333:257:152;-1:-1:-1;;;;;4407:35:152;;4403:133;;4465:60;;;;;;;;;;;;;;4403:133;4545:15;:38;;-1:-1:-1;;4545:38:152;-1:-1:-1;;;;;4545:38:152;;;;;;;;;;4333:257::o;2431:307:56:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;1303:160:48:-;1412:43;;-1:-1:-1;;;;;19820:55:267;;;1412:43:48;;;19802:74:267;19892:18;;;19885:34;;;1385:71:48;;1405:5;;1427:14;;;;;19775:18:267;;1412:43:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;7222:166:150:-;7290:6;7300:1;7290:11;7286:96;;7324:47;;;;;;;;;;;;;;6861:472:149;6968:23;:21;:23::i;:::-;6954:11;:37;7049:33;:31;:33::i;:::-;7036:10;:46;-1:-1:-1;;;;;7151:28:149;;;7147:180;;7221:36;7229:14;7245:11;;7221:7;:36::i;:::-;-1:-1:-1;;;;;7195:23:149;;;;;;:7;:23;;;;;;;;:62;;;;7305:11;;7271:15;:31;;;;;;:45;6861:472;:::o;10104:740::-;10212:11;10226:31;10234:9;10245:11;;10226:7;:31::i;:::-;-1:-1:-1;;;;;10297:18:149;;10318:1;10297:18;;;:7;:18;;;;;;;;:22;;;;10360:282;;;;;;;;;;;10212:45;;-1:-1:-1;10330:322:149;;10360:282;;;10451:14;6052:16:117;6087:21;-1:-1:-1;;;;;6087:21:117;;6007:108;10451:14:149;-1:-1:-1;;;;;10451:29:149;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10451:37:149;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10360:282:149;;;;;10517:6;10360:282;;;;10548:15;10360:282;;;;10588:1;10360:282;;;;10612:15;10360:282;;;10330:16;:322::i;:::-;10663:21;;;;;;;;-1:-1:-1;;;;;10663:21:149;-1:-1:-1;;;;;10663:38:149;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:121;;;;;10768:4;10663:121;;;1467:74:267;-1:-1:-1;;;;;10663:56:149;;;;;;;1440:18:267;;10663:121:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10819:9;-1:-1:-1;;;;;10800:37:149;;10830:6;10800:37;;;;571:25:267;;559:2;544:18;;425:177;10800:37:149;;;;;;;;10160:684;10104:740;:::o;4558:700:117:-;6931:20:23;:18;:20::i;:::-;-1:-1:-1;;;;;4743:36:117;::::1;4739:110;;4802:36;;;;;;;;;;;;;;4739:110;4858:21;:37:::0;;-1:-1:-1;;4858:37:117::1;-1:-1:-1::0;;;;;4858:37:117;::::1;;::::0;;4949:29:::1;4969:8:::0;4949:19:::1;:29::i;:::-;4944:93;;5001:25;;;;;;;;;;;;;;4944:93;5046:28:::0;;:17:::1;:28:::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;5066:8;;5046:17;:28;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;5046:28:117::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;;;5157:14:117::1;::::0;::::1;::::0;5090:161:::1;::::0;::::1;::::0;5157:14;5090:161:::1;:::i;:::-;;::::0;;;;;::::1;::::0;;5185:21;;5220::::1;::::0;;::::1;::::0;7690:25:267;;;7731:18;;7724:34;5090:161:117;-1:-1:-1;;;;;5090:161:117;::::1;::::0;::::1;::::0;7663:18:267;5090:161:117::1;;;;;;;;4558:700:::0;;:::o;3120:150:149:-;6931:20:23;:18;:20::i;:::-;3232:31:149::1;3249:13;3232:16;:31::i;2643:290:152:-:0;6931:20:23;:18;:20::i;:::-;2807:33:152::1;2827:12;2807:19;:33::i;:::-;2850:28;2871:6;2850:20;:28::i;:::-;2888:38;2917:8;2888:28;:38::i;1702:188:48:-:0;1829:53;;-1:-1:-1;;;;;32731:15:267;;;1829:53:48;;;32713:34:267;32783:15;;;32763:18;;;32756:43;32815:18;;;32808:34;;;1802:81:48;;1822:5;;1844:18;;;;;32625::267;;1829:53:48;32450:398:267;1802:81:48;1702:188;;;;:::o;10348:531:117:-;10428:25;10456:21;;;;;;;;;-1:-1:-1;;;;;10456:21:117;-1:-1:-1;;;;;10456:32:117;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10428:62;;10501:17;10521:10;-1:-1:-1;;;;;10521:23:117;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10501:45;;10556:19;10578:10;-1:-1:-1;;;;;10578:25:117;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10556:49;;10633:10;-1:-1:-1;;;;;10633:18:117;;10652:9;10663:12;:10;:12::i;:::-;10633:43;;-1:-1:-1;;;;;;10633:43:117;;;;;;;;;;21691:25:267;;;;-1:-1:-1;;;;;21752:55:267;21732:18;;;21725:83;21664:18;;10633:43:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:108;;;;10696:10;-1:-1:-1;;;;;10696:18:117;;10715:11;10728:12;:10;:12::i;:::-;10696:45;;-1:-1:-1;;;;;;10696:45:117;;;;;;;;;;21691:25:267;;;;-1:-1:-1;;;;;21752:55:267;21732:18;;;21725:83;21664:18;;10696:45:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10616:257;;;10766:7;;;10348:531::o;10616:257::-;10838:9;10849:12;:10;:12::i;:::-;10810:52;;;;;;;;21691:25:267;;;;-1:-1:-1;;;;;21752:55:267;21732:18;;;21725:83;21664:18;;10810:52:117;21517:297:267;10890:1127:149;10976:6;1780:26:150;1799:6;1780:18;:26::i;:::-;11006:8:149::1;1331;1343:1;1331:13:::0;1327:94:::1;;1367:43;;;;;;;;;;;;;;1327:94;11030:19:::2;11046:1;11030:7;:19::i;:::-;11125:10;;11106:15;:29;11102:444;;11212:17;11221:8:::0;11212:6;:17:::2;:::i;:::-;11199:10;:30:::0;11102:444:::2;;;11336:21;11393:10;;11374:15;11361:10;;:28;;;;:::i;:::-;11360:43;;;;:::i;:::-;11336:67:::0;-1:-1:-1;11527:8:149;11498:25:::2;11336:67:::0;11498:6;:25:::2;:::i;:::-;11497:38;;;;:::i;:::-;11484:10;:51:::0;-1:-1:-1;11102:444:149::2;11594:10;;11608:1;11594:15:::0;11590:98:::2;;11632:45;;;;;;;;;;;;;;11590:98;11754:26;11772:8:::0;11754:15:::2;:26;:::i;:::-;11741:10;:39:::0;;;11928:15:::2;11915:10;:28:::0;11987:10:::2;::::0;11959:51:::2;::::0;;33084:25:267;;;33140:2;33125:18;;33118:34;;;33168:18;;;33161:34;;;;33226:2;33211:18;;33204:34;;;;11959:51:149::2;::::0;33071:3:267;33056:19;11959:51:149::2;;;;;;;1816:1:150::1;10890:1127:149::0;;;:::o;428:273:143:-;532:7;619:8;:21;;;642:8;:12;;;656:8;:14;;;585:99;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;562:132;;;;;;555:139;;428:273;;;:::o;4888:241:152:-;4970:12;:17;;4986:1;4970:17;4966:115;;5010:60;;;;;;;;;;;;;;4966:115;5090:17;:32;;;;;;-1:-1:-1;;;5090:32:152;;;;;;;;;;;4888:241::o;2081:225:48:-;2200:39;;;;;2224:4;2200:39;;;34055:34:267;-1:-1:-1;;;;;34125:15:267;;;34105:18;;;34098:43;2177:20:48;;2200:15;;;;;;33967:18:267;;2200:39:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2177:62;-1:-1:-1;2249:50:48;2262:5;2269:7;2278:20;2293:5;2177:62;2278:20;:::i;:::-;2249:12;:50::i;2586:182:69:-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;34309:19:267;;;;34344:12;;34337:28;34381:12;;2678:83:69;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;3287:26;;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;34559:19:267;;;34620:66;34608:79;34603:2;34594:12;;34587:101;34713:2;34704:12;;34404:318;3569:546:69;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:69;;;;;;;;;;;;;;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:69;;-1:-1:-1;3805:2:69;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:69;-1:-1:-1;3827:34:69;-1:-1:-1;3883:3:69;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:69;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;4070:7:69;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:69;3569:546;-1:-1:-1;;;;3569:546:69:o;9896:209:150:-;10024:4;10051:21;;:40;;;;;;;;-1:-1:-1;;;;;10051:47:150;;;;:21;;:38;;:40;;;;;;;;;;;;;;:21;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10051:47:150;;;9896:209;-1:-1:-1;;9896:209:150:o;4596:286:152:-;-1:-1:-1;;;;;4665:20:152;;4661:113;;4708:55;;;;;;;;;;;;;;4661:113;4783:2;:40;;-1:-1:-1;;4783:40:152;-1:-1:-1;;;;;4783:40:152;;;;;;;;4853:22;;;;;;;;:20;;:22;;;;;;;;;;;;;;;4783:40;4853:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4833:17;:42;-1:-1:-1;4596:286:152:o;9582:229:150:-;-1:-1:-1;;;;;9763:31:150;;;;;;:24;:31;;;;;;9705:99;;9763:31;9753:7;;9705:26;:99::i;8265:1236::-;-1:-1:-1;;;;;8350:31:150;;8336:11;8350:31;;;:24;:31;;;;;;;8411:38;;;;;8443:4;8411:38;;;1467:74:267;8350:31:150;;;8411:23;;1440:18:267;;8411:38:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8391:58;;8522:6;8507:12;:21;8503:992;;;8660:21;;;;;;;;-1:-1:-1;;;;;8660:21:150;-1:-1:-1;;;;;8660:36:150;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8660:44:150;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8643:64:150;:5;-1:-1:-1;;;;;8643:64:150;;8622:863;;8850:7;8899:21;;8991:38;;;;;;;;-1:-1:-1;;;;;8899:21:150;;;;:62;;:21;;8991:36;;:38;;;;;;;;;;;;;;;8899:21;8991:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9171:4;9178:21;9187:12;9178:6;:21;:::i;:::-;9052:170;;-1:-1:-1;;;;;19820:55:267;;;9052:170:150;;;19802:74:267;19892:18;;;19885:34;19775:18;;9052:170:150;;;-1:-1:-1;;9052:170:150;;;;;;;;;;;;;;;;;;;;8899:341;-1:-1:-1;;;;;;9052:170:150;8899:341;;;;;;;;;9052:170;8899:341;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8899:341:150;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8875:365:150;-1:-1:-1;8875:365:150;9259:110;;9297:53;;;;;;;;;;;;;;8622:863;9414:56;;;;;-1:-1:-1;;;;;1485:55:267;;9414:56:150;;;1467:74:267;1440:18;;9414:56:150;1321:226:267;6282:489:149;6358:19;6366:10;6358:7;:19::i;:::-;-1:-1:-1;;;;;6443:19:149;;;;;;:7;:19;;;;;;:24;6439:145;;6543:30;6562:10;6543:18;:30::i;:::-;-1:-1:-1;;;;;6633:21:149;;;;;;:9;:21;;;;;:31;;6658:6;;6633:21;:31;;6658:6;;6633:31;:::i;:::-;;;;;;;;6716:6;6701:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;6738:26:149;;571:25:267;;;-1:-1:-1;;;;;6738:26:149;;;;;559:2:267;544:18;6738:26:149;425:177:267;9054:156:149;9120:4;9157:15;9143:10;;:29;;:60;;-1:-1:-1;9188:15:149;;5406:117:117:o;9143:60:149:-;-1:-1:-1;9175:10:149;;;9054:156::o;1209:281:150:-;1345:4;-1:-1:-1;;;;;;1372:59:150;;1387:44;1372:59;;:111;;;1447:36;1471:11;1447:23;:36::i;4059:629:48:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:48;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;;;;-1:-1:-1;;;;;1485:55:267;;4631:40:48;;;1467:74:267;1440:18;;4631:40:48;1321:226:267;2544:458:150;2656:5;1894:31;1919:5;1894:24;:31::i;:::-;2792:5:::1;:12;;;2744:24;:44;2769:5;:18;;;-1:-1:-1::0;;;;;2744:44:150::1;-1:-1:-1::0;;;;;2744:44:150::1;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2870:7:150::1;:19:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2870:19:150;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;2870:19:150;;::::1;-1:-1:-1::0;;2870:19:150;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;2905:90;2870:19;;2905:90:::1;::::0;::::1;::::0;571:25:267;;559:2;544:18;;425:177;7084:141:23;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;860:525:143;961:4;1024:8;:12;;;1018:26;1048:1;1018:31;1014:74;;-1:-1:-1;1072:5:143;;860:525;-1:-1:-1;860:525:143:o;1014:74::-;1143:8;:14;;;1137:28;1169:1;1137:33;1133:76;;-1:-1:-1;1193:5:143;;860:525;-1:-1:-1;860:525:143:o;1133:76::-;1262:21;;:26;:56;;;;-1:-1:-1;1292:21:143;;;;:26;1262:56;1258:99;;;-1:-1:-1;1341:5:143;;860:525;-1:-1:-1;860:525:143:o;1258:99::-;-1:-1:-1;1374:4:143;;860:525;-1:-1:-1;860:525:143:o;12023:203:149:-;-1:-1:-1;;;;;12088:20:149;;12084:105;;12131:47;;;;;;;;;;;;;;12084:105;12198:12;:21;;-1:-1:-1;;12198:21:149;-1:-1:-1;;;;;12198:21:149;;;;;;;;;;12023:203::o;3296:380:48:-;3411:47;;;-1:-1:-1;;;;;19820:55:267;;3411:47:48;;;19802:74:267;19892:18;;;;19885:34;;;3411:47:48;;;;;;;;;;19775:18:267;;;;3411:47:48;;;;;;;;;;;;;;3474:44;3426:13;3411:47;3474:23;:44::i;:::-;3469:201;;3561:43;;-1:-1:-1;;;;;19820:55:267;;;3561:43:48;;;19802:74:267;3601:1:48;19892:18:267;;;19885:34;3534:71:48;;3554:5;;3576:13;;;;;19775:18:267;;3561:43:48;19628:297:267;3534:71:48;3619:40;3639:5;3646:12;3619:19;:40::i;897:1306:69:-;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;1092:66;1088:70;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:69:o;1557:262:117:-;1690:4;-1:-1:-1;;;;;;1717:43:117;;1732:28;1717:43;;:95;;-1:-1:-1;876:25:63;-1:-1:-1;;;;;;861:40:63;;;1776:36:117;762:146:63;2705:151:53;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;7574:218:150:-;7680:15;;7658:38;;:21;:38::i;:::-;7706:37;7724:5;:18;;;7706:17;:37::i;:::-;7753:32;7772:5;:12;;;7753:18;:32::i;5189:578:48:-;5272:4;5574:12;5588:23;5623:5;-1:-1:-1;;;;;5615:19:48;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;-1:-1:-1;5669:17:48;;:22;;:56;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5657:103;;;;-1:-1:-1;;;;;;;;;;5730:26:48;;:30;;;5189:578::o;3180:392:53:-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;;;;3394:4;3359:41;;;1467:74:267;1440:18;;3359:41:53;1321:226:267;3303:108:53;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:53;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:53:o;6996:220:150:-;-1:-1:-1;;;;;7073:23:150;;;;:53;;-1:-1:-1;;;;;;7100:26:150;;7121:4;7100:26;7073:53;7069:141;;;7149:50;;;;;;;;;;;;;;7394:174;-1:-1:-1;;;;;7463:19:150;;7459:103;;7505:46;;;;;;;;;;;;;;4625:582:53;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:53;;;:23;5045:49;5041:119;;;5121:24;;;;;-1:-1:-1;;;;;1485:55:267;;5121:24:53;;;1467:74:267;1440:18;;5121:24:53;1321:226:267;5041:119:53;-1:-1:-1;5180:10:53;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:154:267;-1:-1:-1;;;;;93:5:267;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:247;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;607:332::-;665:6;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;773:9;760:23;-1:-1:-1;;;;;;816:5:267;812:78;805:5;802:89;792:117;;905:1;902;895:12;1136:180;1195:6;1248:2;1236:9;1227:7;1223:23;1219:32;1216:52;;;1264:1;1261;1254:12;1216:52;-1:-1:-1;1287:23:267;;1136:180;-1:-1:-1;1136:180:267:o;1799:367::-;1862:8;1872:6;1926:3;1919:4;1911:6;1907:17;1903:27;1893:55;;1944:1;1941;1934:12;1893:55;-1:-1:-1;1967:20:267;;2010:18;1999:30;;1996:50;;;2042:1;2039;2032:12;1996:50;2079:4;2071:6;2067:17;2055:29;;2139:3;2132:4;2122:6;2119:1;2115:14;2107:6;2103:27;2099:38;2096:47;2093:67;;;2156:1;2153;2146:12;2093:67;1799:367;;;;;:::o;2171:505::-;2266:6;2274;2282;2335:2;2323:9;2314:7;2310:23;2306:32;2303:52;;;2351:1;2348;2341:12;2303:52;2387:9;2374:23;2364:33;;2448:2;2437:9;2433:18;2420:32;2475:18;2467:6;2464:30;2461:50;;;2507:1;2504;2497:12;2461:50;2546:70;2608:7;2599:6;2588:9;2584:22;2546:70;:::i;:::-;2171:505;;2635:8;;-1:-1:-1;2520:96:267;;-1:-1:-1;;;;2171:505:267:o;3655:184::-;-1:-1:-1;;;3704:1:267;3697:88;3804:4;3801:1;3794:15;3828:4;3825:1;3818:15;3844:253;3916:2;3910:9;3958:4;3946:17;;3993:18;3978:34;;4014:22;;;3975:62;3972:88;;;4040:18;;:::i;:::-;4076:2;4069:22;3844:253;:::o;4102:334::-;4173:2;4167:9;4229:2;4219:13;;-1:-1:-1;;4215:86:267;4203:99;;4332:18;4317:34;;4353:22;;;4314:62;4311:88;;;4379:18;;:::i;:::-;4415:2;4408:22;4102:334;;-1:-1:-1;4102:334:267:o;4441:246::-;4490:4;4523:18;4515:6;4512:30;4509:56;;;4545:18;;:::i;:::-;-1:-1:-1;4602:2:267;4590:15;-1:-1:-1;;4586:88:267;4676:4;4582:99;;4441:246::o;4692:464::-;4735:5;4788:3;4781:4;4773:6;4769:17;4765:27;4755:55;;4806:1;4803;4796:12;4755:55;4842:6;4829:20;4873:49;4889:32;4918:2;4889:32;:::i;:::-;4873:49;:::i;:::-;4947:2;4938:7;4931:19;4993:3;4986:4;4981:2;4973:6;4969:15;4965:26;4962:35;4959:55;;;5010:1;5007;5000:12;4959:55;5075:2;5068:4;5060:6;5056:17;5049:4;5040:7;5036:18;5023:55;5123:1;5098:16;;;5116:4;5094:27;5087:38;;;;5102:7;4692:464;-1:-1:-1;;;4692:464:267:o;5161:1272::-;5300:6;5308;5316;5369:2;5357:9;5348:7;5344:23;5340:32;5337:52;;;5385:1;5382;5375:12;5337:52;5424:9;5411:23;5443:31;5468:5;5443:31;:::i;:::-;5493:5;-1:-1:-1;5549:2:267;5534:18;;5521:32;5572:18;5602:14;;;5599:34;;;5629:1;5626;5619:12;5599:34;5652:22;;;;5708:4;5690:16;;;5686:27;5683:47;;;5726:1;5723;5716:12;5683:47;5754:22;;:::i;:::-;5814:2;5801:16;5792:7;5785:33;5873:2;5869;5865:11;5852:25;5847:2;5838:7;5834:16;5827:51;5924:2;5920;5916:11;5903:25;5953:2;5943:8;5940:16;5937:36;;;5969:1;5966;5959:12;5937:36;6007:45;6044:7;6033:8;6029:2;6025:17;6007:45;:::i;:::-;6002:2;5993:7;5989:16;5982:71;;6099:2;6095;6091:11;6078:25;6128:2;6118:8;6115:16;6112:36;;;6144:1;6141;6134:12;6112:36;6182:45;6219:7;6208:8;6204:2;6200:17;6182:45;:::i;:::-;6177:2;6164:16;;6157:71;-1:-1:-1;6168:7:267;-1:-1:-1;6307:2:267;6292:18;;6279:32;;-1:-1:-1;6323:16:267;;;6320:36;;;6352:1;6349;6342:12;6320:36;;6375:52;6419:7;6408:8;6397:9;6393:24;6375:52;:::i;:::-;6365:62;;;5161:1272;;;;;:::o;6438:250::-;6523:1;6533:113;6547:6;6544:1;6541:13;6533:113;;;6623:11;;;6617:18;6604:11;;;6597:39;6569:2;6562:10;6533:113;;;-1:-1:-1;;6680:1:267;6662:16;;6655:27;6438:250::o;6693:330::-;6735:3;6773:5;6767:12;6800:6;6795:3;6788:19;6816:76;6885:6;6878:4;6873:3;6869:14;6862:4;6855:5;6851:16;6816:76;:::i;:::-;6937:2;6925:15;-1:-1:-1;;6921:88:267;6912:98;;;;7012:4;6908:109;;6693:330;-1:-1:-1;;6693:330:267:o;7028:220::-;7177:2;7166:9;7159:21;7140:4;7197:45;7238:2;7227:9;7223:18;7215:6;7197:45;:::i;7769:488::-;7822:3;7860:5;7854:12;7887:6;7882:3;7875:19;7913:4;7942;7937:3;7933:14;7926:21;;7981:4;7974:5;7970:16;8004:1;8014:218;8028:6;8025:1;8022:13;8014:218;;;8093:13;;-1:-1:-1;;;;;8089:62:267;8077:75;;8172:12;;;;8207:15;;;;8050:1;8043:9;8014:218;;;-1:-1:-1;8248:3:267;;7769:488;-1:-1:-1;;;;;7769:488:267:o;8262:261::-;8441:2;8430:9;8423:21;8404:4;8461:56;8513:2;8502:9;8498:18;8490:6;8461:56;:::i;8528:248::-;8596:6;8604;8657:2;8645:9;8636:7;8632:23;8628:32;8625:52;;;8673:1;8670;8663:12;8625:52;-1:-1:-1;;8696:23:267;;;8766:2;8751:18;;;8738:32;;-1:-1:-1;8528:248:267:o;8781:315::-;8849:6;8857;8910:2;8898:9;8889:7;8885:23;8881:32;8878:52;;;8926:1;8923;8916:12;8878:52;8962:9;8949:23;8939:33;;9022:2;9011:9;9007:18;8994:32;9035:31;9060:5;9035:31;:::i;:::-;9085:5;9075:15;;;8781:315;;;;;:::o;9101:941::-;9166:3;9204:5;9198:12;9231:6;9226:3;9219:19;9257:4;9286;9281:3;9277:14;9270:21;;9325:4;9318:5;9314:16;9348:1;9358:659;9372:6;9369:1;9366:13;9358:659;;;9431:13;;9538:9;;-1:-1:-1;;;;;9534:18:267;;;9522:31;;9597:11;;;9591:18;9587:27;9573:12;;;9566:49;9638:4;9682:11;;;9676:18;9662:12;;;9655:40;9718:4;9762:11;;;9756:18;9742:12;;;9735:40;9798:4;9842:11;;;9836:18;9822:12;;;9815:40;9878:4;9922:11;;;9916:18;9902:12;;;9895:40;9964:4;9955:14;;;;9992:15;;;;9394:1;9387:9;9358:659;;10047:335;10288:2;10277:9;10270:21;10251:4;10308:68;10372:2;10361:9;10357:18;10349:6;10308:68;:::i;10387:439::-;10440:3;10478:5;10472:12;10505:6;10500:3;10493:19;10531:4;10560;10555:3;10551:14;10544:21;;10599:4;10592:5;10588:16;10622:1;10632:169;10646:6;10643:1;10640:13;10632:169;;;10707:13;;10695:26;;10741:12;;;;10776:15;;;;10668:1;10661:9;10632:169;;10831:802;11004:2;10993:9;10986:21;11049:6;11043:13;11038:2;11027:9;11023:18;11016:41;11111:2;11103:6;11099:15;11093:22;11088:2;11077:9;11073:18;11066:50;11184:2;11176:6;11172:15;11166:22;11159:30;11152:38;11147:2;11136:9;11132:18;11125:66;10967:4;11238:2;11230:6;11226:15;11220:22;11279:4;11273:3;11262:9;11258:19;11251:33;11307:63;11365:3;11354:9;11350:19;11336:12;11307:63;:::i;:::-;11293:77;;11419:3;11411:6;11407:16;11401:23;-1:-1:-1;;11478:9:267;11470:6;11466:22;11462:95;11455:4;11444:9;11440:20;11433:125;11575:52;11620:6;11604:14;11575:52;:::i;12226:129::-;12311:18;12304:5;12300:30;12293:5;12290:41;12280:69;;12345:1;12342;12335:12;12360:245;12418:6;12471:2;12459:9;12450:7;12446:23;12442:32;12439:52;;;12487:1;12484;12477:12;12439:52;12526:9;12513:23;12545:30;12569:5;12545:30;:::i;13386:383::-;13463:6;13471;13479;13532:2;13520:9;13511:7;13507:23;13503:32;13500:52;;;13548:1;13545;13538:12;13500:52;13584:9;13571:23;13561:33;;13641:2;13630:9;13626:18;13613:32;13603:42;;13695:2;13684:9;13680:18;13667:32;13708:31;13733:5;13708:31;:::i;:::-;13758:5;13748:15;;;13386:383;;;;;:::o;14255:315::-;14323:6;14331;14384:2;14372:9;14363:7;14359:23;14355:32;14352:52;;;14400:1;14397;14390:12;14352:52;14439:9;14426:23;14458:31;14483:5;14458:31;:::i;:::-;14508:5;14560:2;14545:18;;;;14532:32;;-1:-1:-1;;;14255:315:267:o;15037:118::-;15123:5;15116:13;15109:21;15102:5;15099:32;15089:60;;15145:1;15142;15135:12;15160:902;15288:6;15296;15304;15312;15320;15373:2;15361:9;15352:7;15348:23;15344:32;15341:52;;;15389:1;15386;15379:12;15341:52;15428:9;15415:23;15447:28;15469:5;15447:28;:::i;:::-;15494:5;-1:-1:-1;15550:2:267;15535:18;;15522:32;15573:18;15603:14;;;15600:34;;;15630:1;15627;15620:12;15600:34;15669:70;15731:7;15722:6;15711:9;15707:22;15669:70;:::i;:::-;15758:8;;-1:-1:-1;15643:96:267;-1:-1:-1;15846:2:267;15831:18;;15818:32;;-1:-1:-1;15862:16:267;;;15859:36;;;15891:1;15888;15881:12;15859:36;;15930:72;15994:7;15983:8;15972:9;15968:24;15930:72;:::i;:::-;15160:902;;;;-1:-1:-1;15160:902:267;;-1:-1:-1;16021:8:267;;15904:98;15160:902;-1:-1:-1;;;15160:902:267:o;16067:743::-;16464:2;16453:9;16446:21;16427:4;16490:68;16554:2;16543:9;16539:18;16531:6;16490:68;:::i;:::-;16606:9;16598:6;16594:22;16589:2;16578:9;16574:18;16567:50;16640:44;16677:6;16669;16640:44;:::i;:::-;16626:58;;16732:9;16724:6;16720:22;16715:2;16704:9;16700:18;16693:50;16760:44;16797:6;16789;16760:44;:::i;16815:521::-;16910:6;16918;16926;16934;16942;16995:3;16983:9;16974:7;16970:23;16966:33;16963:53;;;17012:1;17009;17002:12;16963:53;17048:9;17035:23;17025:33;;17105:2;17094:9;17090:18;17077:32;17067:42;;17159:2;17148:9;17144:18;17131:32;17172:31;17197:5;17172:31;:::i;:::-;16815:521;;;;-1:-1:-1;17222:5:267;;17274:2;17259:18;;17246:32;;-1:-1:-1;17325:3:267;17310:19;17297:33;;16815:521;-1:-1:-1;;16815:521:267:o;17341:309::-;17406:6;17414;17467:2;17455:9;17446:7;17442:23;17438:32;17435:52;;;17483:1;17480;17473:12;17435:52;17519:9;17506:23;17496:33;;17579:2;17568:9;17564:18;17551:32;17592:28;17614:5;17592:28;:::i;17655:275::-;17749:6;17802:2;17790:9;17781:7;17777:23;17773:32;17770:52;;;17818:1;17815;17808:12;17770:52;17850:9;17844:16;17869:31;17894:5;17869:31;:::i;17935:184::-;18005:6;18058:2;18046:9;18037:7;18033:23;18029:32;18026:52;;;18074:1;18071;18064:12;18026:52;-1:-1:-1;18097:16:267;;17935:184;-1:-1:-1;17935:184:267:o;18124:799::-;18364:25;;;18352:2;18408;18426:18;;;18419:30;;;18337:18;;;18484:22;;;18304:4;;18563:6;;18537:2;18522:18;;18304:4;18597:300;18611:6;18608:1;18605:13;18597:300;;;18686:6;18673:20;18706:31;18731:5;18706:31;:::i;:::-;-1:-1:-1;;;;;18762:54:267;18750:67;;18872:15;;;;18837:12;;;;18633:1;18626:9;18597:300;;;-1:-1:-1;18914:3:267;18124:799;-1:-1:-1;;;;;;;18124:799:267:o;18928:184::-;-1:-1:-1;;;18977:1:267;18970:88;19077:4;19074:1;19067:15;19101:4;19098:1;19091:15;19117:128;19184:9;;;19205:11;;;19202:37;;;19219:18;;:::i;19250:184::-;-1:-1:-1;;;19299:1:267;19292:88;19399:4;19396:1;19389:15;19423:4;19420:1;19413:15;19439:184;-1:-1:-1;;;19488:1:267;19481:88;19588:4;19585:1;19578:15;19612:4;19609:1;19602:15;19930:676;20050:6;20058;20066;20074;20127:3;20115:9;20106:7;20102:23;20098:33;20095:53;;;20144:1;20141;20134:12;20095:53;20176:9;20170:16;20195:31;20220:5;20195:31;:::i;:::-;20295:2;20280:18;;20274:25;20245:5;;-1:-1:-1;20308:33:267;20274:25;20308:33;:::i;:::-;20412:2;20397:18;;20391:25;20360:7;;-1:-1:-1;20425:33:267;20391:25;20425:33;:::i;:::-;20529:2;20514:18;;20508:25;20477:7;;-1:-1:-1;20542:32:267;20508:25;20542:32;:::i;:::-;19930:676;;;;-1:-1:-1;19930:676:267;;-1:-1:-1;;19930:676:267:o;20825:437::-;20904:1;20900:12;;;;20947;;;20968:61;;21022:4;21014:6;21010:17;21000:27;;20968:61;21075:2;21067:6;21064:14;21044:18;21041:38;21038:218;;-1:-1:-1;;;21109:1:267;21102:88;21213:4;21210:1;21203:15;21241:4;21238:1;21231:15;21038:218;;20825:437;;;:::o;21267:245::-;21334:6;21387:2;21375:9;21366:7;21362:23;21358:32;21355:52;;;21403:1;21400;21393:12;21355:52;21435:9;21429:16;21454:28;21476:5;21454:28;:::i;22075:125::-;22140:9;;;22161:10;;;22158:36;;;22174:18;;:::i;22205:168::-;22278:9;;;22309;;22326:15;;;22320:22;;22306:37;22296:71;;22347:18;;:::i;22378:184::-;-1:-1:-1;;;22427:1:267;22420:88;22527:4;22524:1;22517:15;22551:4;22548:1;22541:15;22567:274;22607:1;22633;22623:189;;-1:-1:-1;;;22665:1:267;22658:88;22769:4;22766:1;22759:15;22797:4;22794:1;22787:15;22623:189;-1:-1:-1;22826:9:267;;22567:274::o;23337:197::-;23378:3;23416:5;23410:12;23431:65;23489:6;23484:3;23477:4;23470:5;23466:16;23431:65;:::i;:::-;23512:16;;;;;23337:197;-1:-1:-1;;23337:197:267:o;23668:1948::-;24617:19;24612:3;24605:32;24587:3;24666:6;24660:13;24692:4;24705:73;24771:6;24766:2;24761:3;24757:12;24752:2;24744:6;24740:15;24705:73;:::i;:::-;24842:17;24837:2;24797:16;;;24829:11;;;24822:38;24885:13;;24907:74;24885:13;24959:11;;;24942:15;;;24907:74;:::i;:::-;25046:19;25000:17;;25033:11;;;25026:40;;;;25091:13;;25113:74;25091:13;25173:2;25165:11;;25148:15;;;25113:74;:::i;:::-;25252:17;25247:2;25206:17;;;;25239:11;;;25232:38;25295:13;;25317:74;25295:13;25377:2;25369:11;;25352:15;;;25317:74;:::i;:::-;25456:34;25451:2;25410:17;;;;25443:11;;;25436:55;-1:-1:-1;25520:5:267;25515:2;25507:11;;25500:26;25542:68;25572:37;25605:2;25597:11;;25589:6;25572:37;:::i;:::-;23616:12;23604:25;;23654:2;23645:12;;23539:124;25542:68;25535:75;23668:1948;-1:-1:-1;;;;;;;;23668:1948:267:o;25621:949::-;25969:4;25998:3;26028:2;26017:9;26010:21;26048:45;26089:2;26078:9;26074:18;26066:6;26048:45;:::i;:::-;-1:-1:-1;;;;;26190:15:267;;;26185:2;26170:18;;26163:43;26242:15;;;26237:2;26222:18;;26215:43;-1:-1:-1;;26294:15:267;;;26289:2;26274:18;;26267:43;26359:18;26347:31;;;;26341:3;26326:19;;26319:60;26416:15;;;;26410:3;26395:19;;26388:44;26463:3;26448:19;;26441:35;;;;26507:3;26492:19;;26485:35;;;;26551:3;26536:19;26529:35;;;;26040:53;25621:949;-1:-1:-1;25621:949:267:o;26575:195::-;26614:3;-1:-1:-1;;26638:5:267;26635:77;26632:103;;26715:18;;:::i;:::-;-1:-1:-1;26762:1:267;26751:13;;26575:195::o;26775:358::-;26875:6;26870:3;26863:19;26845:3;26905:66;26897:6;26894:78;26891:98;;;26985:1;26982;26975:12;26891:98;27021:6;27018:1;27014:14;27073:8;27066:5;27059:4;27054:3;27050:14;27037:45;27102:18;;;;27122:4;27098:29;;26775:358;-1:-1:-1;;;26775:358:267:o;27138:817::-;27521:6;27510:9;27503:25;27564:6;27559:2;27548:9;27544:18;27537:34;27607:6;27602:2;27591:9;27587:18;27580:34;27664:6;27657:14;27650:22;27645:2;27634:9;27630:18;27623:50;27710:3;27704;27693:9;27689:19;27682:32;27484:4;27737:74;27806:3;27795:9;27791:19;27783:6;27775;27737:74;:::i;:::-;27860:9;27852:6;27848:22;27842:3;27831:9;27827:19;27820:51;27888:61;27942:6;27934;27926;27888:61;:::i;:::-;27880:69;27138:817;-1:-1:-1;;;;;;;;;;;27138:817:267:o;27960:331::-;28065:9;28076;28118:8;28106:10;28103:24;28100:44;;;28140:1;28137;28130:12;28100:44;28169:6;28159:8;28156:20;28153:40;;;28189:1;28186;28179:12;28153:40;-1:-1:-1;;28215:23:267;;;28260:25;;;;;-1:-1:-1;27960:331:267:o;28296:372::-;28455:66;28417:19;;28539:11;;;;28570:2;28562:11;;28559:103;;;28632:2;28628:12;;;;28625:1;28621:20;28617:29;;;28609:38;28605:47;;;;28296:372;-1:-1:-1;;28296:372:267:o;29908:543::-;30010:2;30005:3;30002:11;29999:446;;;30046:1;30070:5;30067:1;30060:16;30114:4;30111:1;30101:18;30184:2;30172:10;30168:19;30165:1;30161:27;30155:4;30151:38;30220:4;30208:10;30205:20;30202:47;;;-1:-1:-1;30243:4:267;30202:47;30298:2;30293:3;30289:12;30286:1;30282:20;30276:4;30272:31;30262:41;;30353:82;30371:2;30364:5;30361:13;30353:82;;;30416:17;;;30397:1;30386:13;30353:82;;30687:1464;30813:3;30807:10;30840:18;30832:6;30829:30;30826:56;;;30862:18;;:::i;:::-;30891:97;30981:6;30941:38;30973:4;30967:11;30941:38;:::i;:::-;30935:4;30891:97;:::i;:::-;31043:4;;31100:2;31089:14;;31117:1;31112:782;;;;31938:1;31955:6;31952:89;;;-1:-1:-1;32007:19:267;;;32001:26;31952:89;-1:-1:-1;;30584:1:267;30580:11;;;30576:84;30572:89;30562:100;30668:1;30664:11;;;30559:117;32054:81;;31082:1063;;31112:782;29855:1;29848:14;;;29892:4;29879:18;;-1:-1:-1;;31148:79:267;;;31325:236;31339:7;31336:1;31333:14;31325:236;;;31428:19;;;31422:26;31407:42;;31520:27;;;;31488:1;31476:14;;;;31355:19;;31325:236;;;31329:3;31589:6;31580:7;31577:19;31574:261;;;31650:19;;;31644:26;-1:-1:-1;;31733:1:267;31729:14;;;31745:3;31725:24;31721:97;31717:102;31702:118;31687:134;;31574:261;-1:-1:-1;;;;;31881:1:267;31865:14;;;31861:22;31848:36;;-1:-1:-1;30687:1464:267:o;32156:289::-;32287:3;32325:6;32319:13;32341:66;32400:6;32395:3;32388:4;32380:6;32376:17;32341:66;:::i;:::-;32423:16;;;;;32156:289;-1:-1:-1;;32156:289:267:o;33249:566::-;33486:6;33481:3;33474:19;33456:3;33522:6;33516:13;33538:73;33604:6;33599:2;33594:3;33590:12;33585:2;33577:6;33573:15;33538:73;:::i;:::-;33639:6;33634:3;33630:16;33620:26;;33677:6;33671:13;33693:74;33758:8;33753:2;33749;33745:11;33740:2;33732:6;33728:15;33693:74;:::i;:::-;33787:17;33806:2;33783:26;;33249:566;-1:-1:-1;;;;;33249:566:267:o;34727:148::-;34815:4;34794:12;;;34808;;;34790:31;;34833:13;;34830:39;;;34849:18;;:::i;34880:338::-;-1:-1:-1;;;;;35059:6:267;35055:55;35044:9;35037:74;35147:2;35142;35131:9;35127:18;35120:30;35018:4;35167:45;35208:2;35197:9;35193:18;35185:6;35167:45;:::i;:::-;35159:53;34880:338;-1:-1:-1;;;;34880:338:267:o;35223:770::-;35308:6;35316;35369:2;35357:9;35348:7;35344:23;35340:32;35337:52;;;35385:1;35382;35375:12;35337:52;35417:9;35411:16;35436:28;35458:5;35436:28;:::i;:::-;35532:2;35517:18;;35511:25;35483:5;;-1:-1:-1;35559:18:267;35548:30;;35545:50;;;35591:1;35588;35581:12;35545:50;35614:22;;35667:4;35659:13;;35655:27;-1:-1:-1;35645:55:267;;35696:1;35693;35686:12;35645:55;35725:2;35719:9;35750:49;35766:32;35795:2;35766:32;:::i;35750:49::-;35822:2;35815:5;35808:17;35862:7;35857:2;35852;35848;35844:11;35840:20;35837:33;35834:53;;;35883:1;35880;35873:12;35834:53;35896:67;35960:2;35955;35948:5;35944:14;35939:2;35935;35931:11;35896:67;:::i;:::-;35982:5;35972:15;;;;;35223:770;;;;;:::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "ASSERTER_ROLE()": "bf14d4a9",
        "KPICounter()": "78802654",
        "MAX_QUEUE_LENGTH()": "6e73ba5b",
        "amountPaid(address,uint256)": "b33ec618",
        "assertDataFor(bytes32,bytes32,address)": "93ee663b",
        "assertionConfig(bytes32)": "7b9a9c7f",
        "assertionData(bytes32)": "2a4e1904",
        "assertionDisputedCallback(bytes32)": "d448a4ec",
        "assertionLiveness()": "b75d4e24",
        "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
        "balanceOf(address)": "70a08231",
        "claimRewards()": "372500ab",
        "collectPaymentOrders()": "c0231ff6",
        "createKPI(bool,uint256[],uint256[])": "bc7d2a33",
        "defaultCurrency()": "20402e1d",
        "defaultIdentifier()": "d509b017",
        "depositFeeFunds(uint256)": "64e6bbe5",
        "dequeueStake()": "2979b670",
        "earned(address)": "008cc262",
        "estimateReward(uint256,uint256)": "7e5f43ff",
        "getAssertion(bytes32)": "88302884",
        "getAssertionConfig(bytes32)": "956ae17b",
        "getData(bytes32)": "54f6127f",
        "getKPI(uint256)": "772fd8da",
        "getStakingQueue()": "6315a455",
        "grantModuleRole(bytes32,address)": "6c67e807",
        "grantModuleRoleBatched(bytes32,address[])": "272bbd44",
        "identifier()": "7998a1c4",
        "init(address,(uint256,uint256,string,string),bytes)": "42dfe958",
        "isTrustedForwarder(address)": "572b6c05",
        "oo()": "8921a614",
        "orchestrator()": "b74795d9",
        "outstandingTokenAmount(address)": "2e84db5f",
        "paymentOrders()": "75fa0b76",
        "postAssertion(bytes32,bytes32,address,uint256,uint256)": "c84c84f0",
        "registryOfKPIs(uint256)": "3ecd7972",
        "revokeModuleRole(bytes32,address)": "bcb61920",
        "revokeModuleRoleBatched(bytes32,address[])": "24e30270",
        "rewardRate()": "7b0a47ee",
        "rewardsEnd()": "a6d14d69",
        "setDefaultAssertionLiveness(uint64)": "81d09517",
        "setDefaultCurrency(address)": "0f14c8cf",
        "setOptimisticOracle(address)": "bf5c3252",
        "setRewards(uint256,uint256)": "654e51e7",
        "stake(uint256)": "a694fc3a",
        "stakingQueue(uint256)": "0fe5bc3b",
        "stakingQueueAmounts(address)": "0dfc4357",
        "stakingToken()": "72f702f3",
        "supportsInterface(bytes4)": "01ffc9a7",
        "title()": "4a79d50c",
        "totalQueuedFunds()": "d701aedb",
        "totalSupply()": "18160ddd",
        "trustedForwarder()": "7da0a877",
        "unstake(uint256)": "2e17de78",
        "url()": "5600f04f",
        "version()": "54fd4d50"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"funcSig\",\"type\":\"string\"}],\"name\":\"Module_OrchestratorCallbackFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Module__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Module__ERC20PaymentClientBase__InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__Invalidend\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidOrchestratorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPINumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidTargetValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__StakingQueueIsFull\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidRewardRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidStakingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OnlyCallableByOrchestrator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__CallerNotOO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidDefaultCurrency\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidDefaultLiveness\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidOOInstance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAsserted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAssertionResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeFundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"KPI_Id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalKPIRewards\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"trancheValues\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"trancheRewards\",\"type\":\"uint256[]\"}],\"name\":\"KPICreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parentOrchestrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"moduleTitle\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"}],\"name\":\"ModuleInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentOrderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsEnd\",\"type\":\"uint256\"}],\"name\":\"RewardSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDuration\",\"type\":\"uint256\"}],\"name\":\"RewardsDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeDequeued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeEnqueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASSERTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KPICounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_QUEUE_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"amountPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertDataFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"distributed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectPaymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20PaymentClientBase_v1.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_continuous\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"_trancheValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_trancheRewards\",\"type\":\"uint256[]\"}],\"name\":\"createKPI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFeeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dequeueStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"estimateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"internalType\":\"struct IOptimisticOracleIntegrator.DataAssertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"distributed\",\"type\":\"bool\"}],\"internalType\":\"struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"KPInum\",\"type\":\"uint256\"}],\"name\":\"getKPI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"trancheValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"trancheRewards\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ILM_PC_KPIRewarder_v1.KPI\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingQueue\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"grantModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"grantModuleRoleBatched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOrchestrator_v1\",\"name\":\"orchestrator_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct IModule_v1.Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orchestrator\",\"outputs\":[{\"internalType\":\"contract IOrchestrator_v1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"outstandingTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20PaymentClientBase_v1.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetKPI\",\"type\":\"uint256\"}],\"name\":\"postAssertion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registryOfKPIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"revokeModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"revokeModuleRoleBatched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_newLiveness\",\"type\":\"uint64\"}],\"name\":\"setDefaultAssertionLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCurrency\",\"type\":\"address\"}],\"name\":\"setDefaultCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOO\",\"type\":\"address\"}],\"name\":\"setOptimisticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingQueueAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalQueuedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"url\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"Module_OrchestratorCallbackFailed(string)\":[{\"params\":{\"funcSig\":\"The signature of the function called.\"}}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"ModuleInitialized(address,string,uint256,uint256)\":{\"params\":{\"majorVersion\":\"The major version of the module.\",\"minorVersion\":\"The minor version of the module.\",\"moduleTitle\":\"The title of the module.\",\"parentOrchestrator\":\"The address of the orchestrator the module is linked to.\"}},\"PaymentOrderAdded(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens the payment consists of.\",\"recipient\":\"The address that will receive the payment.\"}}},\"kind\":\"dev\",\"methods\":{\"amountPaid(address,uint256)\":{\"details\":\"Payment Client will reduce the total amount of tokens it will stock up by the given amount This has to be called by a paymentProcessor\",\"params\":{\"amount\":\"amount of tokens that have been paid out\"}},\"assertDataFor(bytes32,bytes32,address)\":{\"details\":\"Data can be asserted many times with the same combination of arguments, resulting in unique assertionIds. This is because the block.timestamp is included in the claim. The consumer contract must store the returned assertionId identifiers to able to get the information using getData.\",\"params\":{\"asserter\":\"The address doing the asserter. If zero defaults to _msgSender().\",\"data\":\"The data to assert.\",\"dataId\":\"The id of the data to assert.\"},\"returns\":{\"assertionId\":\"The id of the generated Assertion.\"}},\"assertionDisputedCallback(bytes32)\":{\"details\":\"This OptimisticOracleV3 callback function needs to be defined so the OOv3 doesn't revert when it tries to call it.\",\"params\":{\"assertionId\":\"The id of the Assertion generating the callback.\"}},\"assertionResolvedCallback(bytes32,bool)\":{\"params\":{\"assertionId\":\"The id of the Assertion generating the callback.\"}},\"balanceOf(address)\":{\"params\":{\"user\":\"The address of a user that staked\"}},\"collectPaymentOrders()\":{\"details\":\"Marks the orders as completed for the client.      The responsibility to fulfill the orders are now in the caller's      hand!\",\"returns\":{\"_0\":\"list of payment orders\",\"_1\":\"total amount of token to pay\"}},\"createKPI(bool,uint256[],uint256[])\":{\"params\":{\"_continuous\":\"Should the tranche rewards be distributed continuously or in steps\",\"_trancheRewards\":\"The rewards to be distributed at completion of each tranche\",\"_trancheValues\":\"The value at which the tranches end\"}},\"depositFeeFunds(uint256)\":{\"params\":{\"amount\":\"The amount to deposit\"}},\"earned(address)\":{\"params\":{\"user\":\"The address of a user that staked\"}},\"estimateReward(uint256,uint256)\":{\"details\":\"this calculation uses the current reward rate and the current totalSupply to calculate the rewardsthe estimated result could be 0 if the estimated rewards are not high enough\",\"params\":{\"amount\":\": how much token are staked\",\"duration\":\": how long the tokens will be staked\"}},\"getAssertion(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"DataAssertion The Assertion.\"}},\"getAssertionConfig(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return\"}},\"getData(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"bool Wether the assertion is resolved.\",\"_1\":\"bytes32 The Assertion Data.\"}},\"getKPI(uint256)\":{\"params\":{\"KPInum\":\"The number of the KPI to return\"}},\"identifier()\":{\"details\":\"The identifier is defined as the keccak256 hash of the module's      abi packed encoded major version, url and title.\",\"returns\":{\"_0\":\"The module's identifier.\"}},\"init(address,(uint256,uint256,string,string),bytes)\":{\"details\":\"CAN be overriden by downstream contract.MUST call `__Module_init()`.\",\"params\":{\"configData\":\"Variable config data for specific module                   implementations.\",\"metadata\":\"The module's metadata.\",\"orchestrator\":\"The module's orchestrator instance.\"}},\"isTrustedForwarder(address)\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator\",\"params\":{\"forwarder\":\"The contract address to be verified.\"},\"returns\":{\"_0\":\"bool Is the given address the trusted forwarder\"}},\"orchestrator()\":{\"returns\":{\"_0\":\"The module's orchestrator.\"}},\"postAssertion(bytes32,bytes32,address,uint256,uint256)\":{\"details\":\"about the asserter address: any address can be set as asserter, it will be expected to pay for the bond on posting. The bond tokens can also be deposited in the Module and used to pay for itself, but ONLY if the bond token is different from the one being used for staking. If the asserter is set to 0, whomever calls postAssertion will be paying the bond.\",\"params\":{\"assertedValue\":\"The target value that will be asserted\",\"asserter\":\"The address of the asserter\",\"data\":\"The data to be posted\",\"dataId\":\"The dataId to be posted\",\"targetKPI\":\"The KPI to be used for distribution once the assertion confirms\"},\"returns\":{\"assertionId\":\"The assertionId received for the posted assertion\"}},\"setDefaultAssertionLiveness(uint64)\":{\"params\":{\"_newLiveness\":\"The new liveness in seconds.\"}},\"setDefaultCurrency(address)\":{\"params\":{\"_newCurrency\":\"The address of the new default currency.\"}},\"setOptimisticOracle(address)\":{\"params\":{\"_newOO\":\"The address of the new OptimisticOracleV3 instance.\"}},\"setRewards(uint256,uint256)\":{\"details\":\"Equally distributes the reward amount over the given time period\",\"params\":{\"amount\":\": how much token should be distributed\",\"duration\":\": how much time it will take to distribute the token\"}},\"stake(uint256)\":{\"details\":\"should tokens already be staked, then the sending address will collect the rewards up until this point\",\"params\":{\"amount\":\": how much token should be staked\"}},\"title()\":{\"returns\":{\"_0\":\"The module's title.\"}},\"trustedForwarder()\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator\",\"returns\":{\"_0\":\"address The trusted forwarder\"}},\"unstake(uint256)\":{\"details\":\"this function will revert with a Over/Underflow error in case amount is higher than balance\",\"params\":{\"amount\":\": how much token should be unstaked\"}},\"url()\":{\"returns\":{\"_0\":\"The module's URL.\"}},\"version()\":{\"returns\":{\"_0\":\"The module's major version.\",\"_1\":\"The module's minor version.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"Module_OrchestratorCallbackFailed(string)\":[{\"notice\":\"Orchestrator_v1 callback triggered failed.\"}],\"Module__CallerNotAuthorized(bytes32,address)\":[{\"notice\":\"Function is only callable by authorized caller.\"}],\"Module__ERC20PaymentClientBase__ArrayLengthMismatch()\":[{\"notice\":\"Given arrays' length mismatch.\"}],\"Module__ERC20PaymentClientBase__CallerNotAuthorized()\":[{\"notice\":\"Function is only callable by authorized address.\"}],\"Module__ERC20PaymentClientBase__InsufficientFunds(address)\":[{\"notice\":\"Insufficient funds to fulfill the payment.\"}],\"Module__ERC20PaymentClientBase__InvalidAmount()\":[{\"notice\":\"Given amount invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidRecipient()\":[{\"notice\":\"Given recipient invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidToken()\":[{\"notice\":\"Given token invalid.\"}],\"Module__ERC20PaymentClientBase__Invalidend()\":[{\"notice\":\"Given end invalid.\"}],\"Module__ERC20PaymentClientBase__TokenTransferFailed()\":[{\"notice\":\"ERC20 token transfer failed.\"}],\"Module__InvalidMetadata()\":[{\"notice\":\"Given metadata invalid.\"}],\"Module__InvalidOrchestratorAddress()\":[{\"notice\":\"Given orchestrator address invalid.\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPINumber()\":[{\"notice\":\"The KPI number is invalid\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues()\":[{\"notice\":\"The values for the tranches are not in ascending order\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths()\":[{\"notice\":\"The number of tranches in the KPI does not match the number of rewards\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidTargetValue()\":[{\"notice\":\"The target value for the assertion cannot be zero\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber()\":[{\"notice\":\"The KPI beinge created has either no tranches or too many\"}],\"Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond()\":[{\"notice\":\"The Token used paying the bond cannot be the same that is being staked.\"}],\"Module__LM_PC_KPIRewarder_v1__StakingQueueIsFull()\":[{\"notice\":\"The Queue for new stakers is full\"}],\"Module__LM_PC_Staking_v1__InvalidDuration()\":[{\"notice\":\"Given Duration is invalid.\"}],\"Module__LM_PC_Staking_v1__InvalidRewardRate()\":[{\"notice\":\"The calculated Reward rate is too low to be used.\"}],\"Module__LM_PC_Staking_v1__InvalidStakingToken()\":[{\"notice\":\"Given stakinng token address is invalid.\"}],\"Module__OnlyCallableByOrchestrator()\":[{\"notice\":\"Function is only callable by the orchestrator.\"}],\"Module__OptimisticOracleIntegrator__CallerNotOO()\":[{\"notice\":\"Caller is not Optimistic Oracle instance\"}],\"Module__OptimisticOracleIntegrator__InvalidDefaultCurrency()\":[{\"notice\":\"Invalid default currency\"}],\"Module__OptimisticOracleIntegrator__InvalidDefaultLiveness()\":[{\"notice\":\"Invalid default liveness\"}],\"Module__OptimisticOracleIntegrator__InvalidOOInstance()\":[{\"notice\":\"Invalid Optimistic Oracle instance\"}]},\"events\":{\"FeeFundsDeposited(address,uint256)\":{\"notice\":\"Event emitted when funds for paying the bonding fee are deposited into the contract\"},\"KPICreated(uint256,uint256,uint256,bool,uint256[],uint256[])\":{\"notice\":\"Event emitted when a KPI is created\"},\"ModuleInitialized(address,string,uint256,uint256)\":{\"notice\":\"Module has been initialized.\"},\"PaymentOrderAdded(address,address,uint256)\":{\"notice\":\"Added a payment order.\"},\"RewardSet(uint256,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a reward is added.\"},\"RewardsDistributed(address,uint256)\":{\"notice\":\"Event emitted when a user receives Rewards.\"},\"RewardsDurationUpdated(uint256)\":{\"notice\":\"Event emitted when the reward duration is updated.\"},\"StakeDequeued(address,uint256)\":{\"notice\":\"Event emitted when a user stake is dequeued before staking\"},\"StakeEnqueued(address,uint256)\":{\"notice\":\"Event emitted when a user stake is enqueued\"},\"Staked(address,uint256)\":{\"notice\":\"Event emitted when a user stakes an amount.\"},\"Unstaked(address,uint256)\":{\"notice\":\"Event emitted when a user unstakes an amount.\"}},\"kind\":\"user\",\"methods\":{\"amountPaid(address,uint256)\":{\"notice\":\"Notifies the PaymentClient, that tokens have been paid out accordingly\"},\"assertDataFor(bytes32,bytes32,address)\":{\"notice\":\"Asserts data for a specific dataId on behalf of an asserter address.\"},\"assertionDisputedCallback(bytes32)\":{\"notice\":\"Callback function for the moment the OptimisticOracleV3 assertion is disputed.\"},\"assertionResolvedCallback(bytes32,bool)\":{\"notice\":\"Callback function for the moment the OptimisticOracleV3 assertion resolves.\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens a user staked in this contract\"},\"collectPaymentOrders()\":{\"notice\":\"Collects outstanding payment orders.\"},\"createKPI(bool,uint256[],uint256[])\":{\"notice\":\"Creates a KPI for the Rewarder\"},\"depositFeeFunds(uint256)\":{\"notice\":\"Deposits funds into the contract so it can pay for the oracle bond and fee itself\"},\"dequeueStake()\":{\"notice\":\"Remove a users funds from the staking queue\"},\"earned(address)\":{\"notice\":\"Returns the amount of tokens earned up until now by the current stake of a user\"},\"estimateReward(uint256,uint256)\":{\"notice\":\"Returns a estimation of how much rewards will be earned with the current state of the staking contract\"},\"getAssertion(bytes32)\":{\"notice\":\"For a given assertionId, returns the assserion itself.\"},\"getAssertionConfig(bytes32)\":{\"notice\":\"Returns the Assertion Configuration for a given assertionId\"},\"getData(bytes32)\":{\"notice\":\"For a given assertionId, returns a boolean indicating whether the data is accessible and the data itself.\"},\"getKPI(uint256)\":{\"notice\":\"Returns the KPI with the given number\"},\"getStakingQueue()\":{\"notice\":\"Returns the current queue to stake in the contract\"},\"identifier()\":{\"notice\":\"Returns the module's identifier.\"},\"init(address,(uint256,uint256,string,string),bytes)\":{\"notice\":\"The module's initializer function.\"},\"isTrustedForwarder(address)\":{\"notice\":\"Checks if the provided address is the trusted forwarder\"},\"orchestrator()\":{\"notice\":\"Returns the module's {IOrchestrator_v1} orchestrator instance.\"},\"outstandingTokenAmount(address)\":{\"notice\":\"Returns the total outstanding token payment amount.\"},\"paymentOrders()\":{\"notice\":\"Returns the list of outstanding payment orders.\"},\"postAssertion(bytes32,bytes32,address,uint256,uint256)\":{\"notice\":\"Posts an assertion to the Optimistic Oracle, specifying the KPI to use and the asserted value\"},\"setDefaultAssertionLiveness(uint64)\":{\"notice\":\"Sets the default time assertions will be open for dispute.\"},\"setDefaultCurrency(address)\":{\"notice\":\"Sets the default currency for the bond.\"},\"setOptimisticOracle(address)\":{\"notice\":\"Sets the OptimisticOracleV3 instance where assertions will be published to.\"},\"setRewards(uint256,uint256)\":{\"notice\":\"Sets the rewards that are to be distributed\"},\"stake(uint256)\":{\"notice\":\"Stake a specified amount of tokens to earn rewards\"},\"title()\":{\"notice\":\"Returns the module's title.\"},\"trustedForwarder()\":{\"notice\":\"Returns the trusted forwarder\"},\"unstake(uint256)\":{\"notice\":\"Unstake a specified amount of tokens and collect rewards\"},\"url()\":{\"notice\":\"Returns the module's URL.\"},\"version()\":{\"notice\":\"Returns the module's version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/logicModule/LM_PC_KPIRewarder_v1.sol\":\"LM_PC_KPIRewarder_v1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[\":@aut/=src/modules/authorizer/\",\":@ex/=src/external/\",\":@fm/=src/modules/fundingManager/\",\":@lm/=src/modules/logicModule/\",\":@lm_pc/=src/modules/logicModule/paymentClient/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@pp/=src/modules/paymentProcessor/\",\":@uma/=lib/protocol/packages/core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x14b59e8cd5720c9cd31616450874b462f575bb52b387df2a54dbd26f9a07adf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://082df479035347a88472f330b089b421d798e4bb016f36b46ed80182e188b9ac\",\"dweb:/ipfs/QmZMCdVxCB3Lb5bf98YSF4HZFNShDkyyFg9Mg1s9oeM5ov\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xac3d50e321a48a40b4496970ce725900f13aeb2255b7c1203f5adbe98c4a911a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d7b235b578347dce2d831a76f122e820a7db7e73fd2e47f13bafdcd61c5b066\",\"dweb:/ipfs/QmVAELwambfJa55HfiCoz1kFFh7iYwRYeW5x8si6AFM4iX\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"src/external/fees/interfaces/IFeeManager_v1.sol\":{\"keccak256\":\"0xc3e91814c270ef7fc3e408dbc698ac5048d96c979499490753ccdc3337ebf363\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f611ea47339fa2e58c6fe914888031ceeedfe6da08f4f53d9519e6dabe9b4bc2\",\"dweb:/ipfs/QmX4JsPi8xjbPwcekkTjDpgXnAzpNN6jLutM5b5bdyA1kr\"]},\"src/external/governance/interfaces/IGovernor_v1.sol\":{\"keccak256\":\"0x999518c21a1a69440b0a7644afd9dc15b0ce110737cd9079af0d308538104d62\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6138ac416b7a0bc6c5d9ef3712abe168764bdf7d8c8beda6a411b98e3f025121\",\"dweb:/ipfs/QmZLd4uz5JwC9LNKQLpRkfKvxwRyovr7uqu9HpoTYattSp\"]},\"src/external/interfaces/IERC2771Context.sol\":{\"keccak256\":\"0xfcc88fc7329ac304efe8c41871d596f0c3fe8f70917214b3a087266bf19ee86b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://47159333bca960cfdf0bd4e9d5e114174cb047477b08ad4e40dce6f956c8980a\",\"dweb:/ipfs/QmbjnnNmXauGRjP1UcMxAYxzb5YXpveL7hQGtr1PHMH4jv\"]},\"src/modules/authorizer/IAuthorizer_v1.sol\":{\"keccak256\":\"0xf737c335625a6f46348a7704e43ac062599bc9617e8aee5318eb836c54a17d1c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fcce6d425474c2c2eefc8a5a88f361f7d52d6d2e072fc860baf999bde30ac03d\",\"dweb:/ipfs/QmXTrYJxACyiCQeLLVCZkNLmsd9uz1A14F86hhrkpSB7hE\"]},\"src/modules/base/IModule_v1.sol\":{\"keccak256\":\"0x6b552aed3184961eee51a1e6fde64c6e731400baffde78bbcbb2fee6b8a75e24\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://2df69251ca41b7b9159f083f1e33de73e925b9031206a30d11076c5f6ebe9cf5\",\"dweb:/ipfs/QmWXNZQM42MaBCXEQANyHAS299zK3jfkXwxHjwEDPTJd85\"]},\"src/modules/base/Module_v1.sol\":{\"keccak256\":\"0xd4d7464dc72dd4939afb91cc48211f3fc71990c8565f2ec19272bcc3d1f3f12c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dae5f4629b8ef8f93b964a0ac5e651d4c1620e4d8668ee790ae516b49b5e6be2\",\"dweb:/ipfs/QmNsiiJCbQBuuQYm96tLUYeoJpcnACzHAa5yd64fLmsQyG\"]},\"src/modules/fundingManager/IFundingManager_v1.sol\":{\"keccak256\":\"0xa75256877ff3e13a2469738c7c0b975ff8c704496898375c5b0c37b9eb002ebf\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4040550365cf9ccebd3b5a4ca25593051fb3e347f4af4829264d3acf3c0c5ca1\",\"dweb:/ipfs/QmVwacoM3xPKonJdEb8aYwN7GYxtypsphCvwQGUwYPHdX3\"]},\"src/modules/lib/LibMetadata.sol\":{\"keccak256\":\"0xb8e8b5f2eb8b5841f646a7b34bf0760752fd9a3caa289f8f16ec2fdbae4d5f9f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fd89ca9cf4c67bba665152a1ade17580ffcc71b3189c7a0bfdb1006fd047ceb5\",\"dweb:/ipfs/QmS4rwXh9CcQhGMTZejoHtFARRvswu6qN2xRzN19HDAHB1\"]},\"src/modules/logicModule/LM_PC_KPIRewarder_v1.sol\":{\"keccak256\":\"0x56359842165e275fa2b6f47d956399bf84f55b9ad28223c238b98931eab22d43\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3e3d4ed71c880f5efe871da4e87b9814571c84ddf7c0ad8396df43270d21d898\",\"dweb:/ipfs/QmfCxt7WvXL8mmsHQtWeCHFqXKcH3wABw5G7BfVzBU5ctr\"]},\"src/modules/logicModule/LM_PC_Staking_v1.sol\":{\"keccak256\":\"0xb60efeec0f5299275229d158982c0028fb69435fbe831d04742a7968e5a32f55\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fcfa138aa8e7fb7ede78bbff2c2517f5045543252a99fc511a740d0c0c3383b7\",\"dweb:/ipfs/Qmc97z9dVWZ1L3yJQC3Jjs2d45wHYV9w7bWLWgYzhAz6jB\"]},\"src/modules/logicModule/abstracts/ERC20PaymentClientBase_v1.sol\":{\"keccak256\":\"0x7a17bf6eac695142fe8c4827dcd4ace74007bb59c228f007d84ac86e45cb3d7b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a322afd212968080ce9641fcbbb038ffe8526c05c6da237831c6eb233ab4e01f\",\"dweb:/ipfs/QmcDCk5vW4pegzycuGVYqcxoZnYgYEyB1E5o3pKi3v1uLm\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/IOptimisticOracleIntegrator.sol\":{\"keccak256\":\"0x67685a705d0119fd68d3593a1f47686ad40a0b8f3a2a8f53315b91d4514c49bc\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://85273249cc78eca348ea5225505e41581f57700ca5779892b737bf78bb052289\",\"dweb:/ipfs/QmT5ZEcegDENWnokYHvH1VQjsnF7PTt74HjkMyBYNCYXSs\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/OptimisticOracleIntegrator.sol\":{\"keccak256\":\"0xaf4c847d85c88b72eb1bf9e087b990eb03da23b1517f371e7e7e38b5ba6d8ca5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://35482f68a27d994cc137a2401a7416ac1ee1b831ac05d1f0b2e768a0739d394c\",\"dweb:/ipfs/QmWWyuRoP7eGZ1ym3zC4QKarprcmmPkFp3Jw8eMn1ZHA9L\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/ClaimData.sol\":{\"keccak256\":\"0x5d45b9b7c9dda945ddc67a56492ef452aee03d30fc664cc4c7e59c81cdc083d2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://16508f23ca4081d89eed67293bf20b528d864c641c2b3f4e57dc74a85502ea13\",\"dweb:/ipfs/QmQtonvp14XWH37gyXwE53JPk7AztTauQ3krWXaYszRZnM\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x277837f95a899f2fc9b91dfd1fe2a7eae635c3daba138cde5bcb01cc500a363b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f7830f10355e9f53b36d5654c7a0271c5012022746da01a809fbaf070ccc04a0\",\"dweb:/ipfs/QmS1jSDeCEMu6hu9KdwsLcBVRBVZ9bKE83Rk6vXknLbZVm\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x49e038afcb5cabc877e56b93f8c6f8a4e44355d04a7bb38f606be39b1c054a3c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c8d7037641f91727a845fff12c534b895e08d45809e571816f7abd690094712\",\"dweb:/ipfs/QmVgDuCytTtMg3bdMWHVHf7DYcfbcYh7VeHU5f6AsTksCp\"]},\"src/modules/logicModule/interfaces/IERC20PaymentClientBase_v1.sol\":{\"keccak256\":\"0x99c48a9556b87a730cddec1f341da11ed36fa618b0e3810deaab8045dc266725\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a313b92e9e8100cd3e9c36b29018954570ff413a61e6d5b2984b0a315a0d1d42\",\"dweb:/ipfs/QmP6uGk6TE4Gm3jEs5iscrbZf4xEjk1ka2jcUCxs9wnWPF\"]},\"src/modules/logicModule/interfaces/ILM_PC_KPIRewarder_v1.sol\":{\"keccak256\":\"0x79bebd9ed4f0f4359ef183aac36325d625e6789f44097c3718c7fb43af8467d8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5798ce4d20f07f12844964ac29b36e47ec7895dc802cf844e9d82211d0c619a0\",\"dweb:/ipfs/QmSWKVDTBBH9YhJEDKv9pfB4wtmdpeXQJxmdKj1Fm8Mw99\"]},\"src/modules/logicModule/interfaces/ILM_PC_Staking_v1.sol\":{\"keccak256\":\"0x8b7592d773d0b9d3c1be645f57a9ddf6f0f2158bb1ff05b8abb6b9ec33c9a0b8\",\"urls\":[\"bzz-raw://4a770757f12c77e4d5b03986616b3425dd5cd910676394e71edcec4c3f4bf55f\",\"dweb:/ipfs/QmfRHY2cz7JpDskp5ik3aXr7BrZYHrX4yqoiZAw1RRdwjN\"]},\"src/modules/paymentProcessor/IPaymentProcessor_v1.sol\":{\"keccak256\":\"0x692b9f12bc5169622117e09013bb2d2d8c5392ce5e85f4df2dee11446ff385f6\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://edeb55ef0b7490070646b09844762db8afea350b0127ca3c40545a26a7d12587\",\"dweb:/ipfs/QmUXuJxTkYVFdJhNpScr1NmteHFcC32tXtBP5ngz1hRDkc\"]},\"src/orchestrator/interfaces/IModuleManagerBase_v1.sol\":{\"keccak256\":\"0x5f14c8320221c0bd7aaa009d5f4b7c248f0019940fd2bcd4faaca3b6077c163b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9e8f48b8d3d35e7ccaac22e2863c99d9a201ae228b585b6747d03e13565f2f9b\",\"dweb:/ipfs/QmSo3EMXPrCvhvMzHw78DsN5A6cCDnwPjo1WiF514toen5\"]},\"src/orchestrator/interfaces/IOrchestrator_v1.sol\":{\"keccak256\":\"0x203bf9060f4e944c4059a082a698a886ef744817ff147c0bf8167fa9d7810f99\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8232c2bdd42706e7f5680a9b7b6868f36f29fa8aa36bcce8994658e93a9ea49b\",\"dweb:/ipfs/QmfKQggqafe2jRNFA5Z8vz51nvMsxwLceABGoX2dnEs16J\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.23+commit.f704f362"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressEmptyCode"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressInsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FailedInnerCall"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidInitialization"
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "funcSig",
                            "type": "string"
                        }
                    ],
                    "type": "error",
                    "name": "Module_OrchestratorCallbackFailed"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "caller",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "Module__CallerNotAuthorized"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__ERC20PaymentClientBase__ArrayLengthMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__ERC20PaymentClientBase__CallerNotAuthorized"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "Module__ERC20PaymentClientBase__InsufficientFunds"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__ERC20PaymentClientBase__InvalidAmount"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__ERC20PaymentClientBase__InvalidRecipient"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__ERC20PaymentClientBase__InvalidToken"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__ERC20PaymentClientBase__Invalidend"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__ERC20PaymentClientBase__TokenTransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__InvalidMetadata"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__InvalidOrchestratorAddress"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPINumber"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_KPIRewarder_v1__InvalidTargetValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_KPIRewarder_v1__StakingQueueIsFull"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_Staking_v1__InvalidDuration"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_Staking_v1__InvalidRewardRate"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__LM_PC_Staking_v1__InvalidStakingToken"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__OnlyCallableByOrchestrator"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__OptimisticOracleIntegrator__CallerNotOO"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__OptimisticOracleIntegrator__InvalidDefaultCurrency"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__OptimisticOracleIntegrator__InvalidDefaultLiveness"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Module__OptimisticOracleIntegrator__InvalidOOInstance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotInitializing"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ReentrancyGuardReentrantCall"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "SafeERC20FailedOperation"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "dataId",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "data",
                            "type": "bytes32",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "asserter",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "DataAsserted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bool",
                            "name": "assertedTruthfully",
                            "type": "bool",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "dataId",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "data",
                            "type": "bytes32",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "asserter",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "DataAssertionResolved",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "FeeFundsDeposited",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "version",
                            "type": "uint64",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Initialized",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "KPI_Id",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "numOfTranches",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "totalKPIRewards",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "bool",
                            "name": "continuous",
                            "type": "bool",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "trancheValues",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "trancheRewards",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "KPICreated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "parentOrchestrator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "string",
                            "name": "moduleTitle",
                            "type": "string",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "majorVersion",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "minorVersion",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ModuleInitialized",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "PaymentOrderAdded",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "rewardAmount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "duration",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newRewardRate",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newRewardsEnd",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "RewardSet",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "RewardsDistributed",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newDuration",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "RewardsDurationUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "StakeDequeued",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "StakeEnqueued",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Staked",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Unstaked",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ASSERTER_ROLE",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "KPICounter",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAX_QUEUE_LENGTH",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "amountPaid"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "dataId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "data",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "asserter",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "assertDataFor",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "assertionConfig",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "creationTime",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "assertedValue",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "KpiToUse",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bool",
                            "name": "distributed",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "assertionData",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "dataId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "data",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "asserter",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "resolved",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "assertionDisputedCallback"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "assertionLiveness",
                    "outputs": [
                        {
                            "internalType": "uint64",
                            "name": "",
                            "type": "uint64"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bool",
                            "name": "assertedTruthfully",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "assertionResolvedCallback"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "claimRewards"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "collectPaymentOrders",
                    "outputs": [
                        {
                            "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "paymentToken",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "start",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "cliff",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "end",
                                    "type": "uint256"
                                }
                            ]
                        },
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bool",
                            "name": "_continuous",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "_trancheValues",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "_trancheRewards",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createKPI",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "defaultCurrency",
                    "outputs": [
                        {
                            "internalType": "contract IERC20",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "defaultIdentifier",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "depositFeeFunds"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dequeueStake"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "earned",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "duration",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "estimateReward",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAssertion",
                    "outputs": [
                        {
                            "internalType": "struct IOptimisticOracleIntegrator.DataAssertion",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "dataId",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "data",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "asserter",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "resolved",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAssertionConfig",
                    "outputs": [
                        {
                            "internalType": "struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "creationTime",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "assertedValue",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "KpiToUse",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "distributed",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getData",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "KPInum",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getKPI",
                    "outputs": [
                        {
                            "internalType": "struct ILM_PC_KPIRewarder_v1.KPI",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "numOfTranches",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "totalRewards",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "continuous",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "trancheValues",
                                    "type": "uint256[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "trancheRewards",
                                    "type": "uint256[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStakingQueue",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "grantModuleRole"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address[]",
                            "name": "targets",
                            "type": "address[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "grantModuleRoleBatched"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "identifier",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IOrchestrator_v1",
                            "name": "orchestrator_",
                            "type": "address"
                        },
                        {
                            "internalType": "struct IModule_v1.Metadata",
                            "name": "metadata",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "majorVersion",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "minorVersion",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "string",
                                    "name": "url",
                                    "type": "string"
                                },
                                {
                                    "internalType": "string",
                                    "name": "title",
                                    "type": "string"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "configData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "init"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "forwarder",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isTrustedForwarder",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "oo",
                    "outputs": [
                        {
                            "internalType": "contract OptimisticOracleV3Interface",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "orchestrator",
                    "outputs": [
                        {
                            "internalType": "contract IOrchestrator_v1",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_token",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "outstandingTokenAmount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paymentOrders",
                    "outputs": [
                        {
                            "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "paymentToken",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "start",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "cliff",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "end",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "dataId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "data",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "asserter",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "assertedValue",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "targetKPI",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "postAssertion",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "assertionId",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "registryOfKPIs",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "numOfTranches",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "totalRewards",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bool",
                            "name": "continuous",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "revokeModuleRole"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address[]",
                            "name": "targets",
                            "type": "address[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "revokeModuleRoleBatched"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "rewardRate",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "rewardsEnd",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "_newLiveness",
                            "type": "uint64"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setDefaultAssertionLiveness"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_newCurrency",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setDefaultCurrency"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_newOO",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setOptimisticOracle"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "duration",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setRewards"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "stake"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakingQueue",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakingQueueAmounts",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakingToken",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "title",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalQueuedFunds",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "trustedForwarder",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unstake"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "url",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "amountPaid(address,uint256)": {
                        "details": "Payment Client will reduce the total amount of tokens it will stock up by the given amount This has to be called by a paymentProcessor",
                        "params": {
                            "amount": "amount of tokens that have been paid out"
                        }
                    },
                    "assertDataFor(bytes32,bytes32,address)": {
                        "details": "Data can be asserted many times with the same combination of arguments, resulting in unique assertionIds. This is because the block.timestamp is included in the claim. The consumer contract must store the returned assertionId identifiers to able to get the information using getData.",
                        "params": {
                            "asserter": "The address doing the asserter. If zero defaults to _msgSender().",
                            "data": "The data to assert.",
                            "dataId": "The id of the data to assert."
                        },
                        "returns": {
                            "assertionId": "The id of the generated Assertion."
                        }
                    },
                    "assertionDisputedCallback(bytes32)": {
                        "details": "This OptimisticOracleV3 callback function needs to be defined so the OOv3 doesn't revert when it tries to call it.",
                        "params": {
                            "assertionId": "The id of the Assertion generating the callback."
                        }
                    },
                    "assertionResolvedCallback(bytes32,bool)": {
                        "params": {
                            "assertionId": "The id of the Assertion generating the callback."
                        }
                    },
                    "balanceOf(address)": {
                        "params": {
                            "user": "The address of a user that staked"
                        }
                    },
                    "collectPaymentOrders()": {
                        "details": "Marks the orders as completed for the client.      The responsibility to fulfill the orders are now in the caller's      hand!",
                        "returns": {
                            "_0": "list of payment orders",
                            "_1": "total amount of token to pay"
                        }
                    },
                    "createKPI(bool,uint256[],uint256[])": {
                        "params": {
                            "_continuous": "Should the tranche rewards be distributed continuously or in steps",
                            "_trancheRewards": "The rewards to be distributed at completion of each tranche",
                            "_trancheValues": "The value at which the tranches end"
                        }
                    },
                    "depositFeeFunds(uint256)": {
                        "params": {
                            "amount": "The amount to deposit"
                        }
                    },
                    "earned(address)": {
                        "params": {
                            "user": "The address of a user that staked"
                        }
                    },
                    "estimateReward(uint256,uint256)": {
                        "details": "this calculation uses the current reward rate and the current totalSupply to calculate the rewardsthe estimated result could be 0 if the estimated rewards are not high enough",
                        "params": {
                            "amount": ": how much token are staked",
                            "duration": ": how long the tokens will be staked"
                        }
                    },
                    "getAssertion(bytes32)": {
                        "params": {
                            "assertionId": "The id of the Assertion to return."
                        },
                        "returns": {
                            "_0": "DataAssertion The Assertion."
                        }
                    },
                    "getAssertionConfig(bytes32)": {
                        "params": {
                            "assertionId": "The id of the Assertion to return"
                        }
                    },
                    "getData(bytes32)": {
                        "params": {
                            "assertionId": "The id of the Assertion to return."
                        },
                        "returns": {
                            "_0": "bool Wether the assertion is resolved.",
                            "_1": "bytes32 The Assertion Data."
                        }
                    },
                    "getKPI(uint256)": {
                        "params": {
                            "KPInum": "The number of the KPI to return"
                        }
                    },
                    "identifier()": {
                        "details": "The identifier is defined as the keccak256 hash of the module's      abi packed encoded major version, url and title.",
                        "returns": {
                            "_0": "The module's identifier."
                        }
                    },
                    "init(address,(uint256,uint256,string,string),bytes)": {
                        "details": "CAN be overriden by downstream contract.MUST call `__Module_init()`.",
                        "params": {
                            "configData": "Variable config data for specific module                   implementations.",
                            "metadata": "The module's metadata.",
                            "orchestrator": "The module's orchestrator instance."
                        }
                    },
                    "isTrustedForwarder(address)": {
                        "details": "We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator",
                        "params": {
                            "forwarder": "The contract address to be verified."
                        },
                        "returns": {
                            "_0": "bool Is the given address the trusted forwarder"
                        }
                    },
                    "orchestrator()": {
                        "returns": {
                            "_0": "The module's orchestrator."
                        }
                    },
                    "postAssertion(bytes32,bytes32,address,uint256,uint256)": {
                        "details": "about the asserter address: any address can be set as asserter, it will be expected to pay for the bond on posting. The bond tokens can also be deposited in the Module and used to pay for itself, but ONLY if the bond token is different from the one being used for staking. If the asserter is set to 0, whomever calls postAssertion will be paying the bond.",
                        "params": {
                            "assertedValue": "The target value that will be asserted",
                            "asserter": "The address of the asserter",
                            "data": "The data to be posted",
                            "dataId": "The dataId to be posted",
                            "targetKPI": "The KPI to be used for distribution once the assertion confirms"
                        },
                        "returns": {
                            "assertionId": "The assertionId received for the posted assertion"
                        }
                    },
                    "setDefaultAssertionLiveness(uint64)": {
                        "params": {
                            "_newLiveness": "The new liveness in seconds."
                        }
                    },
                    "setDefaultCurrency(address)": {
                        "params": {
                            "_newCurrency": "The address of the new default currency."
                        }
                    },
                    "setOptimisticOracle(address)": {
                        "params": {
                            "_newOO": "The address of the new OptimisticOracleV3 instance."
                        }
                    },
                    "setRewards(uint256,uint256)": {
                        "details": "Equally distributes the reward amount over the given time period",
                        "params": {
                            "amount": ": how much token should be distributed",
                            "duration": ": how much time it will take to distribute the token"
                        }
                    },
                    "stake(uint256)": {
                        "details": "should tokens already be staked, then the sending address will collect the rewards up until this point",
                        "params": {
                            "amount": ": how much token should be staked"
                        }
                    },
                    "title()": {
                        "returns": {
                            "_0": "The module's title."
                        }
                    },
                    "trustedForwarder()": {
                        "details": "We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator",
                        "returns": {
                            "_0": "address The trusted forwarder"
                        }
                    },
                    "unstake(uint256)": {
                        "details": "this function will revert with a Over/Underflow error in case amount is higher than balance",
                        "params": {
                            "amount": ": how much token should be unstaked"
                        }
                    },
                    "url()": {
                        "returns": {
                            "_0": "The module's URL."
                        }
                    },
                    "version()": {
                        "returns": {
                            "_0": "The module's major version.",
                            "_1": "The module's minor version."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "amountPaid(address,uint256)": {
                        "notice": "Notifies the PaymentClient, that tokens have been paid out accordingly"
                    },
                    "assertDataFor(bytes32,bytes32,address)": {
                        "notice": "Asserts data for a specific dataId on behalf of an asserter address."
                    },
                    "assertionDisputedCallback(bytes32)": {
                        "notice": "Callback function for the moment the OptimisticOracleV3 assertion is disputed."
                    },
                    "assertionResolvedCallback(bytes32,bool)": {
                        "notice": "Callback function for the moment the OptimisticOracleV3 assertion resolves."
                    },
                    "balanceOf(address)": {
                        "notice": "Returns the amount of tokens a user staked in this contract"
                    },
                    "collectPaymentOrders()": {
                        "notice": "Collects outstanding payment orders."
                    },
                    "createKPI(bool,uint256[],uint256[])": {
                        "notice": "Creates a KPI for the Rewarder"
                    },
                    "depositFeeFunds(uint256)": {
                        "notice": "Deposits funds into the contract so it can pay for the oracle bond and fee itself"
                    },
                    "dequeueStake()": {
                        "notice": "Remove a users funds from the staking queue"
                    },
                    "earned(address)": {
                        "notice": "Returns the amount of tokens earned up until now by the current stake of a user"
                    },
                    "estimateReward(uint256,uint256)": {
                        "notice": "Returns a estimation of how much rewards will be earned with the current state of the staking contract"
                    },
                    "getAssertion(bytes32)": {
                        "notice": "For a given assertionId, returns the assserion itself."
                    },
                    "getAssertionConfig(bytes32)": {
                        "notice": "Returns the Assertion Configuration for a given assertionId"
                    },
                    "getData(bytes32)": {
                        "notice": "For a given assertionId, returns a boolean indicating whether the data is accessible and the data itself."
                    },
                    "getKPI(uint256)": {
                        "notice": "Returns the KPI with the given number"
                    },
                    "getStakingQueue()": {
                        "notice": "Returns the current queue to stake in the contract"
                    },
                    "identifier()": {
                        "notice": "Returns the module's identifier."
                    },
                    "init(address,(uint256,uint256,string,string),bytes)": {
                        "notice": "The module's initializer function."
                    },
                    "isTrustedForwarder(address)": {
                        "notice": "Checks if the provided address is the trusted forwarder"
                    },
                    "orchestrator()": {
                        "notice": "Returns the module's {IOrchestrator_v1} orchestrator instance."
                    },
                    "outstandingTokenAmount(address)": {
                        "notice": "Returns the total outstanding token payment amount."
                    },
                    "paymentOrders()": {
                        "notice": "Returns the list of outstanding payment orders."
                    },
                    "postAssertion(bytes32,bytes32,address,uint256,uint256)": {
                        "notice": "Posts an assertion to the Optimistic Oracle, specifying the KPI to use and the asserted value"
                    },
                    "setDefaultAssertionLiveness(uint64)": {
                        "notice": "Sets the default time assertions will be open for dispute."
                    },
                    "setDefaultCurrency(address)": {
                        "notice": "Sets the default currency for the bond."
                    },
                    "setOptimisticOracle(address)": {
                        "notice": "Sets the OptimisticOracleV3 instance where assertions will be published to."
                    },
                    "setRewards(uint256,uint256)": {
                        "notice": "Sets the rewards that are to be distributed"
                    },
                    "stake(uint256)": {
                        "notice": "Stake a specified amount of tokens to earn rewards"
                    },
                    "title()": {
                        "notice": "Returns the module's title."
                    },
                    "trustedForwarder()": {
                        "notice": "Returns the trusted forwarder"
                    },
                    "unstake(uint256)": {
                        "notice": "Unstake a specified amount of tokens and collect rewards"
                    },
                    "url()": {
                        "notice": "Returns the module's URL."
                    },
                    "version()": {
                        "notice": "Returns the module's version."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@aut/=src/modules/authorizer/",
                "@ex/=src/external/",
                "@fm/=src/modules/fundingManager/",
                "@lm/=src/modules/logicModule/",
                "@lm_pc/=src/modules/logicModule/paymentClient/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@oz/=lib/openzeppelin-contracts/contracts/",
                "@pp/=src/modules/paymentProcessor/",
                "@uma/=lib/protocol/packages/core/contracts/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "protocol/=lib/protocol/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 2000
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/modules/logicModule/LM_PC_KPIRewarder_v1.sol": "LM_PC_KPIRewarder_v1"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol": {
                "keccak256": "0x14b59e8cd5720c9cd31616450874b462f575bb52b387df2a54dbd26f9a07adf8",
                "urls": [
                    "bzz-raw://082df479035347a88472f330b089b421d798e4bb016f36b46ed80182e188b9ac",
                    "dweb:/ipfs/QmZMCdVxCB3Lb5bf98YSF4HZFNShDkyyFg9Mg1s9oeM5ov"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
                "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
                "urls": [
                    "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
                    "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
                "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
                "urls": [
                    "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
                    "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
                "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
                "urls": [
                    "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
                    "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol": {
                "keccak256": "0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306",
                "urls": [
                    "bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3",
                    "dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
                "urls": [
                    "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
                    "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
                "urls": [
                    "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
                    "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
                "urls": [
                    "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
                    "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
                "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
                "urls": [
                    "bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
                    "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
                "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
                "urls": [
                    "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
                    "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
                "keccak256": "0xac3d50e321a48a40b4496970ce725900f13aeb2255b7c1203f5adbe98c4a911a",
                "urls": [
                    "bzz-raw://1d7b235b578347dce2d831a76f122e820a7db7e73fd2e47f13bafdcd61c5b066",
                    "dweb:/ipfs/QmVAELwambfJa55HfiCoz1kFFh7iYwRYeW5x8si6AFM4iX"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
                "urls": [
                    "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
                    "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
                ],
                "license": "MIT"
            },
            "lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol": {
                "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
                "urls": [
                    "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
                    "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
                ],
                "license": "AGPL-3.0-only"
            },
            "src/external/fees/interfaces/IFeeManager_v1.sol": {
                "keccak256": "0xc3e91814c270ef7fc3e408dbc698ac5048d96c979499490753ccdc3337ebf363",
                "urls": [
                    "bzz-raw://f611ea47339fa2e58c6fe914888031ceeedfe6da08f4f53d9519e6dabe9b4bc2",
                    "dweb:/ipfs/QmX4JsPi8xjbPwcekkTjDpgXnAzpNN6jLutM5b5bdyA1kr"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/external/governance/interfaces/IGovernor_v1.sol": {
                "keccak256": "0x999518c21a1a69440b0a7644afd9dc15b0ce110737cd9079af0d308538104d62",
                "urls": [
                    "bzz-raw://6138ac416b7a0bc6c5d9ef3712abe168764bdf7d8c8beda6a411b98e3f025121",
                    "dweb:/ipfs/QmZLd4uz5JwC9LNKQLpRkfKvxwRyovr7uqu9HpoTYattSp"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/external/interfaces/IERC2771Context.sol": {
                "keccak256": "0xfcc88fc7329ac304efe8c41871d596f0c3fe8f70917214b3a087266bf19ee86b",
                "urls": [
                    "bzz-raw://47159333bca960cfdf0bd4e9d5e114174cb047477b08ad4e40dce6f956c8980a",
                    "dweb:/ipfs/QmbjnnNmXauGRjP1UcMxAYxzb5YXpveL7hQGtr1PHMH4jv"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/authorizer/IAuthorizer_v1.sol": {
                "keccak256": "0xf737c335625a6f46348a7704e43ac062599bc9617e8aee5318eb836c54a17d1c",
                "urls": [
                    "bzz-raw://fcce6d425474c2c2eefc8a5a88f361f7d52d6d2e072fc860baf999bde30ac03d",
                    "dweb:/ipfs/QmXTrYJxACyiCQeLLVCZkNLmsd9uz1A14F86hhrkpSB7hE"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/base/IModule_v1.sol": {
                "keccak256": "0x6b552aed3184961eee51a1e6fde64c6e731400baffde78bbcbb2fee6b8a75e24",
                "urls": [
                    "bzz-raw://2df69251ca41b7b9159f083f1e33de73e925b9031206a30d11076c5f6ebe9cf5",
                    "dweb:/ipfs/QmWXNZQM42MaBCXEQANyHAS299zK3jfkXwxHjwEDPTJd85"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/base/Module_v1.sol": {
                "keccak256": "0xd4d7464dc72dd4939afb91cc48211f3fc71990c8565f2ec19272bcc3d1f3f12c",
                "urls": [
                    "bzz-raw://dae5f4629b8ef8f93b964a0ac5e651d4c1620e4d8668ee790ae516b49b5e6be2",
                    "dweb:/ipfs/QmNsiiJCbQBuuQYm96tLUYeoJpcnACzHAa5yd64fLmsQyG"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/fundingManager/IFundingManager_v1.sol": {
                "keccak256": "0xa75256877ff3e13a2469738c7c0b975ff8c704496898375c5b0c37b9eb002ebf",
                "urls": [
                    "bzz-raw://4040550365cf9ccebd3b5a4ca25593051fb3e347f4af4829264d3acf3c0c5ca1",
                    "dweb:/ipfs/QmVwacoM3xPKonJdEb8aYwN7GYxtypsphCvwQGUwYPHdX3"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/lib/LibMetadata.sol": {
                "keccak256": "0xb8e8b5f2eb8b5841f646a7b34bf0760752fd9a3caa289f8f16ec2fdbae4d5f9f",
                "urls": [
                    "bzz-raw://fd89ca9cf4c67bba665152a1ade17580ffcc71b3189c7a0bfdb1006fd047ceb5",
                    "dweb:/ipfs/QmS4rwXh9CcQhGMTZejoHtFARRvswu6qN2xRzN19HDAHB1"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/logicModule/LM_PC_KPIRewarder_v1.sol": {
                "keccak256": "0x56359842165e275fa2b6f47d956399bf84f55b9ad28223c238b98931eab22d43",
                "urls": [
                    "bzz-raw://3e3d4ed71c880f5efe871da4e87b9814571c84ddf7c0ad8396df43270d21d898",
                    "dweb:/ipfs/QmfCxt7WvXL8mmsHQtWeCHFqXKcH3wABw5G7BfVzBU5ctr"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/logicModule/LM_PC_Staking_v1.sol": {
                "keccak256": "0xb60efeec0f5299275229d158982c0028fb69435fbe831d04742a7968e5a32f55",
                "urls": [
                    "bzz-raw://fcfa138aa8e7fb7ede78bbff2c2517f5045543252a99fc511a740d0c0c3383b7",
                    "dweb:/ipfs/Qmc97z9dVWZ1L3yJQC3Jjs2d45wHYV9w7bWLWgYzhAz6jB"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/logicModule/abstracts/ERC20PaymentClientBase_v1.sol": {
                "keccak256": "0x7a17bf6eac695142fe8c4827dcd4ace74007bb59c228f007d84ac86e45cb3d7b",
                "urls": [
                    "bzz-raw://a322afd212968080ce9641fcbbb038ffe8526c05c6da237831c6eb233ab4e01f",
                    "dweb:/ipfs/QmcDCk5vW4pegzycuGVYqcxoZnYgYEyB1E5o3pKi3v1uLm"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/IOptimisticOracleIntegrator.sol": {
                "keccak256": "0x67685a705d0119fd68d3593a1f47686ad40a0b8f3a2a8f53315b91d4514c49bc",
                "urls": [
                    "bzz-raw://85273249cc78eca348ea5225505e41581f57700ca5779892b737bf78bb052289",
                    "dweb:/ipfs/QmT5ZEcegDENWnokYHvH1VQjsnF7PTt74HjkMyBYNCYXSs"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/OptimisticOracleIntegrator.sol": {
                "keccak256": "0xaf4c847d85c88b72eb1bf9e087b990eb03da23b1517f371e7e7e38b5ba6d8ca5",
                "urls": [
                    "bzz-raw://35482f68a27d994cc137a2401a7416ac1ee1b831ac05d1f0b2e768a0739d394c",
                    "dweb:/ipfs/QmWWyuRoP7eGZ1ym3zC4QKarprcmmPkFp3Jw8eMn1ZHA9L"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/ClaimData.sol": {
                "keccak256": "0x5d45b9b7c9dda945ddc67a56492ef452aee03d30fc664cc4c7e59c81cdc083d2",
                "urls": [
                    "bzz-raw://16508f23ca4081d89eed67293bf20b528d864c641c2b3f4e57dc74a85502ea13",
                    "dweb:/ipfs/QmQtonvp14XWH37gyXwE53JPk7AztTauQ3krWXaYszRZnM"
                ],
                "license": "AGPL-3.0-only"
            },
            "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
                "keccak256": "0x277837f95a899f2fc9b91dfd1fe2a7eae635c3daba138cde5bcb01cc500a363b",
                "urls": [
                    "bzz-raw://f7830f10355e9f53b36d5654c7a0271c5012022746da01a809fbaf070ccc04a0",
                    "dweb:/ipfs/QmS1jSDeCEMu6hu9KdwsLcBVRBVZ9bKE83Rk6vXknLbZVm"
                ],
                "license": "AGPL-3.0-only"
            },
            "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
                "keccak256": "0x49e038afcb5cabc877e56b93f8c6f8a4e44355d04a7bb38f606be39b1c054a3c",
                "urls": [
                    "bzz-raw://0c8d7037641f91727a845fff12c534b895e08d45809e571816f7abd690094712",
                    "dweb:/ipfs/QmVgDuCytTtMg3bdMWHVHf7DYcfbcYh7VeHU5f6AsTksCp"
                ],
                "license": "AGPL-3.0-only"
            },
            "src/modules/logicModule/interfaces/IERC20PaymentClientBase_v1.sol": {
                "keccak256": "0x99c48a9556b87a730cddec1f341da11ed36fa618b0e3810deaab8045dc266725",
                "urls": [
                    "bzz-raw://a313b92e9e8100cd3e9c36b29018954570ff413a61e6d5b2984b0a315a0d1d42",
                    "dweb:/ipfs/QmP6uGk6TE4Gm3jEs5iscrbZf4xEjk1ka2jcUCxs9wnWPF"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/logicModule/interfaces/ILM_PC_KPIRewarder_v1.sol": {
                "keccak256": "0x79bebd9ed4f0f4359ef183aac36325d625e6789f44097c3718c7fb43af8467d8",
                "urls": [
                    "bzz-raw://5798ce4d20f07f12844964ac29b36e47ec7895dc802cf844e9d82211d0c619a0",
                    "dweb:/ipfs/QmSWKVDTBBH9YhJEDKv9pfB4wtmdpeXQJxmdKj1Fm8Mw99"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/modules/logicModule/interfaces/ILM_PC_Staking_v1.sol": {
                "keccak256": "0x8b7592d773d0b9d3c1be645f57a9ddf6f0f2158bb1ff05b8abb6b9ec33c9a0b8",
                "urls": [
                    "bzz-raw://4a770757f12c77e4d5b03986616b3425dd5cd910676394e71edcec4c3f4bf55f",
                    "dweb:/ipfs/QmfRHY2cz7JpDskp5ik3aXr7BrZYHrX4yqoiZAw1RRdwjN"
                ],
                "license": null
            },
            "src/modules/paymentProcessor/IPaymentProcessor_v1.sol": {
                "keccak256": "0x692b9f12bc5169622117e09013bb2d2d8c5392ce5e85f4df2dee11446ff385f6",
                "urls": [
                    "bzz-raw://edeb55ef0b7490070646b09844762db8afea350b0127ca3c40545a26a7d12587",
                    "dweb:/ipfs/QmUXuJxTkYVFdJhNpScr1NmteHFcC32tXtBP5ngz1hRDkc"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/orchestrator/interfaces/IModuleManagerBase_v1.sol": {
                "keccak256": "0x5f14c8320221c0bd7aaa009d5f4b7c248f0019940fd2bcd4faaca3b6077c163b",
                "urls": [
                    "bzz-raw://9e8f48b8d3d35e7ccaac22e2863c99d9a201ae228b585b6747d03e13565f2f9b",
                    "dweb:/ipfs/QmSo3EMXPrCvhvMzHw78DsN5A6cCDnwPjo1WiF514toen5"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/orchestrator/interfaces/IOrchestrator_v1.sol": {
                "keccak256": "0x203bf9060f4e944c4059a082a698a886ef744817ff147c0bf8167fa9d7810f99",
                "urls": [
                    "bzz-raw://8232c2bdd42706e7f5680a9b7b6868f36f29fa8aa36bcce8994658e93a9ea49b",
                    "dweb:/ipfs/QmfKQggqafe2jRNFA5Z8vz51nvMsxwLceABGoX2dnEs16J"
                ],
                "license": "LGPL-3.0-only"
            }
        },
        "version": 1
    },
    "id": 146
}