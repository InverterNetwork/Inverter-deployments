{
  "abi": [
    {
      "type": "function",
      "name": "ASSERTER_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "KPICounter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_QUEUE_LENGTH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "amountPaid",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertDataFor",
      "inputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertionConfig",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "creationTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "assertedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "KpiToUse",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "distributed",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionData",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "resolved",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionDisputedCallback",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertionLiveness",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionPending",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionResolvedCallback",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "assertedTruthfully",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimRewards",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "collectPaymentOrders",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
          "components": [
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymentToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "start",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cliff",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "end",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createKPI",
      "inputs": [
        {
          "name": "_continuous",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "_trancheValues",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "_trancheRewards",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "defaultBond",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultCurrency",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultIdentifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "depositFeeFunds",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "dequeueStake",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "earned",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "estimateReward",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "duration",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAssertion",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IOptimisticOracleIntegrator.DataAssertion",
          "components": [
            {
              "name": "dataId",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "data",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "asserter",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "resolved",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAssertionConfig",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration",
          "components": [
            {
              "name": "creationTime",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "assertedValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "KpiToUse",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "distributed",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getData",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKPI",
      "inputs": [
        {
          "name": "KPInum",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ILM_PC_KPIRewarder_v1.KPI",
          "components": [
            {
              "name": "numOfTranches",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "totalRewards",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "continuous",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "trancheValues",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "trancheRewards",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingQueue",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantModuleRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grantModuleRoleBatched",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "identifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "init",
      "inputs": [
        {
          "name": "orchestrator_",
          "type": "address",
          "internalType": "contract IOrchestrator_v1"
        },
        {
          "name": "metadata",
          "type": "tuple",
          "internalType": "struct IModule_v1.Metadata",
          "components": [
            {
              "name": "majorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "url",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "title",
              "type": "string",
              "internalType": "string"
            }
          ]
        },
        {
          "name": "configData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oo",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract OptimisticOracleV3Interface"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "orchestrator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IOrchestrator_v1"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "outstandingTokenAmount",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paymentOrders",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
          "components": [
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymentToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "start",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cliff",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "end",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "postAssertion",
      "inputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "assertedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "asserter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "targetKPI",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registryOfKPIs",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "numOfTranches",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalRewards",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "continuous",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "revokeModuleRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeModuleRoleBatched",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rewardRate",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rewardsEnd",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setDefaultAssertionLiveness",
      "inputs": [
        {
          "name": "_newLiveness",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDefaultCurrencyAndBond",
      "inputs": [
        {
          "name": "_newCurrency",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_newBond",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinimumStake",
      "inputs": [
        {
          "name": "_minimumStake",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOptimisticOracle",
      "inputs": [
        {
          "name": "_newOO",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRewards",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "duration",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "stake",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "stakingQueue",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "stakingQueueAmounts",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "stakingToken",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "title",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalQueuedFunds",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unstake",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "url",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "DataAsserted",
      "inputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DataAssertionResolved",
      "inputs": [
        {
          "name": "assertedTruthfully",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "dataId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FeeFundsDeposited",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KPICreated",
      "inputs": [
        {
          "name": "KPI_Id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "numOfTranches",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "totalKPIRewards",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "continuous",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "trancheValues",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "trancheRewards",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModuleInitialized",
      "inputs": [
        {
          "name": "parentOrchestrator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "moduleTitle",
          "type": "string",
          "indexed": true,
          "internalType": "string"
        },
        {
          "name": "majorVersion",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "minorVersion",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PaymentOrderAdded",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardRoundConfigured",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "creationTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "assertedValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "KpiToUse",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardSet",
      "inputs": [
        {
          "name": "rewardAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "duration",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newRewardRate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newRewardsEnd",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsDistributed",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakeDequeued",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakeEnqueued",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Staked",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unstaked",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "FailedInnerCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module_OrchestratorCallbackFailed",
      "inputs": [
        {
          "name": "funcSig",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module__CallerNotAuthorized",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "caller",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__ArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__CallerNotAuthorized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InsufficientFunds",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidRecipient",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidToken",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__Invalidend",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__TokenTransferFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__InvalidMetadata",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__InvalidOrchestratorAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPINumber",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidStakeAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__StakingQueueIsFull",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__UnresolvedAssertionExists",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v1__InvalidDuration",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v1__InvalidRewardRate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v1__InvalidStakingToken",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OnlyCallableByOrchestrator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__CallerNotOO",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__CurrencyBondTooLow",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidDefaultCurrency",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidDefaultLiveness",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidOOInstance",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1338:13536:145:-:0;;;;;;;;;;;;-1:-1:-1;4414:1:116;1621:37:22;;4428:22:116::1;:20;:22::i;:::-;1713:1:56::0;1917:7;:21;1338:13536:145;;7711:422:23;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:23;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:23;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:23;-1:-1:-1;;;;;8035:33:23;;;;;8087:29;;158:50:273;;;8087:29:23;;146:2:273;131:18;8087:29:23;;;;;;;7981:146;7760:373;7711:422::o;14:200:273:-;1338:13536:145;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1338:13536:145:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4170:121:148;;;;;;:::i;:::-;;:::i;:::-;;;571:25:273;;;559:2;544:18;4170:121:148;;;;;;;;1490:294:145;;;;;;:::i;:::-;;:::i;:::-;;;1063:14:273;;1056:22;1038:41;;1026:2;1011:18;1490:294:145;898:187:273;5960:1998:145;;;;;;:::i;:::-;;:::i;3290:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3255:29;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2078:55:273;;;2060:74;;2048:2;2033:18;3255:29:145;1914:226:273;2227:23:148;;;;;;1931:29:151;;;;;-1:-1:-1;;;;;1931:29:151;;;9926:141:145;;;;;;:::i;:::-;;:::i;:::-;;7225:246:116;;;;;;:::i;:::-;;:::i;6772:244::-;;;;;;:::i;:::-;;:::i;11120:738:145:-;;;:::i;2520:54:151:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2520:54:151;;;-1:-1:-1;;;2520:54:151;;;;;;;;;;;;;;;3684:25:273;;;3740:2;3725:18;;3718:34;;;;-1:-1:-1;;;;;3788:55:273;3783:2;3768:18;;3761:83;3887:14;3880:22;3875:2;3860:18;;3853:50;3671:3;3656:19;;3459:450;5716:695:148;;;;;;:::i;:::-;;:::i;4083:177:149:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4221:32:149;4194:4;4221:32;;;:24;:32;;;;;;;4083:177;6455:171:148;;;:::i;2917:42:145:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4110:25:273;;;4166:2;4151:18;;4144:34;;;;4221:14;4214:22;4194:18;;;4187:50;4098:2;4083:18;2917:42:145;3914:329:273;4057:712:145;;;;;;:::i;:::-;;:::i;6215:100:116:-;;;:::i;:::-;;;;;;;:::i;3763:206:151:-;;;;;;:::i;:::-;;:::i;:::-;;;;7805:14:273;;7798:22;7780:41;;7852:2;7837:18;;7830:34;;;;7753:18;3763:206:151;7612:258:273;5905:140:116;5975:17;:30;6007;;5905:140;;;8049:25:273;;;8105:2;8090:18;;8083:34;;;;8022:18;5905:140:116;7875:248:273;6082:96:116;;;:::i;11478:237::-;;;;;;:::i;:::-;;:::i;4347:188:151:-;;;;;;:::i;:::-;;:::i;3060:28:145:-;;;;;;;;;5308:102;;;:::i;:::-;;;;;;;:::i;8179:291::-;;;;;;:::i;:::-;;:::i;6670:145:148:-;;;;;;:::i;:::-;;:::i;6571:195:116:-;;;;;;:::i;:::-;;:::i;3381:42:145:-;;3421:2;3381:42;;4025:101:148;;;;;;:::i;:::-;-1:-1:-1;;;;;4104:15:148;4081:4;4104:15;;;:9;:15;;;;;;;4025:101;2135:27;;;;;-1:-1:-1;;;;;2135:27:148;;;3884:146:149;;;:::i;:::-;;;;;;;:::i;4921:108:145:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2889:22::-;;;;;;5751:117:116;;;:::i;2377:22:148:-;;;;;;2965:67:145;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12483:25:273;;;12539:2;12524:18;;12517:34;;;;12567:18;;;12560:34;12637:14;12630:22;12625:2;12610:18;;12603:50;12470:3;12455:19;2965:67:145;12258:401:273;12040:210:116;;;:::i;4335:762:148:-;;;;;;:::i;:::-;;:::i;4762:166:151:-;;;;;;:::i;:::-;;:::i;2001:23::-;;;;;;4023:164;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4154:26:151;;;;:13;:26;;;;;;;;;4147:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4147:33:151;;;;;;;;;-1:-1:-1;;;4147:33:151;;;;;;;;;;;;4023:164;;;;;;;13277:13:273;;13259:32;;13347:4;13335:17;;;13329:24;13307:20;;;13300:54;13414:4;13402:17;;;13396:24;-1:-1:-1;;;;;13392:73:273;13370:20;;;13363:103;13536:4;13524:17;;;13518:24;13511:32;13504:40;13482:20;;;13475:70;;;;13246:3;13231:19;;13048:503;2132:37:151;;;;;-1:-1:-1;;;;;2132:37:151;;;6577:2098;;;;;;:::i;:::-;;:::i;5077:183:145:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;14463:13:273;;14445:32;;14533:4;14521:17;;;14515:24;14493:20;;;14486:54;14596:4;14584:17;;;14578:24;14556:20;;;14549:54;14673:4;14661:17;;;14655:24;14648:32;14641:40;14619:20;;;14612:70;;;;14432:3;14417:19;;14212:476;10269:803:145;;;;;;:::i;:::-;;:::i;2463:22:148:-;;;;;;6783:429:149;;;;;;:::i;:::-;;:::i;6352:108:116:-;6397:16;6432:21;-1:-1:-1;;;;;6432:21:116;6352:108;;2249:31:151;;;;;-1:-1:-1;;;2249:31:151;;;;;;;;;15124:18:273;15112:31;;;15094:50;;15082:2;15067:18;2249:31:151;14950:200:273;8518:1402:145;;;;;;:::i;:::-;;:::i;7022:197:116:-;;;;;;:::i;:::-;;:::i;1735:66:151:-;;1775:26;1735:66;;4589:119;;;;;;:::i;:::-;;:::i;4313:2417:149:-;;;:::i;:::-;;;;;;;;;:::i;14771:101:145:-;;;;;;:::i;:::-;5716:695:148;;2348:32:151;;;;;;3347:28:145;;;;;;12047:2525;;;;;;:::i;:::-;;:::i;4170:121:148:-;4223:4;4246:38;4254:4;4260:23;:21;:23::i;:::-;4246:7;:38::i;:::-;4239:45;4170:121;-1:-1:-1;;4170:121:148:o;1490:294:145:-;1644:4;-1:-1:-1;;;;;;1671:54:145;;-1:-1:-1;;;1671:54:145;;:106;;;1741:36;1765:11;1741:23;:36::i;5960:1998::-;6137:19;1775:26:151;3395:168:116;3427:21;;;;;;;;-1:-1:-1;;;;;3427:21:116;-1:-1:-1;;;;;3427:32:116;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:100;;-1:-1:-1;;;3427:100:116;;3502:4;3427:100;;;17701:74:273;17791:18;;;17784:34;;;-1:-1:-1;;;;;3427:49:116;;;;;;;17674:18:273;;3427:100:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3541:12;:10;:12::i;:::-;3395:18;:168::i;:::-;6172:16:145::1;::::0;::::1;;6168:111;;;6211:57;;-1:-1:-1::0;;;6211:57:145::1;;;;;;;;;;;6168:111;-1:-1:-1::0;;;;;6594:25:145;::::1;6614:4;6594:25;:85:::0;::::1;;;-1:-1:-1::0;6667:12:145::1;::::0;6647:15:::1;::::0;-1:-1:-1;;;;;6647:15:145;;::::1;6667:12:::0;::::1;6639:40;6594:85;6577:226;;;6727:65;;-1:-1:-1::0;;;6727:65:145::1;;;;;;;;;;;6577:226;6876:10;::::0;:15;;:42:::1;;;6908:10;;6895:9;:23;;6876:42;6872:128;;;6941:48;;-1:-1:-1::0;;;6941:48:145::1;;;;;;;;;;;6872:128;7137:6;7132:257;7153:12;:19:::0;7149:23;::::1;7132:257;;;7193:12;7208;7221:1;7208:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;7208:15:145::1;7250:25:::0;;;:19:::1;:25:::0;;;;;;;;7208:15;;-1:-1:-1;7237:39:145::1;::::0;7208:15;;7237:6:::1;:39::i;:::-;-1:-1:-1::0;;;;;7310:25:145;::::1;;::::0;;;:19:::1;:25;::::0;;;;;7290:16:::1;:45:::0;;7310:25;;7290:16;;:45:::1;::::0;7310:25;;7290:45:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;7349:25:145::1;7377:1;7349:25:::0;;;:19:::1;:25;::::0;;;;:29;7174:3:::1;;7132:257;;;-1:-1:-1::0;7399:19:145::1;7406:12;;7399:19;:::i;:::-;7577:55;7591:6:::0;7607:13;7623:8;7577:13:::1;:55::i;:::-;7673:96;::::0;;::::1;::::0;::::1;::::0;;7711:15:::1;7673:96:::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;7673:96:145;;;;;;7642:28;;;:15:::1;:28:::0;;;;;;:127;;;;;;7673:96;7642:127;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;7642:127:145::1;::::0;::::1;;::::0;;;::::1;::::0;;;7785:99;;8049:25:273;;;8090:18;;;8083:34;;;7642:28:145;;-1:-1:-1;7673:96:145;;7642:28;;7785:99:::1;::::0;8022:18:273;7785:99:145::1;;;;;;;-1:-1:-1::0;7895:16:145::1;:23:::0;;-1:-1:-1;;7895:23:145::1;7914:4;7895:23;::::0;;5960:1998;;-1:-1:-1;;;;5960:1998:145:o;3255:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3255:29:145;;-1:-1:-1;3255:29:145;:::o;9926:141::-;3130:21:116;;:34;;;-1:-1:-1;;;3130:34:116;;;;3098:105;;-1:-1:-1;;;;;3130:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3130:47:116;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3098:105;10032:12:145::1;:28:::0;9926:141::o;7225:246:116:-;3640:18;3661:21;;:34;;;-1:-1:-1;;;3661:34:116;;;;7345:4;;3640:18;-1:-1:-1;;;;;3661:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;3661:92:116;;3732:4;3661:92;;;17701:74:273;17791:18;;;17784:34;;;-1:-1:-1;;;;;3661:49:116;;;;;;;17674:18:273;;3661:92:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3640:113;;3763:127;3795:21;;;;;;;;-1:-1:-1;;;;;3795:21:116;-1:-1:-1;;;;;3795:32:116;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3795:47:116;;3843:10;3795:59;;;;;;;;;;;;;571:25:273;;559:2;544:18;;425:177;3795:59:116;;;;;;;;;;;;;;;;;;;;;;;3763:127;7365:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;7365:21:116::1;-1:-1:-1::0;;;;;7365:32:116::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7365:62:116::1;;7441:4;7447:7;;7365:99;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3630:278:::0;7225:246;;;;:::o;6772:244::-;3640:18;3661:21;;:34;;;-1:-1:-1;;;3661:34:116;;;;6891:4;;3640:18;-1:-1:-1;;;;;3661:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;3661:92:116;;3732:4;3661:92;;;17701:74:273;17791:18;;;17784:34;;;-1:-1:-1;;;;;3661:49:116;;;;;;;17674:18:273;;3661:92:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3640:113;;3763:127;3795:21;;;;;;;;-1:-1:-1;;;;;3795:21:116;-1:-1:-1;;;;;3795:32:116;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3763:127;6911:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;6911:21:116::1;-1:-1:-1::0;;;;;6911:32:116::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6911:61:116::1;;6986:4;6992:7;;6911:98;;;;;;;;;;;;;;;;;:::i;11120:738:145:-:0;2356:21:56;:19;:21::i;:::-;11174:12:145::1;11189;:10;:12::i;:::-;-1:-1:-1::0;;;;;11246:25:145;::::1;;::::0;;;:19:::1;:25;::::0;;;;;11174:27;;-1:-1:-1;11246:30:145;11242:610:::1;;-1:-1:-1::0;;;;;11306:25:145;::::1;11292:11;11306:25:::0;;;:19:::1;:25;::::0;;;;;;11346:29;;;;11389:16:::1;:26:::0;;11306:25;;;;11389:26:::1;::::0;11306:25;;11389:26:::1;:::i;:::-;::::0;;;-1:-1:-1;11435:6:145::1;::::0;-1:-1:-1;11430:267:145::1;11447:12;:19:::0;11443:23;::::1;11430:267;;;11514:4;-1:-1:-1::0;;;;;11495:23:145::1;:12;11508:1;11495:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;11495:15:145::1;:23:::0;11491:192:::1;;11560:12;11573:19:::0;;:23:::1;::::0;11595:1:::1;::::0;11573:23:::1;:::i;:::-;11560:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;11542:12:::1;:15:::0;;-1:-1:-1;;;;;11560:37:145;;::::1;::::0;11555:1;;11542:15;::::1;;;;;:::i;:::-;;;;;;;;;:55;;;;;-1:-1:-1::0;;;;;11542:55:145::1;;;;;-1:-1:-1::0;;;;;11542:55:145::1;;;;;;11619:12;:18;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;11619:18:145;;;;;-1:-1:-1;;;;;;11619:18:145::1;::::0;;;;;11659:5:::1;;11491:192;11468:3;;11430:267;;;;11730:4;-1:-1:-1::0;;;;;11716:27:145::1;;11736:6;11716:27;;;;571:25:273::0;;559:2;544:18;;425:177;11716:27:145::1;;;;;;;;11801:12;::::0;11794:47:::1;::::0;-1:-1:-1;;;;;11801:12:145::1;11828:4:::0;11834:6;11794:33:::1;:47::i;:::-;11278:574;11242:610;11164:694;2398:20:56::0;1713:1;2924:7;:21;2744:208;2398:20;11120:738:145:o;5716:695:148:-;2356:21:56;:19;:21::i;:::-;5820:6:148::1;2040:26:149;2059:6;2040:18;:26::i;:::-;5842:14:148::2;5859:12;:10;:12::i;:::-;5842:29;;5947:15;5955:6;5947:7;:15::i;:::-;-1:-1:-1::0;;;;;6012:17:148;::::2;;::::0;;;:9:::2;:17;::::0;;;;:27;;6033:6;;6012:17;:27:::2;::::0;6033:6;;6012:27:::2;:::i;:::-;;;;;;;;6092:6;6077:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6157:12:148::2;::::0;6150:49:::2;::::0;-1:-1:-1;;;;;6157:12:148::2;6184:6:::0;6192;6150:33:::2;:49::i;:::-;-1:-1:-1::0;;;;;6258:15:148;::::2;;::::0;;;:7:::2;:15;::::0;;;;;:20;6254:111:::2;;6328:26;6347:6;6328:18;:26::i;:::-;6389:6;-1:-1:-1::0;;;;;6380:24:148::2;;6397:6;6380:24;;;;571:25:273::0;;559:2;544:18;;425:177;6380:24:148::2;;;;;;;;5832:579;2387:1:56::1;2398:20:::0;1713:1;2924:7;:21;2744:208;6455:171:148;2356:21:56;:19;:21::i;:::-;6519:17:148::1;6539:12;:10;:12::i;:::-;6519:32;;6562:18;6570:9;6562:7;:18::i;:::-;6590:29;6609:9;6590:18;:29::i;4057:712:145:-:0;8870:21:23;4302:15;;-1:-1:-1;;;4302:15:23;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:23;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:23;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:23;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:23;-1:-1:-1;;;5013:22:23;;;4979:67;4314:38:145::1;4328:13;4343:8;4314:13;:38::i;:::-;4377:24;4415:20:::0;4449:16:::1;4479:14:::0;4507:15:::1;4546:10;4535:65;;;;;;;;;;;;:::i;:::-;4363:237;;;;;;;;;;4611:41;4635:16;4611:23;:41::i;:::-;4662:100;4709:12;4723:11;4736:6;4744:8;4662:33;:100::i;:::-;4304:465;;;;;5070:14:23::0;5066:101;;;5100:23;;-1:-1:-1;;5100:23:23;;;5142:14;;-1:-1:-1;15094:50:273;;5142:14:23;;15082:2:273;15067:18;5142:14:23;;;;;;;5066:101;4092:1081;;;;;4057:712:145;;;:::o;6215:100:116:-;6253:13;6285:17;:23;;6278:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6215:100;:::o;3763:206:151:-;3822:4;3852:26;;;:13;:26;;;;;:35;;;3822:4;;-1:-1:-1;;;3852:35:151;;;;3847:59;;-1:-1:-1;3897:5:151;;;;-1:-1:-1;3763:206:151;-1:-1:-1;3763:206:151:o;3847:59::-;-1:-1:-1;;3930:26:151;;;;:13;:26;;;;;3924:4;3930:31;;;;3924:4;;3763:206::o;6082:96:116:-;6118:13;6150:17;:21;;6143:28;;;;;:::i;11478:237::-;11630:4;11657:21;;:51;;-1:-1:-1;;;11657:51:116;;-1:-1:-1;;;;;2078:55:273;;;11657:51:116;;;2060:74:273;11657:21:116;;;;:40;;2033:18:273;;11657:51:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4347:188:151:-;3130:21:116;;:34;;;-1:-1:-1;;;3130:34:116;;;;3098:105;;-1:-1:-1;;;;;3130:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3098:105;4478:50:151::1;4505:12;4519:8;4478:26;:50::i;:::-;4347:188:::0;;:::o;5308:102:145:-;5356:16;5391:12;5384:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5384:19:145;;;;;;;;;;;;;;;;;;;;;;5308:102;:::o;8179:291::-;3130:21:116;;:34;;;-1:-1:-1;;;3130:34:116;;;;3098:105;;-1:-1:-1;;;;;3130:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3098:105;2356:21:56::1;:19;:21::i;:::-;8305:6:145::2;2040:26:149;2059:6;2040:18;:26::i;:::-;8327:69:145::3;8360:12;:10;:12::i;:::-;8327:15;::::0;-1:-1:-1;;;;;8327:15:145::3;::::0;8382:4:::3;8389:6:::0;8327:32:::3;:69::i;:::-;8438:15;::::0;8412:51:::3;::::0;571:25:273;;;-1:-1:-1;;;;;8438:15:145;;::::3;::::0;8412:51:::3;::::0;559:2:273;544:18;8412:51:145::3;;;;;;;2387:1:56::2;2398:20:::1;1713:1:::0;2924:7;:21;2744:208;6670:145:148;3130:21:116;;:34;;;-1:-1:-1;;;3130:34:116;;;;3098:105;;-1:-1:-1;;;;;3130:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3098:105;6779:29:148::1;6791:6;6799:8;6779:11;:29::i;6571:195:116:-:0;3640:18;3661:21;;:34;;;-1:-1:-1;;;3661:34:116;;;;6671:4;;3640:18;-1:-1:-1;;;;;3661:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;3661:92:116;;3732:4;3661:92;;;17701:74:273;17791:18;;;17784:34;;;-1:-1:-1;;;;;3661:49:116;;;;;;;17674:18:273;;3661:92:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3640:113;;3763:127;3795:21;;;;;;;;-1:-1:-1;;;;;3795:21:116;-1:-1:-1;;;;;3795:32:116;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3763:127;6691:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;6691:21:116::1;-1:-1:-1::0;;;;;6691:32:116::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;::::0;-1:-1:-1;;;6691:68:116;;::::1;::::0;::::1;21117:25:273::0;;;-1:-1:-1;;;;;21178:55:273;;;21158:18;;;21151:83;6691:54:116;;;::::1;::::0;::::1;::::0;21090:18:273;;6691:68:116::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3884:146:149::0;3972:21;4016:7;4009:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4009:14:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3884:146;:::o;4921:108:145:-;4971:10;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4971:10:145;5000:22;;;;:14;:22;;;;;;;;;4993:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5000:22;;4993:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4921:108;;;:::o;5751:117:116:-;5820:41;;;;;;;;5843:17;5820:41;;;;;;;;;;;;;5794:7;;5820:41;;;5843:17;5820:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:41::i;:::-;5813:48;;5751:117;:::o;12040:210::-;12173:7;12203:21;;;;;;;;;-1:-1:-1;;;;;12203:21:116;-1:-1:-1;;;;;12203:38:116;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4335:762:148:-;4494:4;4437:6;2040:26:149;2059:6;2040:18;:26::i;:::-;4467:8:148::1;1868;1880:1;1868:13:::0;1864:94:::1;;1904:43;;-1:-1:-1::0;;;1904:43:148::1;;;;;;;;;;;1864:94;4597:10:::2;;4579:15;:28;4575:67;;;4630:1;4623:8;;;;4575:67;4728:10;::::0;4699:26:::2;4717:8:::0;4699:15:::2;:26;:::i;:::-;:39;4695:173;;;4842:15;4829:10;;:28;;;;:::i;:::-;4818:39;;4695:173;4914:11;;4929:1;4914:16:::0;4910:120:::2;;5009:10;::::0;4989:17:::2;4998:8:::0;4989:6;:17:::2;:::i;:::-;:30;;;;:::i;:::-;4982:37;;;;4910:120;5079:11;::::0;5066:10:::2;::::0;5046:17:::2;5055:8:::0;5046:6;:17:::2;:::i;:::-;:30;;;;:::i;:::-;:44;;;;:::i;:::-;5039:51;;1967:1;2076::149::1;4335:762:148::0;;;;;:::o;4762:166:151:-;3130:21:116;;:34;;;-1:-1:-1;;;3130:34:116;;;;3098:105;;-1:-1:-1;;;;;3130:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3098:105;4879:42:151::1;4908:12;4879:28;:42::i;6577:2098::-:0;6734:19;1775:26;3395:168:116;3427:21;;;;;;;;-1:-1:-1;;;;;3427:21:116;-1:-1:-1;;;;;3427:32:116;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:168;-1:-1:-1;;;;;6780:22:151;::::1;::::0;:48:::1;;6820:8;6780:48;;;6805:12;:10;:12::i;:::-;6769:59;;6838:96;6884:12;:10;:12::i;:::-;6913:11;::::0;6838:15:::1;::::0;-1:-1:-1;;;;;6838:15:151::1;::::0;:96;6906:4:::1;::::0;6838:32:::1;:96::i;:::-;6990:2;::::0;6995:11:::1;::::0;6944:15:::1;::::0;:63:::1;::::0;-1:-1:-1;;;;;6944:15:151;;::::1;::::0;6990:2;::::1;::::0;6944:37:::1;:63::i;:::-;7622:2;::::0;-1:-1:-1;;;;;7622:2:151::1;:14;7789:27;7811:4:::0;7789:21:::1;:27::i;:::-;7869:29;7891:6;7869:21;:29::i;:::-;7953:38;7982:8;7953:28;:38::i;:::-;8044:42;8070:15;8044:25;:42::i;:::-;8159:43;8196:4;8159:28;:43::i;:::-;7650:596;;;;;;;;;;;;:::i;:::-;;::::0;;;;::::1;-1:-1:-1::0;;7650:596:151;;;;;;;8359:17:::1;::::0;8390:15:::1;::::0;8419:11:::1;::::0;8444:17:::1;::::0;7622:887:::1;::::0;;;-1:-1:-1;;;;;;7622:887:151;;;::::1;::::0;8260:8;;8290:4:::1;::::0;8317:1:::1;::::0;-1:-1:-1;;;8359:17:151;;::::1;;;::::0;-1:-1:-1;;;;;8390:15:151;;::::1;::::0;8317:1;;7622:887:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8560:44;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;8560:44:151;;::::1;::::0;;;;;;-1:-1:-1;8560:44:151;;;;;;8519:26;;;:13:::1;:26:::0;;;;;;:85;;;;;;8560:44;8519:85;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;::::1;;-1:-1:-1::0;;;8519:85:151::1;-1:-1:-1::0;;8519:85:151;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;8619:49;;7608:901;;-1:-1:-1;7608:901:151;;8574:6;;8619:49:::1;::::0;::::1;::::0;8582:4;571:25:273;;559:2;544:18;;425:177;8619:49:151::1;;;;;;;;6577:2098:::0;;;;;;:::o;5077:183:145:-;5171:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5171:31:145;-1:-1:-1;5225:28:145;;;;:15;:28;;;;;;;;;5218:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5077:183::o;10269:803::-;2356:21:56;:19;:21::i;:::-;10372:6:145::1;2040:26:149;2059:6;2040:18;:26::i;:::-;10398:12:145::2;:19:::0;3421:2:::2;-1:-1:-1::0;10394:127:145::2;;10460:50;;-1:-1:-1::0;;;10460:50:145::2;;;;;;;;;;;10394:127;10544:12;;10535:6;:21;10531:109;;;10579:50;;-1:-1:-1::0;;;10579:50:145::2;;;;;;;;;;;10531:109;10650:14;10667:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;10694:27:145;::::2;;::::0;;;:19:::2;:27;::::0;;;;;10650:29;;-1:-1:-1;10694:32:145;10690:123:::2;;10777:12;:25:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;10777:25:145;;;;;::::2;::::0;;-1:-1:-1;;;;;;10777:25:145::2;-1:-1:-1::0;;;;;10777:25:145;::::2;;::::0;;10690:123:::2;-1:-1:-1::0;;;;;10822:27:145;::::2;;::::0;;;:19:::2;:27;::::0;;;;:37;;10853:6;;10822:27;:37:::2;::::0;10853:6;;10822:37:::2;:::i;:::-;;;;;;;;10889:6;10869:16;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10959:12:145::2;::::0;10952:68:::2;::::0;-1:-1:-1;;;;;10959:12:145::2;10990:6:::0;11006:4:::2;11013:6:::0;10952:37:::2;:68::i;:::-;11050:6;-1:-1:-1::0;;;;;11036:29:145::2;;11058:6;11036:29;;;;571:25:273::0;;559:2;544:18;;425:177;6783:429:149;6931:65;6982:12;:10;:12::i;:::-;6931:29;:65::i;:::-;6926:165;;7027:53;;-1:-1:-1;;;7027:53:149;;;;;;;;;;;6926:165;-1:-1:-1;;;;;7164:31:149;;;;;;:24;:31;;;;;:41;;7199:6;;7164:31;:41;;7199:6;;7164:41;:::i;:::-;;;;-1:-1:-1;;;;6783:429:149:o;8518:1402:145:-;8690:4;3130:21:116;;:34;;;-1:-1:-1;;;3130:34:116;;;;3098:105;;-1:-1:-1;;;;;3130:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3098:105;8728:14:145;8781:1:::1;8764:18:::0;::::1;::::0;:41:::1;;;8803:2;8786:14;:19;8764:41;8760:131;;;8828:52;;-1:-1:-1::0;;;8828:52:145::1;;;;;;;;;;;8760:131;8905:40:::0;;::::1;8901:132;;8968:54;;-1:-1:-1::0;;;8968:54:145::1;;;;;;;;;;;8901:132;9043:21;9067:15;;9083:1;9067:18;;;;;;;:::i;:::-;;;;;;;9043:42;;9116:1;9099:14;:18;9095:351;;;9147:1;9133:303;9154:14;9150:1;:18;9133:303;;;9222:14;;9237:1;9222:17;;;;;;;:::i;:::-;;;;;;;9197:14;;9216:1;9212;:5;;;;:::i;:::-;9197:21;;;;;;;:::i;:::-;;;;;;;:42;9193:172;;9270:76;;-1:-1:-1::0;;;9270:76:145::1;;;;;;;;;;;9193:172;9403:15;;9419:1;9403:18;;;;;;;:::i;:::-;;;;;;;9383:38;;;;;:::i;:::-;::::0;-1:-1:-1;9170:3:145::1;;9133:303;;;;9095:351;9456:11;9470:10;;9456:24;;9516:153;;;;;;;;9533:14;9516:153;;;;9561:16;9516:153;;;;9591:11;9516:153;;;;;;9616:14;;9516:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;9516:153:145;;;-1:-1:-1;9516:153:145::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;9644:15;;;;;;9516:153;::::1;::::0;9644:15;;9516:153;9644:15;9516:153;::::1;;::::0;::::1;::::0;;;-1:-1:-1;9516:153:145;;;;-1:-1:-1;;9491:22:145;;;:14:::1;:22;::::0;;;;;;;;:178;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;9491:178:145::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;:22;;-1:-1:-1;9491:178:145::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;9491:178:145::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;9679:10:145::1;:12:::0;;;-1:-1:-1;9679:10:145::1;:12;::::0;::::1;:::i;:::-;;;;;;9731:6;9707:180;9751:14;9779:16;9809:11;9834:14;;9862:15;;9707:180;;;;;;;;;;;;:::i;:::-;;;;;;;;9906:6:::0;8518:1402;-1:-1:-1;;;;;;;;8518:1402:145:o;7022:197:116:-;3640:18;3661:21;;:34;;;-1:-1:-1;;;3661:34:116;;;;7123:4;;3640:18;-1:-1:-1;;;;;3661:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;3661:92:116;;3732:4;3661:92;;;17701:74:273;17791:18;;;17784:34;;;-1:-1:-1;;;;;3661:49:116;;;;;;;17674:18:273;;3661:92:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3640:113;;3763:127;3795:21;;;;;;;;-1:-1:-1;;;;;3795:21:116;-1:-1:-1;;;;;3795:32:116;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3763:127;7143:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;7143:21:116::1;-1:-1:-1::0;;;;;7143:32:116::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;::::0;-1:-1:-1;;;7143:69:116;;::::1;::::0;::::1;21117:25:273::0;;;-1:-1:-1;;;;;21178:55:273;;;21158:18;;;21151:83;7143:55:116;;;::::1;::::0;::::1;::::0;21090:18:273;;7143:69:116::1;20943:297:273::0;4589:119:151;3130:21:116;;:34;;;-1:-1:-1;;;3130:34:116;;;;3098:105;;-1:-1:-1;;;;;3130:21:116;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3098:105;4673:28:151::1;4694:6;4673:20;:28::i;4313:2417:149:-:0;4395:21;4418:16;4436:13;4538:65;4589:12;:10;:12::i;4538:65::-;4533:165;;4634:53;;-1:-1:-1;;;4634:53:149;;;;;;;;;;;4533:165;4778:7;:14;4758:17;;4778:14;4861:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4861:27:149;;4828:60;;4898:28;4940:12;4929:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4929:24:149;;4898:55;;4963:26;5011:12;4992:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4992:32:149;;;;;;;;;;;;;;;;;4963:61;;5040:6;5035:618;5052:12;5048:1;:16;5035:618;;;5095:7;5103:1;5095:10;;;;;;;;:::i;:::-;;;;;;;;;;5085:20;;;;;;;;5095:10;;;;;;;5085:20;;-1:-1:-1;;;;;5085:20:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;:4;;5090:1;;5085:7;;;;;;:::i;:::-;;;;;;:20;;;;5119:10;5148:6;5143:192;5160:10;5156:1;:14;5143:192;;;5219:4;5224:1;5219:7;;;;;;;;:::i;:::-;;;;;;;:20;;;-1:-1:-1;;;;;5199:40:149;:13;5213:1;5199:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5199:40:149;;5195:126;;5271:4;5263:12;;5297:5;;5195:126;5172:3;;5143:192;;;;5353:5;5348:295;;5465:4;5470:1;5465:7;;;;;;;;:::i;:::-;;;;;;;:20;;;5437:13;5451:10;5437:25;;;;;;;;:::i;:::-;;;;;;:48;-1:-1:-1;;;;;5437:48:149;;;-1:-1:-1;;;;;5437:48:149;;;;;5552:24;:46;5577:4;5582:1;5577:7;;;;;;;;:::i;:::-;;;;;;;:20;;;-1:-1:-1;;;;;5552:46:149;-1:-1:-1;;;;;5552:46:149;;;;;;;;;;;;;5503:14;5518:10;5503:26;;;;;;;;:::i;:::-;;;;;;;;;;:95;5616:12;;;;:::i;:::-;;;;5348:295;-1:-1:-1;5066:3:149;;5035:618;;;-1:-1:-1;5705:14:149;5712:7;;5705:14;:::i;:::-;5783:23;5823:10;5809:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5809:25:149;;5783:51;;5844:21;5879:10;5868:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5868:22:149;;5844:46;;5906:6;5901:685;5918:10;5914:1;:14;5901:685;;;5961:13;5975:1;5961:16;;;;;;;;:::i;:::-;;;;;;;5949:6;5956:1;5949:9;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1;;;;;5949:28:149;;;-1:-1:-1;;;;;5949:28:149;;;;;6004:14;6019:1;6004:17;;;;;;;;:::i;:::-;;;;;;;5991:7;5999:1;5991:10;;;;;;;;:::i;:::-;;;;;;:30;;;;;6124:68;6167:12;:10;:12::i;:::-;6182:6;6189:1;6182:9;;;;;;;;:::i;:::-;;;;;;;6124:21;:68::i;:::-;6545:30;6565:6;6572:1;6565:9;;;;;;;;:::i;:::-;;;;;;;6545:19;:30::i;:::-;5930:3;;5901:685;;;-1:-1:-1;6701:4:149;;6707:6;;-1:-1:-1;6715:7:149;;-1:-1:-1;4313:2417:149;-1:-1:-1;;;;;4313:2417:149:o;12047:2525:145:-;12257:64;12289:11;12302:18;12257:31;:64::i;:::-;12420:18;12416:2003;;;12649:22;12705:28;;;:15;:28;;;;;;;;:37;;;;;12690:53;;:14;:53;;;;;12649:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12690:53;;12649:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12757:17;12794:6;12789:1305;12806:25;;12802:29;;12789:1305;;;12937:28;;;;:15;:28;;;;;:42;;;12881:25;;;;:28;;12907:1;;12881:28;;;;;;:::i;:::-;;;;;;;:98;12856:1224;;13099:11;:26;;;13126:1;13099:29;;;;;;;;:::i;:::-;;;;;;;13083:45;;;;;:::i;:::-;;;12856:1224;;;13228:11;:22;;;13224:732;;;13329:23;13355:11;:26;;;13382:1;13355:29;;;;;;;;:::i;:::-;;;;;;;13329:55;;13410:17;13458:1;13463;13458:6;:45;;13471:25;;;;13497:5;13501:1;13497;:5;:::i;:::-;13471:32;;;;;;;;:::i;:::-;;;;;;;13458:45;;;13467:1;13458:45;13530:19;13552:28;;;:15;:28;;;;;:71;;;13410:93;;-1:-1:-1;13530:19:145;13552:86;;13410:93;;13552:86;:::i;:::-;13530:108;;13664:15;13741:12;13710:11;:25;;;13736:1;13710:28;;;;;;;;:::i;:::-;;;;;;;:43;;;;:::i;:::-;13664:89;-1:-1:-1;13842:31:145;13664:89;13842:18;:31;:::i;:::-;13824:50;;:14;:50;:::i;:::-;13780:94;;;;:::i;:::-;;;13252:704;;;;13224:732;14056:5;;12856:1224;12833:3;;12789:1305;;;;14108:28;14120:12;14134:1;14108:11;:28::i;:::-;-1:-1:-1;;14150:28:145;;;;:15;:28;;;;;:40;;:47;;-1:-1:-1;;14150:47:145;14193:4;14150:47;;;12416:2003;;;14380:28;;;;:15;:28;;;;;14373:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14373:35:145;;;12416:2003;-1:-1:-1;;14541:16:145;:24;;-1:-1:-1;;14541:24:145;;;12047:2525::o;8552:853:148:-;8608:4;8698:11;;8713:1;8698:16;8694:65;;-1:-1:-1;8737:11:148;;;8552:853::o;8694:65::-;9328:11;;9241;;8972:10;;8813;;8777:33;:31;:33::i;:::-;:46;;;;:::i;:::-;8776:206;;;;:::i;:::-;:323;;9095:4;8776:323;:::i;:::-;:476;;;;:::i;:::-;:563;;;;:::i;10168:513::-;-1:-1:-1;;;;;10661:13:148;;10272:4;10661:13;;;:7;:13;;;;;;;;;10490:9;:15;;;;;;10322;:21;;;;;;;10661:13;;10599:4;;10300:43;;:19;:43;:::i;:::-;10299:206;;;;:::i;:::-;:304;;;;:::i;:::-;:375;;;;:::i;:::-;10292:382;10168:513;-1:-1:-1;;;10168:513:148:o;1423:288::-;1575:4;-1:-1:-1;;;;;;1602:50:148;;-1:-1:-1;;;1602:50:148;;:102;;;1668:36;1692:11;1668:23;:36::i;2327:429:22:-;2389:7;2433:8;3604:2;2524:30;2543:10;2524:18;:30::i;:::-;:71;;;;;2576:19;2558:14;:37;;2524:71;2520:230;;;2634:8;;2643:36;2660:19;2643:14;:36;:::i;:::-;2634:47;;;;;:::i;:::-;2626:56;;;:::i;:::-;2618:65;;2611:72;;;;2327:429;:::o;2520:230::-;966:10:24;2714:25:22;;;;2327:429;:::o;10519:218:116:-;10604:21;;;;;;;;-1:-1:-1;;;;;10604:21:116;-1:-1:-1;;;;;10604:32:116;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;-1:-1:-1;;;10604:54:116;;;;;21117:25:273;;;-1:-1:-1;;;;;21178:55:273;;;21158:18;;;21151:83;10604:42:116;;;;;;;21090:18:273;;10604:54:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10599:132;;10681:39;;-1:-1:-1;;;10681:39:116;;;;;21117:25:273;;;-1:-1:-1;;;;;21178:55:273;;21158:18;;;21151:83;21090:18;;10681:39:116;;;;;;;;6928:493:148;7004:19;7012:10;7004:7;:19::i;:::-;-1:-1:-1;;;;;7090:19:148;;;;;;:7;:19;;;;;;:24;7086:146;;7191:30;7210:10;7191:18;:30::i;:::-;-1:-1:-1;;;;;7282:21:148;;;;;;:9;:21;;;;;:31;;7307:6;;7282:21;:31;;7307:6;;7282:31;:::i;:::-;;;;;;;;7366:6;7351:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;7388:26:148;;571:25:273;;;-1:-1:-1;;;;;7388:26:148;;;;;559:2:273;544:18;7388:26:148;;;;;;;;6928:493;;:::o;2431:307:56:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:56;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;1303:160:48:-;1412:43;;-1:-1:-1;;;;;17719:55:273;;;1412:43:48;;;17701:74:273;17791:18;;;17784:34;;;1385:71:48;;1405:5;;1427:14;;;;;17674:18:273;;1412:43:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1412:43:48;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;7551:166:149:-;7619:6;7629:1;7619:11;7615:96;;7653:47;;-1:-1:-1;;;7653:47:149;;;;;;;;;;;7511:475:148;7619:23;:21;:23::i;:::-;7605:11;:37;7701:33;:31;:33::i;:::-;7688:10;:46;-1:-1:-1;;;;;7804:28:148;;;7800:180;;7874:36;7882:14;7898:11;;7874:7;:36::i;:::-;-1:-1:-1;;;;;7848:23:148;;;;;;:7;:23;;;;;;;;:62;;;;7958:11;;7924:15;:31;;;;;;:45;7511:475;:::o;10763:742::-;10872:11;10886:31;10894:9;10905:11;;10886:7;:31::i;:::-;-1:-1:-1;;;;;10958:18:148;;10979:1;10958:18;;;:7;:18;;;;;;;;:22;;;;11021:282;;;;;;;;;;;10872:45;;-1:-1:-1;10991:322:148;;11021:282;;;11112:14;6397:16:116;6432:21;-1:-1:-1;;;;;6432:21:116;;6352:108;11112:14:148;-1:-1:-1;;;;;11112:29:148;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11112:37:148;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11021:282:148;;;;;11178:6;11021:282;;;;11209:15;11021:282;;;;11249:1;11021:282;;;;11273:15;11021:282;;;10991:16;:322::i;:::-;11324:21;;;;;;;;-1:-1:-1;;;;;11324:21:148;-1:-1:-1;;;;;11324:38:148;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:121;;-1:-1:-1;;;11324:121:148;;11429:4;11324:121;;;2060:74:273;-1:-1:-1;;;;;11324:56:148;;;;;;;2033:18:273;;11324:121:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11480:9;-1:-1:-1;;;;;11461:37:148;;11491:6;11461:37;;;;571:25:273;;559:2;544:18;;425:177;4903:700:116;6931:20:23;:18;:20::i;:::-;-1:-1:-1;;;;;5088:36:116;::::1;5084:110;;5147:36;;-1:-1:-1::0;;;5147:36:116::1;;;;;;;;;;;5084:110;5203:21;:37:::0;;-1:-1:-1;;;;;;5203:37:116::1;-1:-1:-1::0;;;;;5203:37:116;::::1;;::::0;;5294:29:::1;5314:8:::0;5294:19:::1;:29::i;:::-;5289:93;;5346:25;;-1:-1:-1::0;;;5346:25:116::1;;;;;;;;;;;5289:93;5391:28:::0;;:17:::1;:28:::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;5411:8;;5391:17;:28;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;5391:28:116::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;;;5502:14:116::1;::::0;::::1;::::0;5435:161:::1;::::0;::::1;::::0;5502:14;5435:161:::1;:::i;:::-;;::::0;;;;;::::1;::::0;;5530:21;;5565::::1;::::0;;::::1;::::0;8049:25:273;;;8090:18;;8083:34;5435:161:116;-1:-1:-1;;;;;5435:161:116;::::1;::::0;::::1;::::0;8022:18:273;5435:161:116::1;;;;;;;;4903:700:::0;;:::o;3725:150:148:-;6931:20:23;:18;:20::i;:::-;3837:31:148::1;3854:13;3837:16;:31::i;3269:334:151:-:0;6931:20:23;:18;:20::i;:::-;3458:28:151::1;3479:6;3458:20;:28::i;:::-;3496:38;3525:8;3496:28;:38::i;:::-;3544:52;3571:12;3585:10;3544:26;:52::i;:::-;3269:334:::0;;;;:::o;5042:478::-;-1:-1:-1;;;;;5150:35:151;;5146:133;;5208:60;;-1:-1:-1;;;5208:60:151;;;;;;;;;;;5146:133;5303:2;;:40;;-1:-1:-1;;;5303:40:151;;-1:-1:-1;;;;;2078:55:273;;;5303:40:151;;;2060:74:273;5303:2:151;;;;:17;;2033:18:273;;5303:40:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5292:8;:51;5288:145;;;5366:56;;-1:-1:-1;;;5366:56:151;;;;;;;;;;;5288:145;5443:15;:38;;-1:-1:-1;;;;;;5443:38:151;-1:-1:-1;;;;;5443:38:151;;;;;;;;;;;5491:11;:22;5042:478::o;1702:188:48:-;1829:53;;-1:-1:-1;;;;;31697:15:273;;;1829:53:48;;;31679:34:273;31749:15;;;31729:18;;;31722:43;31781:18;;;31774:34;;;1802:81:48;;1822:5;;1844:18;;;;;31591::273;;1829:53:48;31416:398:273;11551:1134:148;11637:6;2040:26:149;2059:6;2040:18;:26::i;:::-;11667:8:148::1;1868;1880:1;1868:13:::0;1864:94:::1;;1904:43;;-1:-1:-1::0;;;1904:43:148::1;;;;;;;;;;;1864:94;11691:19:::2;11707:1;11691:7;:19::i;:::-;11787:10;;11768:15;:29;11764:447;;11875:17;11884:8:::0;11875:6;:17:::2;:::i;:::-;11862:10;:30:::0;11764:447:::2;;;12000:21;12057:10;;12038:15;12025:10;;:28;;;;:::i;:::-;12024:43;;;;:::i;:::-;12000:67:::0;-1:-1:-1;12192:8:148;12163:25:::2;12000:67:::0;12163:6;:25:::2;:::i;:::-;12162:38;;;;:::i;:::-;12149:10;:51:::0;-1:-1:-1;11764:447:148::2;12260:10;;12274:1;12260:15:::0;12256:98:::2;;12298:45;;-1:-1:-1::0;;;12298:45:148::2;;;;;;;;;;;12256:98;12421:26;12439:8:::0;12421:15:::2;:26;:::i;:::-;12408:10;:39:::0;;;12596:15:::2;12583:10;:28:::0;12655:10:::2;::::0;12627:51:::2;::::0;;32050:25:273;;;32106:2;32091:18;;32084:34;;;32134:18;;;32127:34;;;;32192:2;32177:18;;32170:34;;;;12627:51:148::2;::::0;32037:3:273;32022:19;12627:51:148::2;;;;;;;2076:1:149::1;11551:1134:148::0;;;:::o;688:237:142:-;792:7;856:8;:21;;;879:8;:12;;;893:8;:14;;;845:63;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;822:96;;;;;;815:103;;688:237;;;:::o;5818:284:151:-;5915:6;5900:12;:21;;;5896:158;;;5983:60;;-1:-1:-1;;;5983:60:151;;;;;;;;;;;5896:158;6063:17;:32;;;;;;-1:-1:-1;;;6063:32:151;;;;;;;;;;;5818:284::o;2081:225:48:-;2200:39;;-1:-1:-1;;;2200:39:48;;2224:4;2200:39;;;32909:34:273;-1:-1:-1;;;;;32979:15:273;;;32959:18;;;32952:43;2177:20:48;;2200:15;;;;;;32821:18:273;;2200:39:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2177:62;-1:-1:-1;2249:50:48;2262:5;2269:7;2278:20;2293:5;2177:62;2278:20;:::i;:::-;2249:12;:50::i;2586:182:69:-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;33163:19:273;;;;33198:12;;33191:28;33235:12;;2678:83:69;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;3287:26;;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;33413:19:273;;;33474:28;33462:41;33457:2;33448:12;;33441:63;33529:2;33520:12;;33258:280;3569:546:69;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:69;;;;;;;;;;;;-1:-1:-1;;;3678:10:69;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:69;;-1:-1:-1;3805:2:69;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:69;-1:-1:-1;3827:34:69;-1:-1:-1;3883:3:69;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:69;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;4070:7:69;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:69;3569:546;-1:-1:-1;;;;3569:546:69:o;10225:209:149:-;10353:4;10380:21;;:40;;;-1:-1:-1;;;10380:40:149;;;;-1:-1:-1;;;;;10380:47:149;;;;:21;;:38;;:40;;;;;;;;;;;;;;:21;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10380:47:149;;;10225:209;-1:-1:-1;;10225:209:149:o;5526:286:151:-;-1:-1:-1;;;;;5595:20:151;;5591:113;;5638:55;;-1:-1:-1;;;5638:55:151;;;;;;;;;;;5591:113;5713:2;:40;;-1:-1:-1;;;;;;5713:40:151;-1:-1:-1;;;;;5713:40:151;;;;;;;;5783:22;;;-1:-1:-1;;;5783:22:151;;;;:20;;:22;;;;;;;;;;;;;;;5713:40;5783:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5763:17;:42;-1:-1:-1;5526:286:151:o;9911:229:149:-;-1:-1:-1;;;;;10092:31:149;;;;;;:24;:31;;;;;;10034:99;;10092:31;10082:7;;10034:26;:99::i;8594:1236::-;-1:-1:-1;;;;;8679:31:149;;8665:11;8679:31;;;:24;:31;;;;;;;8740:38;;-1:-1:-1;;;8740:38:149;;8772:4;8740:38;;;2060:74:273;8679:31:149;;;8740:23;;2033:18:273;;8740:38:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8720:58;;8851:6;8836:12;:21;8832:992;;;8989:21;;;;;;;;-1:-1:-1;;;;;8989:21:149;-1:-1:-1;;;;;8989:36:149;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8989:44:149;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8972:64:149;:5;-1:-1:-1;;;;;8972:64:149;;8951:863;;9179:7;9228:21;;9320:38;;;-1:-1:-1;;;9320:38:149;;;;-1:-1:-1;;;;;9228:21:149;;;;:62;;:21;;9320:36;;:38;;;;;;;;;;;;;;;9228:21;9320:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9500:4;9507:21;9516:12;9507:6;:21;:::i;:::-;9381:170;;-1:-1:-1;;;;;17719:55:273;;;9381:170:149;;;17701:74:273;17791:18;;;17784:34;17674:18;;9381:170:149;;;-1:-1:-1;;9381:170:149;;;;;;;;;;;;;;-1:-1:-1;;;;;9381:170:149;-1:-1:-1;;;9381:170:149;;;9228:341;-1:-1:-1;;;;;;9381:170:149;9228:341;;;;;;;;;9381:170;9228:341;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9228:341:149;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9204:365:149;-1:-1:-1;9204:365:149;9588:110;;9626:53;;-1:-1:-1;;;9626:53:149;;;;;;;;;;;8951:863;9743:56;;-1:-1:-1;;;9743:56:149;;-1:-1:-1;;;;;2078:55:273;;9743:56:149;;;2060:74:273;2033:18;;9743:56:149;1914:226:273;9068:831:151;9224:2;;-1:-1:-1;;;;;9224:2:151;9200:12;:10;:12::i;:::-;-1:-1:-1;;;;;9200:27:151;;9196:114;;9250:49;;-1:-1:-1;;;9250:49:151;;;;;;;;;;;9196:114;9320:34;9357:26;;;:13;:26;;;;;;;;;9320:63;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9320:63:151;;;;;;;;-1:-1:-1;;;9320:63:151;;;;;;;;;;;9399:190;;7805:14:273;;7798:22;7780:41;;7837:18;;;7830:34;;;;9320:63:151;;9357:26;;9399:190;;7753:18:273;9399:190:151;;;;;;;9679:18;9675:155;;;9713:26;;;;:13;:26;;;;;:35;;:42;;-1:-1:-1;;;;9713:42:151;-1:-1:-1;;;9713:42:151;;;1303:160:48;;;:::o;9675:155:151:-;-1:-1:-1;;9793:26:151;;;;:13;:26;;;;;9786:33;;;;;;;;;;;;;;-1:-1:-1;;9786:33:151;;;9068:831::o;9712:156:148:-;9778:4;9815:15;9801:10;;:29;;:60;;-1:-1:-1;9846:15:148;;5751:117:116:o;9801:60:148:-;-1:-1:-1;9833:10:148;;;9712:156::o;1469:281:149:-;1605:4;-1:-1:-1;;;;;;1632:59:149;;-1:-1:-1;;;1632:59:149;;:111;;;1707:36;1731:11;1707:23;:36::i;4059:629:48:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:48;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:48;;-1:-1:-1;;;;;2078:55:273;;4631:40:48;;;2060:74:273;2033:18;;4631:40:48;1914:226:273;2872:458:149;2984:5;2154:31;2179:5;2154:24;:31::i;:::-;3120:5:::1;:12;;;3072:24;:44;3097:5;:18;;;-1:-1:-1::0;;;;;3072:44:149::1;-1:-1:-1::0;;;;;3072:44:149::1;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3198:7:149::1;:19:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3198:19:149;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;3198:19:149;;::::1;-1:-1:-1::0;;;;;;3198:19:149;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;3233:90;3198:19;;3233:90:::1;::::0;::::1;::::0;571:25:273;;559:2;544:18;;425:177;7084:141:23;8870:21;8560:40;-1:-1:-1;;;8560:40:23;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:23;;;;;;;;;;;1084:525:142;1185:4;1248:8;:12;;;1242:26;1272:1;1242:31;1238:74;;-1:-1:-1;1296:5:142;;1084:525;-1:-1:-1;1084:525:142:o;1238:74::-;1367:8;:14;;;1361:28;1393:1;1361:33;1357:76;;-1:-1:-1;1417:5:142;;1084:525;-1:-1:-1;1084:525:142:o;1357:76::-;1486:21;;:26;:56;;;;-1:-1:-1;1516:21:142;;;;:26;1486:56;1482:99;;;-1:-1:-1;1565:5:142;;1084:525;-1:-1:-1;1084:525:142:o;1482:99::-;-1:-1:-1;1598:4:142;;1084:525;-1:-1:-1;1084:525:142:o;12691:203:148:-;-1:-1:-1;;;;;12756:20:148;;12752:105;;12799:47;;-1:-1:-1;;;12799:47:148;;;;;;;;;;;12752:105;12866:12;:21;;-1:-1:-1;;;;;;12866:21:148;-1:-1:-1;;;;;12866:21:148;;;;;;;;;;12691:203::o;3296:380:48:-;3411:47;;;-1:-1:-1;;;;;17719:55:273;;3411:47:48;;;17701:74:273;17791:18;;;;17784:34;;;3411:47:48;;;;;;;;;;17674:18:273;;;;3411:47:48;;;;;;;;-1:-1:-1;;;;;3411:47:48;-1:-1:-1;;;3411:47:48;;;3474:44;3426:13;3411:47;3474:23;:44::i;:::-;3469:201;;3561:43;;-1:-1:-1;;;;;17719:55:273;;;3561:43:48;;;17701:74:273;3601:1:48;17791:18:273;;;17784:34;3534:71:48;;3554:5;;3576:13;;;;;17674:18:273;;3561:43:48;17527:297:273;3534:71:48;3619:40;3639:5;3646:12;3619:19;:40::i;897:1306:69:-;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;1092:66;1088:70;1084:74;;1182:1;-1:-1:-1;;;1182:9:69;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:69:o;1794:262:116:-;1927:4;-1:-1:-1;;;;;;1954:43:116;;-1:-1:-1;;;1954:43:116;;:95;;-1:-1:-1;;;;;;;;;;861:40:63;;;2013:36:116;762:146:63;2705:151:53;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;7903:218:149:-;8009:15;;7987:38;;:21;:38::i;:::-;8035:37;8053:5;:18;;;8035:17;:37::i;:::-;8082:32;8101:5;:12;;;8082:18;:32::i;5189:578:48:-;5272:4;5574:12;5588:23;5623:5;-1:-1:-1;;;;;5615:19:48;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;-1:-1:-1;5669:17:48;;:22;;:56;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5657:103;;;;-1:-1:-1;;;;;;;;;;5730:26:48;;:30;;;5189:578::o;3180:392:53:-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:53;;3394:4;3359:41;;;2060:74:273;2033:18;;3359:41:53;1914:226:273;3303:108:53;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:53;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:53:o;7325:220:149:-;-1:-1:-1;;;;;7402:23:149;;;;:53;;-1:-1:-1;;;;;;7429:26:149;;7450:4;7429:26;7402:53;7398:141;;;7478:50;;-1:-1:-1;;;7478:50:149;;;;;;;;;;;7723:174;-1:-1:-1;;;;;7792:19:149;;7788:103;;7834:46;;-1:-1:-1;;;7834:46:149;;;;;;;;;;;4625:582:53;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:53;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:53;;-1:-1:-1;;;;;2078:55:273;;5121:24:53;;;2060:74:273;2033:18;;5121:24:53;1914:226:273;5041:119:53;-1:-1:-1;5180:10:53;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:53;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:154:273;-1:-1:-1;;;;;93:5:273;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:247;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;607:286::-;665:6;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;760:23;;-1:-1:-1;;;;;;812:32:273;;802:43;;792:71;;859:1;856;849:12;1090:452;1176:6;1184;1192;1200;1253:3;1241:9;1232:7;1228:23;1224:33;1221:53;;;1270:1;1267;1260:12;1221:53;1306:9;1293:23;1283:33;;1363:2;1352:9;1348:18;1335:32;1325:42;;1417:2;1406:9;1402:18;1389:32;1430:31;1455:5;1430:31;:::i;:::-;1090:452;;;;-1:-1:-1;1480:5:273;;1532:2;1517:18;1504:32;;-1:-1:-1;;1090:452:273:o;1729:180::-;1788:6;1841:2;1829:9;1820:7;1816:23;1812:32;1809:52;;;1857:1;1854;1847:12;1809:52;-1:-1:-1;1880:23:273;;1729:180;-1:-1:-1;1729:180:273:o;2392:367::-;2455:8;2465:6;2519:3;2512:4;2504:6;2500:17;2496:27;2486:55;;2537:1;2534;2527:12;2486:55;-1:-1:-1;2560:20:273;;2603:18;2592:30;;2589:50;;;2635:1;2632;2625:12;2589:50;2672:4;2664:6;2660:17;2648:29;;2732:3;2725:4;2715:6;2712:1;2708:14;2700:6;2696:27;2692:38;2689:47;2686:67;;;2749:1;2746;2739:12;2686:67;2392:367;;;;;:::o;2764:505::-;2859:6;2867;2875;2928:2;2916:9;2907:7;2903:23;2899:32;2896:52;;;2944:1;2941;2934:12;2896:52;2980:9;2967:23;2957:33;;3041:2;3030:9;3026:18;3013:32;3068:18;3060:6;3057:30;3054:50;;;3100:1;3097;3090:12;3054:50;3139:70;3201:7;3192:6;3181:9;3177:22;3139:70;:::i;:::-;2764:505;;3228:8;;-1:-1:-1;3113:96:273;;-1:-1:-1;;;;2764:505:273:o;4248:127::-;4309:10;4304:3;4300:20;4297:1;4290:31;4340:4;4337:1;4330:15;4364:4;4361:1;4354:15;4380:253;4452:2;4446:9;4494:4;4482:17;;4529:18;4514:34;;4550:22;;;4511:62;4508:88;;;4576:18;;:::i;:::-;4612:2;4605:22;4380:253;:::o;4638:275::-;4709:2;4703:9;4774:2;4755:13;;-1:-1:-1;;4751:27:273;4739:40;;4809:18;4794:34;;4830:22;;;4791:62;4788:88;;;4856:18;;:::i;:::-;4892:2;4885:22;4638:275;;-1:-1:-1;4638:275:273:o;4918:187::-;4967:4;5000:18;4992:6;4989:30;4986:56;;;5022:18;;:::i;:::-;-1:-1:-1;5088:2:273;5067:15;-1:-1:-1;;5063:29:273;5094:4;5059:40;;4918:187::o;5110:464::-;5153:5;5206:3;5199:4;5191:6;5187:17;5183:27;5173:55;;5224:1;5221;5214:12;5173:55;5260:6;5247:20;5291:49;5307:32;5336:2;5307:32;:::i;:::-;5291:49;:::i;:::-;5365:2;5356:7;5349:19;5411:3;5404:4;5399:2;5391:6;5387:15;5383:26;5380:35;5377:55;;;5428:1;5425;5418:12;5377:55;5493:2;5486:4;5478:6;5474:17;5467:4;5458:7;5454:18;5441:55;5541:1;5516:16;;;5534:4;5512:27;5505:38;;;;5520:7;5110:464;-1:-1:-1;;;5110:464:273:o;5579:1272::-;5718:6;5726;5734;5787:2;5775:9;5766:7;5762:23;5758:32;5755:52;;;5803:1;5800;5793:12;5755:52;5842:9;5829:23;5861:31;5886:5;5861:31;:::i;:::-;5911:5;-1:-1:-1;5967:2:273;5952:18;;5939:32;5990:18;6020:14;;;6017:34;;;6047:1;6044;6037:12;6017:34;6070:22;;;;6126:4;6108:16;;;6104:27;6101:47;;;6144:1;6141;6134:12;6101:47;6172:22;;:::i;:::-;6232:2;6219:16;6210:7;6203:33;6291:2;6287;6283:11;6270:25;6265:2;6256:7;6252:16;6245:51;6342:2;6338;6334:11;6321:25;6371:2;6361:8;6358:16;6355:36;;;6387:1;6384;6377:12;6355:36;6425:45;6462:7;6451:8;6447:2;6443:17;6425:45;:::i;:::-;6420:2;6411:7;6407:16;6400:71;;6517:2;6513;6509:11;6496:25;6546:2;6536:8;6533:16;6530:36;;;6562:1;6559;6552:12;6530:36;6600:45;6637:7;6626:8;6622:2;6618:17;6600:45;:::i;:::-;6595:2;6582:16;;6575:71;-1:-1:-1;6586:7:273;-1:-1:-1;6725:2:273;6710:18;;6697:32;;-1:-1:-1;6741:16:273;;;6738:36;;;6770:1;6767;6760:12;6738:36;;6793:52;6837:7;6826:8;6815:9;6811:24;6793:52;:::i;:::-;6783:62;;;5579:1272;;;;;:::o;6856:250::-;6941:1;6951:113;6965:6;6962:1;6959:13;6951:113;;;7041:11;;;7035:18;7022:11;;;7015:39;6987:2;6980:10;6951:113;;;-1:-1:-1;;7098:1:273;7080:16;;7073:27;6856:250::o;7111:271::-;7153:3;7191:5;7185:12;7218:6;7213:3;7206:19;7234:76;7303:6;7296:4;7291:3;7287:14;7280:4;7273:5;7269:16;7234:76;:::i;:::-;7364:2;7343:15;-1:-1:-1;;7339:29:273;7330:39;;;;7371:4;7326:50;;7111:271;-1:-1:-1;;7111:271:273:o;7387:220::-;7536:2;7525:9;7518:21;7499:4;7556:45;7597:2;7586:9;7582:18;7574:6;7556:45;:::i;8128:315::-;8196:6;8204;8257:2;8245:9;8236:7;8232:23;8228:32;8225:52;;;8273:1;8270;8263:12;8225:52;8312:9;8299:23;8331:31;8356:5;8331:31;:::i;:::-;8381:5;8433:2;8418:18;;;;8405:32;;-1:-1:-1;;;8128:315:273:o;8448:488::-;8501:3;8539:5;8533:12;8566:6;8561:3;8554:19;8592:4;8621;8616:3;8612:14;8605:21;;8660:4;8653:5;8649:16;8683:1;8693:218;8707:6;8704:1;8701:13;8693:218;;;8772:13;;-1:-1:-1;;;;;8768:62:273;8756:75;;8851:12;;;;8886:15;;;;8729:1;8722:9;8693:218;;;-1:-1:-1;8927:3:273;;8448:488;-1:-1:-1;;;;;8448:488:273:o;8941:261::-;9120:2;9109:9;9102:21;9083:4;9140:56;9192:2;9181:9;9177:18;9169:6;9140:56;:::i;9207:248::-;9275:6;9283;9336:2;9324:9;9315:7;9311:23;9307:32;9304:52;;;9352:1;9349;9342:12;9304:52;-1:-1:-1;;9375:23:273;;;9445:2;9430:18;;;9417:32;;-1:-1:-1;9207:248:273:o;9460:315::-;9528:6;9536;9589:2;9577:9;9568:7;9564:23;9560:32;9557:52;;;9605:1;9602;9595:12;9557:52;9641:9;9628:23;9618:33;;9701:2;9690:9;9686:18;9673:32;9714:31;9739:5;9714:31;:::i;:::-;9764:5;9754:15;;;9460:315;;;;;:::o;9780:941::-;9845:3;9883:5;9877:12;9910:6;9905:3;9898:19;9936:4;9965;9960:3;9956:14;9949:21;;10004:4;9997:5;9993:16;10027:1;10037:659;10051:6;10048:1;10045:13;10037:659;;;10110:13;;10217:9;;-1:-1:-1;;;;;10213:18:273;;;10201:31;;10276:11;;;10270:18;10266:27;10252:12;;;10245:49;10317:4;10361:11;;;10355:18;10341:12;;;10334:40;10397:4;10441:11;;;10435:18;10421:12;;;10414:40;10477:4;10521:11;;;10515:18;10501:12;;;10494:40;10557:4;10601:11;;;10595:18;10581:12;;;10574:40;10643:4;10634:14;;;;10671:15;;;;10073:1;10066:9;10037:659;;10726:335;10967:2;10956:9;10949:21;10930:4;10987:68;11051:2;11040:9;11036:18;11028:6;10987:68;:::i;11066:439::-;11119:3;11157:5;11151:12;11184:6;11179:3;11172:19;11210:4;11239;11234:3;11230:14;11223:21;;11278:4;11271:5;11267:16;11301:1;11311:169;11325:6;11322:1;11319:13;11311:169;;;11386:13;;11374:26;;11420:12;;;;11455:15;;;;11347:1;11340:9;11311:169;;11510:743;11683:2;11672:9;11665:21;11728:6;11722:13;11717:2;11706:9;11702:18;11695:41;11790:2;11782:6;11778:15;11772:22;11767:2;11756:9;11752:18;11745:50;11863:2;11855:6;11851:15;11845:22;11838:30;11831:38;11826:2;11815:9;11811:18;11804:66;11646:4;11917:2;11909:6;11905:15;11899:22;11958:4;11952:3;11941:9;11937:19;11930:33;11986:63;12044:3;12033:9;12029:19;12015:12;11986:63;:::i;:::-;11972:77;;12098:3;12090:6;12086:16;12080:23;12173:2;12169:7;12157:9;12149:6;12145:22;12141:36;12134:4;12123:9;12119:20;12112:66;12195:52;12240:6;12224:14;12195:52;:::i;12664:129::-;12749:18;12742:5;12738:30;12731:5;12728:41;12718:69;;12783:1;12780;12773:12;12798:245;12856:6;12909:2;12897:9;12888:7;12884:23;12880:32;12877:52;;;12925:1;12922;12915:12;12877:52;12964:9;12951:23;12983:30;13007:5;12983:30;:::i;13824:383::-;13901:6;13909;13917;13970:2;13958:9;13949:7;13945:23;13941:32;13938:52;;;13986:1;13983;13976:12;13938:52;14022:9;14009:23;13999:33;;14079:2;14068:9;14064:18;14051:32;14041:42;;14133:2;14122:9;14118:18;14105:32;14146:31;14171:5;14146:31;:::i;:::-;14196:5;14186:15;;;13824:383;;;;;:::o;15155:118::-;15241:5;15234:13;15227:21;15220:5;15217:32;15207:60;;15263:1;15260;15253:12;15278:902;15406:6;15414;15422;15430;15438;15491:2;15479:9;15470:7;15466:23;15462:32;15459:52;;;15507:1;15504;15497:12;15459:52;15546:9;15533:23;15565:28;15587:5;15565:28;:::i;:::-;15612:5;-1:-1:-1;15668:2:273;15653:18;;15640:32;15691:18;15721:14;;;15718:34;;;15748:1;15745;15738:12;15718:34;15787:70;15849:7;15840:6;15829:9;15825:22;15787:70;:::i;:::-;15876:8;;-1:-1:-1;15761:96:273;-1:-1:-1;15964:2:273;15949:18;;15936:32;;-1:-1:-1;15980:16:273;;;15977:36;;;16009:1;16006;15999:12;15977:36;;16048:72;16112:7;16101:8;16090:9;16086:24;16048:72;:::i;:::-;15278:902;;;;-1:-1:-1;15278:902:273;;-1:-1:-1;16139:8:273;;16022:98;15278:902;-1:-1:-1;;;15278:902:273:o;16185:743::-;16582:2;16571:9;16564:21;16545:4;16608:68;16672:2;16661:9;16657:18;16649:6;16608:68;:::i;:::-;16724:9;16716:6;16712:22;16707:2;16696:9;16692:18;16685:50;16758:44;16795:6;16787;16758:44;:::i;:::-;16744:58;;16850:9;16842:6;16838:22;16833:2;16822:9;16818:18;16811:50;16878:44;16915:6;16907;16878:44;:::i;16933:309::-;16998:6;17006;17059:2;17047:9;17038:7;17034:23;17030:32;17027:52;;;17075:1;17072;17065:12;17027:52;17111:9;17098:23;17088:33;;17171:2;17160:9;17156:18;17143:32;17184:28;17206:5;17184:28;:::i;17247:275::-;17341:6;17394:2;17382:9;17373:7;17369:23;17365:32;17362:52;;;17410:1;17407;17400:12;17362:52;17442:9;17436:16;17461:31;17486:5;17461:31;:::i;17829:184::-;17899:6;17952:2;17940:9;17931:7;17927:23;17923:32;17920:52;;;17968:1;17965;17958:12;17920:52;-1:-1:-1;17991:16:273;;17829:184;-1:-1:-1;17829:184:273:o;18018:127::-;18079:10;18074:3;18070:20;18067:1;18060:31;18110:4;18107:1;18100:15;18134:4;18131:1;18124:15;18150:127;18211:10;18206:3;18202:20;18199:1;18192:31;18242:4;18239:1;18232:15;18266:4;18263:1;18256:15;18282:128;18349:9;;;18370:11;;;18367:37;;;18384:18;;:::i;18415:799::-;18655:25;;;18643:2;18699;18717:18;;;18710:30;;;18628:18;;;18775:22;;;18595:4;;18854:6;;18828:2;18813:18;;18595:4;18888:300;18902:6;18899:1;18896:13;18888:300;;;18977:6;18964:20;18997:31;19022:5;18997:31;:::i;:::-;-1:-1:-1;;;;;19053:54:273;19041:67;;19163:15;;;;19128:12;;;;18924:1;18917:9;18888:300;;;-1:-1:-1;19205:3:273;18415:799;-1:-1:-1;;;;;;;18415:799:273:o;19219:127::-;19280:10;19275:3;19271:20;19268:1;19261:31;19311:4;19308:1;19301:15;19335:4;19332:1;19325:15;19351:738;19480:6;19488;19496;19504;19512;19565:3;19553:9;19544:7;19540:23;19536:33;19533:53;;;19582:1;19579;19572:12;19533:53;19614:9;19608:16;19633:31;19658:5;19633:31;:::i;:::-;19733:2;19718:18;;19712:25;19683:5;;-1:-1:-1;19746:33:273;19712:25;19746:33;:::i;:::-;19845:2;19830:18;;19824:25;19894:2;19879:18;;19873:25;19798:7;;-1:-1:-1;19824:25:273;-1:-1:-1;19907:33:273;19873:25;19907:33;:::i;:::-;20011:3;19996:19;;19990:26;19959:7;;-1:-1:-1;20025:32:273;19990:26;20025:32;:::i;:::-;20076:7;20066:17;;;19351:738;;;;;;;;:::o;20308:380::-;20387:1;20383:12;;;;20430;;;20451:61;;20505:4;20497:6;20493:17;20483:27;;20451:61;20558:2;20550:6;20547:14;20527:18;20524:38;20521:161;;20604:10;20599:3;20595:20;20592:1;20585:31;20639:4;20636:1;20629:15;20667:4;20664:1;20657:15;20521:161;;20308:380;;;:::o;20693:245::-;20760:6;20813:2;20801:9;20792:7;20788:23;20784:32;20781:52;;;20829:1;20826;20819:12;20781:52;20861:9;20855:16;20880:28;20902:5;20880:28;:::i;21501:125::-;21566:9;;;21587:10;;;21584:36;;;21600:18;;:::i;21631:168::-;21704:9;;;21735;;21752:15;;;21746:22;;21732:37;21722:71;;21773:18;;:::i;21804:127::-;21865:10;21860:3;21856:20;21853:1;21846:31;21896:4;21893:1;21886:15;21920:4;21917:1;21910:15;21936:217;21976:1;22002;21992:132;;22046:10;22041:3;22037:20;22034:1;22027:31;22081:4;22078:1;22071:15;22109:4;22106:1;22099:15;21992:132;-1:-1:-1;22138:9:273;;21936:217::o;22158:197::-;22199:3;22237:5;22231:12;22252:65;22310:6;22305:3;22298:4;22291:5;22287:16;22252:65;:::i;:::-;22333:16;;;;;22158:197;-1:-1:-1;;22158:197:273:o;22489:1948::-;23438:19;23433:3;23426:32;23408:3;23487:6;23481:13;23513:4;23526:73;23592:6;23587:2;23582:3;23578:12;23573:2;23565:6;23561:15;23526:73;:::i;:::-;23663:17;23658:2;23618:16;;;23650:11;;;23643:38;23706:13;;23728:74;23706:13;23780:11;;;23763:15;;;23728:74;:::i;:::-;23867:19;23821:17;;23854:11;;;23847:40;;;;23912:13;;23934:74;23912:13;23994:2;23986:11;;23969:15;;;23934:74;:::i;:::-;24073:17;24068:2;24027:17;;;;24060:11;;;24053:38;24116:13;;24138:74;24116:13;24198:2;24190:11;;24173:15;;;24138:74;:::i;:::-;24277:34;24272:2;24231:17;;;;24264:11;;;24257:55;-1:-1:-1;;;;24336:2:273;24328:11;;24321:26;24363:68;24393:37;24426:2;24418:11;;24410:6;24393:37;:::i;:::-;-1:-1:-1;;;22425:25:273;;22475:2;22466:12;;22360:124;24363:68;24356:75;22489:1948;-1:-1:-1;;;;;;;;22489:1948:273:o;24442:949::-;24790:4;24819:3;24849:2;24838:9;24831:21;24869:45;24910:2;24899:9;24895:18;24887:6;24869:45;:::i;:::-;-1:-1:-1;;;;;25011:15:273;;;25006:2;24991:18;;24984:43;25063:15;;;25058:2;25043:18;;25036:43;-1:-1:-1;;25115:15:273;;;25110:2;25095:18;;25088:43;25180:18;25168:31;;;;25162:3;25147:19;;25140:60;25237:15;;;;25231:3;25216:19;;25209:44;25284:3;25269:19;;25262:35;;;;25328:3;25313:19;;25306:35;;;;25372:3;25357:19;25350:35;;;;24861:53;24442:949;-1:-1:-1;24442:949:273:o;25396:135::-;25435:3;25456:17;;;25453:43;;25476:18;;:::i;:::-;-1:-1:-1;25523:1:273;25512:13;;25396:135::o;25536:358::-;25636:6;25631:3;25624:19;25606:3;25666:66;25658:6;25655:78;25652:98;;;25746:1;25743;25736:12;25652:98;25782:6;25779:1;25775:14;25834:8;25827:5;25820:4;25815:3;25811:14;25798:45;25863:18;;;;25883:4;25859:29;;25536:358;-1:-1:-1;;;25536:358:273:o;25899:745::-;26254:6;26243:9;26236:25;26297:6;26292:2;26281:9;26277:18;26270:34;26354:6;26347:14;26340:22;26335:2;26324:9;26320:18;26313:50;26399:3;26394:2;26383:9;26379:18;26372:31;26217:4;26426:74;26495:3;26484:9;26480:19;26472:6;26464;26426:74;:::i;:::-;26549:9;26541:6;26537:22;26531:3;26520:9;26516:19;26509:51;26577:61;26631:6;26623;26615;26577:61;:::i;:::-;26569:69;25899:745;-1:-1:-1;;;;;;;;;;25899:745:273:o;26649:331::-;26754:9;26765;26807:8;26795:10;26792:24;26789:44;;;26829:1;26826;26819:12;26789:44;26858:6;26848:8;26845:20;26842:40;;;26878:1;26875;26868:12;26842:40;-1:-1:-1;;26904:23:273;;;26949:25;;;;;-1:-1:-1;26649:331:273:o;26985:337::-;-1:-1:-1;;27106:19:273;;27193:11;;;;27224:2;27216:11;;27213:103;;;27286:2;27282:12;;;;27279:1;27275:20;27271:29;;;27263:38;27259:47;;;;26985:337;-1:-1:-1;;26985:337:273:o;28864:543::-;28966:2;28961:3;28958:11;28955:446;;;29002:1;29026:5;29023:1;29016:16;29070:4;29067:1;29057:18;29140:2;29128:10;29124:19;29121:1;29117:27;29111:4;29107:38;29176:4;29164:10;29161:20;29158:47;;;-1:-1:-1;29199:4:273;29158:47;29254:2;29249:3;29245:12;29242:1;29238:20;29232:4;29228:31;29218:41;;29309:82;29327:2;29320:5;29317:13;29309:82;;;29372:17;;;29353:1;29342:13;29309:82;;;29313:3;;;28864:543;;;:::o;29583:1345::-;29709:3;29703:10;29736:18;29728:6;29725:30;29722:56;;;29758:18;;:::i;:::-;29787:97;29877:6;29837:38;29869:4;29863:11;29837:38;:::i;:::-;29831:4;29787:97;:::i;:::-;29939:4;;29996:2;29985:14;;30013:1;30008:663;;;;30715:1;30732:6;30729:89;;;-1:-1:-1;30784:19:273;;;30778:26;30729:89;-1:-1:-1;;29540:1:273;29536:11;;;29532:24;29528:29;29518:40;29564:1;29560:11;;;29515:57;30831:81;;29978:944;;30008:663;28811:1;28804:14;;;28848:4;28835:18;;-1:-1:-1;;30044:20:273;;;30162:236;30176:7;30173:1;30170:14;30162:236;;;30265:19;;;30259:26;30244:42;;30357:27;;;;30325:1;30313:14;;;;30192:19;;30162:236;;;30166:3;30426:6;30417:7;30414:19;30411:201;;;30487:19;;;30481:26;-1:-1:-1;;30570:1:273;30566:14;;;30582:3;30562:24;30558:37;30554:42;30539:58;30524:74;;30411:201;-1:-1:-1;;;;;30658:1:273;30642:14;;;30638:22;30625:36;;-1:-1:-1;29583:1345:273:o;30933:289::-;31064:3;31102:6;31096:13;31118:66;31177:6;31172:3;31165:4;31157:6;31153:17;31118:66;:::i;:::-;31200:16;;;;;30933:289;-1:-1:-1;;30933:289:273:o;32215:454::-;32440:6;32429:9;32422:25;32483:2;32478;32467:9;32463:18;32456:30;32403:4;32509:45;32550:2;32539:9;32535:18;32527:6;32509:45;:::i;:::-;32602:9;32594:6;32590:22;32585:2;32574:9;32570:18;32563:50;32630:33;32656:6;32648;32630:33;:::i;33543:148::-;33631:4;33610:12;;;33624;;;33606:31;;33649:13;;33646:39;;;33665:18;;:::i;33696:338::-;-1:-1:-1;;;;;33875:6:273;33871:55;33860:9;33853:74;33963:2;33958;33947:9;33943:18;33936:30;33834:4;33983:45;34024:2;34013:9;34009:18;34001:6;33983:45;:::i;:::-;33975:53;33696:338;-1:-1:-1;;;;33696:338:273:o;34039:770::-;34124:6;34132;34185:2;34173:9;34164:7;34160:23;34156:32;34153:52;;;34201:1;34198;34191:12;34153:52;34233:9;34227:16;34252:28;34274:5;34252:28;:::i;:::-;34348:2;34333:18;;34327:25;34299:5;;-1:-1:-1;34375:18:273;34364:30;;34361:50;;;34407:1;34404;34397:12;34361:50;34430:22;;34483:4;34475:13;;34471:27;-1:-1:-1;34461:55:273;;34512:1;34509;34502:12;34461:55;34541:2;34535:9;34566:49;34582:32;34611:2;34582:32;:::i;34566:49::-;34638:2;34631:5;34624:17;34678:7;34673:2;34668;34664;34660:11;34656:20;34653:33;34650:53;;;34699:1;34696;34689:12;34650:53;34712:67;34776:2;34771;34764:5;34760:14;34755:2;34751;34747:11;34712:67;:::i;:::-;34798:5;34788:15;;;;;34039:770;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ASSERTER_ROLE()": "bf14d4a9",
    "KPICounter()": "78802654",
    "MAX_QUEUE_LENGTH()": "6e73ba5b",
    "amountPaid(address,uint256)": "b33ec618",
    "assertDataFor(bytes32,bytes32,address)": "93ee663b",
    "assertionConfig(bytes32)": "7b9a9c7f",
    "assertionData(bytes32)": "2a4e1904",
    "assertionDisputedCallback(bytes32)": "d448a4ec",
    "assertionLiveness()": "b75d4e24",
    "assertionPending()": "60a93176",
    "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
    "balanceOf(address)": "70a08231",
    "claimRewards()": "372500ab",
    "collectPaymentOrders()": "c0231ff6",
    "createKPI(bool,uint256[],uint256[])": "bc7d2a33",
    "defaultBond()": "8333cb06",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "depositFeeFunds(uint256)": "64e6bbe5",
    "dequeueStake()": "2979b670",
    "earned(address)": "008cc262",
    "estimateReward(uint256,uint256)": "7e5f43ff",
    "getAssertion(bytes32)": "88302884",
    "getAssertionConfig(bytes32)": "956ae17b",
    "getData(bytes32)": "54f6127f",
    "getKPI(uint256)": "772fd8da",
    "getStakingQueue()": "6315a455",
    "grantModuleRole(bytes32,address)": "6c67e807",
    "grantModuleRoleBatched(bytes32,address[])": "272bbd44",
    "identifier()": "7998a1c4",
    "init(address,(uint256,uint256,string,string),bytes)": "42dfe958",
    "isTrustedForwarder(address)": "572b6c05",
    "oo()": "8921a614",
    "orchestrator()": "b74795d9",
    "outstandingTokenAmount(address)": "2e84db5f",
    "paymentOrders()": "75fa0b76",
    "postAssertion(bytes32,uint256,address,uint256)": "074644e6",
    "registryOfKPIs(uint256)": "3ecd7972",
    "revokeModuleRole(bytes32,address)": "bcb61920",
    "revokeModuleRoleBatched(bytes32,address[])": "24e30270",
    "rewardRate()": "7b0a47ee",
    "rewardsEnd()": "a6d14d69",
    "setDefaultAssertionLiveness(uint64)": "81d09517",
    "setDefaultCurrencyAndBond(address,uint256)": "59be48f2",
    "setMinimumStake(uint256)": "233e9903",
    "setOptimisticOracle(address)": "bf5c3252",
    "setRewards(uint256,uint256)": "654e51e7",
    "stake(uint256)": "a694fc3a",
    "stakingQueue(uint256)": "0fe5bc3b",
    "stakingQueueAmounts(address)": "0dfc4357",
    "stakingToken()": "72f702f3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "title()": "4a79d50c",
    "totalQueuedFunds()": "d701aedb",
    "totalSupply()": "18160ddd",
    "trustedForwarder()": "7da0a877",
    "unstake(uint256)": "2e17de78",
    "url()": "5600f04f",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"funcSig\",\"type\":\"string\"}],\"name\":\"Module_OrchestratorCallbackFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Module__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Module__ERC20PaymentClientBase__InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__Invalidend\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidOrchestratorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPINumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidStakeAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__StakingQueueIsFull\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__UnresolvedAssertionExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidRewardRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidStakingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OnlyCallableByOrchestrator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__CallerNotOO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__CurrencyBondTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidDefaultCurrency\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidDefaultLiveness\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidOOInstance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAsserted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAssertionResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeFundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"KPI_Id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalKPIRewards\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"trancheValues\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"trancheRewards\",\"type\":\"uint256[]\"}],\"name\":\"KPICreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parentOrchestrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"moduleTitle\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"}],\"name\":\"ModuleInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentOrderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"}],\"name\":\"RewardRoundConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsEnd\",\"type\":\"uint256\"}],\"name\":\"RewardSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeDequeued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeEnqueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASSERTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KPICounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_QUEUE_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"amountPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertDataFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"distributed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectPaymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20PaymentClientBase_v1.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_continuous\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"_trancheValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_trancheRewards\",\"type\":\"uint256[]\"}],\"name\":\"createKPI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFeeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dequeueStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"estimateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"internalType\":\"struct IOptimisticOracleIntegrator.DataAssertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"distributed\",\"type\":\"bool\"}],\"internalType\":\"struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"KPInum\",\"type\":\"uint256\"}],\"name\":\"getKPI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"trancheValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"trancheRewards\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ILM_PC_KPIRewarder_v1.KPI\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingQueue\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"grantModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"grantModuleRoleBatched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOrchestrator_v1\",\"name\":\"orchestrator_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct IModule_v1.Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orchestrator\",\"outputs\":[{\"internalType\":\"contract IOrchestrator_v1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"outstandingTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20PaymentClientBase_v1.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetKPI\",\"type\":\"uint256\"}],\"name\":\"postAssertion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registryOfKPIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"revokeModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"revokeModuleRoleBatched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_newLiveness\",\"type\":\"uint64\"}],\"name\":\"setDefaultAssertionLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newBond\",\"type\":\"uint256\"}],\"name\":\"setDefaultCurrencyAndBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumStake\",\"type\":\"uint256\"}],\"name\":\"setMinimumStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOO\",\"type\":\"address\"}],\"name\":\"setOptimisticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingQueueAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalQueuedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"url\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Inverter Network\",\"custom:security-contact\":\"security@inverter.network                          In case of any concerns or findings, please refer to our Security Policy                          at security.inverter.network or email us directly!\",\"details\":\"Extends {LM_PC_Staking_v1} and integrates with {OptimisticOracleIntegrator}          to enable KPI-based reward distribution within the staking manager.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"Module_OrchestratorCallbackFailed(string)\":[{\"params\":{\"funcSig\":\"The signature of the function called.\"}}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"ModuleInitialized(address,string,uint256,uint256)\":{\"params\":{\"majorVersion\":\"The major version of the module.\",\"minorVersion\":\"The minor version of the module.\",\"moduleTitle\":\"The title of the module.\",\"parentOrchestrator\":\"The address of the orchestrator the module is linked to.\"}},\"PaymentOrderAdded(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens the payment consists of.\",\"recipient\":\"The address that will receive the payment.\"}}},\"kind\":\"dev\",\"methods\":{\"amountPaid(address,uint256)\":{\"details\":\"Payment Client will reduce the total amount of tokens it will stock up by the given amount This has to be called by a paymentProcessor\",\"params\":{\"amount\":\"amount of tokens that have been paid out\"}},\"assertDataFor(bytes32,bytes32,address)\":{\"details\":\"Data can be asserted many times with the same combination of arguments, resulting in unique assertionIds. This is because the block.timestamp is included in the claim. The consumer contract must store the returned assertionId identifiers to able to get the information using getData.\",\"params\":{\"asserter\":\"The address doing the asserter. If zero defaults to _msgSender().\",\"data\":\"The data to assert.\",\"dataId\":\"The id of the data to assert.\"},\"returns\":{\"assertionId\":\"The id of the generated Assertion.\"}},\"assertionDisputedCallback(bytes32)\":{\"details\":\"This OptimisticOracleV3 callback function needs to be defined so the OOv3 doesn't revert when it tries to call it.\",\"params\":{\"assertionId\":\"The identifier of the assertion that was disputed.\"}},\"assertionResolvedCallback(bytes32,bool)\":{\"params\":{\"assertedTruthfully\":\"Whether the assertion was resolved as truthful or not.\",\"assertionId\":\"The identifier of the assertion that was resolved.\"}},\"balanceOf(address)\":{\"params\":{\"user\":\"The address of a user that staked\"}},\"claimRewards()\":{\"details\":\"Reaps the rewards collected up to this point for the msg.Sender()\"},\"collectPaymentOrders()\":{\"details\":\"Marks the orders as completed for the client.      The responsibility to fulfill the orders are now in the caller's      hand!\",\"returns\":{\"_0\":\"list of payment orders\",\"_1\":\"total amount of token to pay\"}},\"createKPI(bool,uint256[],uint256[])\":{\"params\":{\"_continuous\":\"Should the tranche rewards be distributed continuously or in steps\",\"_trancheRewards\":\"The rewards to be distributed at completion of each tranche\",\"_trancheValues\":\"The value at which the tranches end\"}},\"depositFeeFunds(uint256)\":{\"params\":{\"amount\":\"The amount to deposit\"}},\"earned(address)\":{\"params\":{\"user\":\"The address of a user that staked\"}},\"estimateReward(uint256,uint256)\":{\"details\":\"this calculation uses the current reward rate and the current totalSupply to calculate the rewardsthe estimated result could be 0 if the estimated rewards are not high enough\",\"params\":{\"amount\":\": how much token are staked\",\"duration\":\": how long the tokens will be staked\"}},\"getAssertion(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"DataAssertion The Assertion.\"}},\"getAssertionConfig(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return\"}},\"getData(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"bool Wether the assertion is resolved.\",\"_1\":\"bytes32 The Assertion Data.\"}},\"getKPI(uint256)\":{\"params\":{\"KPInum\":\"The number of the KPI to return\"}},\"identifier()\":{\"details\":\"The identifier is defined as the keccak256 hash of the module's      abi packed encoded major version, url and title.\",\"returns\":{\"_0\":\"The module's identifier.\"}},\"init(address,(uint256,uint256,string,string),bytes)\":{\"details\":\"CAN be overriden by downstream contract.MUST call `__Module_init()`.\",\"params\":{\"configData\":\"Variable config data for specific module                   implementations.\",\"metadata\":\"The module's metadata.\",\"orchestrator\":\"The module's orchestrator instance.\"}},\"isTrustedForwarder(address)\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator\",\"params\":{\"forwarder\":\"The contract address to be verified.\"},\"returns\":{\"_0\":\"bool Is the given address the trusted forwarder\"}},\"orchestrator()\":{\"returns\":{\"_0\":\"The module's orchestrator.\"}},\"postAssertion(bytes32,uint256,address,uint256)\":{\"details\":\"about the asserter address: any address can be set as asserter, it will be expected to pay for the bond on posting. The bond tokens can also be deposited in the Module and used to pay for itself, but ONLY if the bond token is different from the one being used for staking. If the asserter is set to 0, whomever calls postAssertion will be paying the bond.\",\"params\":{\"assertedValue\":\"The target value that will be asserted and posted as data to the oracle\",\"asserter\":\"The address of the asserter\",\"dataId\":\"The dataId to be posted\",\"targetKPI\":\"The KPI to be used for distribution once the assertion confirms\"},\"returns\":{\"assertionId\":\"The assertionId received for the posted assertion\"}},\"setDefaultAssertionLiveness(uint64)\":{\"params\":{\"_newLiveness\":\"The new liveness in seconds.\"}},\"setDefaultCurrencyAndBond(address,uint256)\":{\"params\":{\"_newBond\":\"The new bond amount.\",\"_newCurrency\":\"The address of the new default currency.\"}},\"setMinimumStake(uint256)\":{\"params\":{\"_minimumStake\":\"The minimum amount\"}},\"setOptimisticOracle(address)\":{\"params\":{\"_newOO\":\"The address of the new OptimisticOracleV3 instance.\"}},\"setRewards(uint256,uint256)\":{\"details\":\"Equally distributes the reward amount over the given time period\",\"params\":{\"amount\":\": how much token should be distributed\",\"duration\":\": how much time it will take to distribute the token\"}},\"stake(uint256)\":{\"details\":\"should tokens already be staked, then the sending address will collect the rewards up until this pointFee on transfer tokens are currently not supported\",\"params\":{\"amount\":\": how much token should be staked\"}},\"title()\":{\"returns\":{\"_0\":\"The module's title.\"}},\"trustedForwarder()\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator\",\"returns\":{\"_0\":\"address The trusted forwarder\"}},\"unstake(uint256)\":{\"details\":\"this function will revert with a Over/Underflow error in case amount is higher than balance\",\"params\":{\"amount\":\": how much token should be unstaked\"}},\"url()\":{\"returns\":{\"_0\":\"The module's URL.\"}},\"version()\":{\"returns\":{\"_0\":\"The module's major version.\",\"_1\":\"The module's minor version.\"}}},\"title\":\"KPI Rewarder Module\",\"version\":1},\"userdoc\":{\"errors\":{\"Module_OrchestratorCallbackFailed(string)\":[{\"notice\":\"Orchestrator_v1 callback triggered failed.\"}],\"Module__CallerNotAuthorized(bytes32,address)\":[{\"notice\":\"Function is only callable by authorized caller.\"}],\"Module__ERC20PaymentClientBase__ArrayLengthMismatch()\":[{\"notice\":\"Given arrays' length mismatch.\"}],\"Module__ERC20PaymentClientBase__CallerNotAuthorized()\":[{\"notice\":\"Function is only callable by authorized address.\"}],\"Module__ERC20PaymentClientBase__InsufficientFunds(address)\":[{\"notice\":\"Insufficient funds to fulfill the payment.\"}],\"Module__ERC20PaymentClientBase__InvalidAmount()\":[{\"notice\":\"Given amount invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidRecipient()\":[{\"notice\":\"Given recipient invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidToken()\":[{\"notice\":\"Given token invalid.\"}],\"Module__ERC20PaymentClientBase__Invalidend()\":[{\"notice\":\"Given end invalid.\"}],\"Module__ERC20PaymentClientBase__TokenTransferFailed()\":[{\"notice\":\"ERC20 token transfer failed.\"}],\"Module__InvalidMetadata()\":[{\"notice\":\"Given metadata invalid.\"}],\"Module__InvalidOrchestratorAddress()\":[{\"notice\":\"Given orchestrator address invalid.\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPINumber()\":[{\"notice\":\"The KPI number is invalid\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues()\":[{\"notice\":\"The values for the tranches are not in ascending order\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths()\":[{\"notice\":\"The number of tranches in the KPI does not match the number of rewards\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidStakeAmount()\":[{\"notice\":\"The stake amount is invalid\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber()\":[{\"notice\":\"The KPI beinge created has either no tranches or too many\"}],\"Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond()\":[{\"notice\":\"The Token used paying the bond cannot be the same that is being staked.\"}],\"Module__LM_PC_KPIRewarder_v1__StakingQueueIsFull()\":[{\"notice\":\"The Queue for new stakers is full\"}],\"Module__LM_PC_KPIRewarder_v1__UnresolvedAssertionExists()\":[{\"notice\":\"An assertion can only by posted if the preceding one is resolved.\"}],\"Module__LM_PC_Staking_v1__InvalidDuration()\":[{\"notice\":\"Given Duration is invalid.\"}],\"Module__LM_PC_Staking_v1__InvalidRewardRate()\":[{\"notice\":\"The calculated Reward rate is too low to be used.\"}],\"Module__LM_PC_Staking_v1__InvalidStakingToken()\":[{\"notice\":\"Given stakinng token address is invalid.\"}],\"Module__OnlyCallableByOrchestrator()\":[{\"notice\":\"Function is only callable by the orchestrator.\"}],\"Module__OptimisticOracleIntegrator__CallerNotOO()\":[{\"notice\":\"Caller is not Optimistic Oracle instance\"}],\"Module__OptimisticOracleIntegrator__CurrencyBondTooLow()\":[{\"notice\":\"Bond given for the specified currency is below minimum\"}],\"Module__OptimisticOracleIntegrator__InvalidDefaultCurrency()\":[{\"notice\":\"Invalid default currency\"}],\"Module__OptimisticOracleIntegrator__InvalidDefaultLiveness()\":[{\"notice\":\"Invalid default liveness\"}],\"Module__OptimisticOracleIntegrator__InvalidOOInstance()\":[{\"notice\":\"Invalid Optimistic Oracle instance\"}]},\"events\":{\"FeeFundsDeposited(address,uint256)\":{\"notice\":\"Event emitted when funds for paying the bonding fee are deposited into the contract\"},\"KPICreated(uint256,uint256,uint256,bool,uint256[],uint256[])\":{\"notice\":\"Event emitted when a KPI is created\"},\"ModuleInitialized(address,string,uint256,uint256)\":{\"notice\":\"Module has been initialized.\"},\"PaymentOrderAdded(address,address,uint256)\":{\"notice\":\"Added a payment order.\"},\"RewardSet(uint256,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a reward is added.\"},\"RewardsDistributed(address,uint256)\":{\"notice\":\"Event emitted when a user receives Rewards.\"},\"StakeDequeued(address,uint256)\":{\"notice\":\"Event emitted when a user stake is dequeued before staking\"},\"StakeEnqueued(address,uint256)\":{\"notice\":\"Event emitted when a user stake is enqueued\"},\"Staked(address,uint256)\":{\"notice\":\"Event emitted when a user stakes an amount.\"},\"Unstaked(address,uint256)\":{\"notice\":\"Event emitted when a user unstakes an amount.\"}},\"kind\":\"user\",\"methods\":{\"amountPaid(address,uint256)\":{\"notice\":\"Notifies the PaymentClient, that tokens have been paid out accordingly\"},\"assertDataFor(bytes32,bytes32,address)\":{\"notice\":\"Asserts data for a specific dataId on behalf of an asserter address.\"},\"assertionDisputedCallback(bytes32)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is disputed.\"},\"assertionResolvedCallback(bytes32,bool)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is resolved.\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens a user staked in this contract\"},\"claimRewards()\":{\"notice\":\"Collects the rewards that are earned up until now\"},\"collectPaymentOrders()\":{\"notice\":\"Collects outstanding payment orders.\"},\"createKPI(bool,uint256[],uint256[])\":{\"notice\":\"Creates a KPI for the Rewarder\"},\"depositFeeFunds(uint256)\":{\"notice\":\"Deposits funds into the contract so it can pay for the oracle bond and fee itself\"},\"dequeueStake()\":{\"notice\":\"Remove a users funds from the staking queue\"},\"earned(address)\":{\"notice\":\"Returns the amount of tokens earned up until now by the current stake of a user\"},\"estimateReward(uint256,uint256)\":{\"notice\":\"Returns a estimation of how much rewards will be earned with the current state of the staking contract\"},\"getAssertion(bytes32)\":{\"notice\":\"For a given assertionId, returns the assserion itself.\"},\"getAssertionConfig(bytes32)\":{\"notice\":\"Returns the Assertion Configuration for a given assertionId\"},\"getData(bytes32)\":{\"notice\":\"For a given assertionId, returns a boolean indicating whether the data is accessible and the data itself.\"},\"getKPI(uint256)\":{\"notice\":\"Returns the KPI with the given number\"},\"getStakingQueue()\":{\"notice\":\"Returns the current queue to stake in the contract\"},\"identifier()\":{\"notice\":\"Returns the module's identifier.\"},\"init(address,(uint256,uint256,string,string),bytes)\":{\"notice\":\"The module's initializer function.\"},\"isTrustedForwarder(address)\":{\"notice\":\"Checks if the provided address is the trusted forwarder\"},\"orchestrator()\":{\"notice\":\"Returns the module's {IOrchestrator_v1} orchestrator instance.\"},\"outstandingTokenAmount(address)\":{\"notice\":\"Returns the total outstanding token payment amount.\"},\"paymentOrders()\":{\"notice\":\"Returns the list of outstanding payment orders.\"},\"postAssertion(bytes32,uint256,address,uint256)\":{\"notice\":\"Posts an assertion to the Optimistic Oracle, specifying the KPI to use and the asserted value\"},\"setDefaultAssertionLiveness(uint64)\":{\"notice\":\"Sets the default time assertions will be open for dispute.\"},\"setDefaultCurrencyAndBond(address,uint256)\":{\"notice\":\"Sets the default currency and amount for the bond.\"},\"setMinimumStake(uint256)\":{\"notice\":\"Sets the minimum amount a user must stake\"},\"setOptimisticOracle(address)\":{\"notice\":\"Sets the OptimisticOracleV3 instance where assertions will be published to.\"},\"setRewards(uint256,uint256)\":{\"notice\":\"Sets the rewards that are to be distributed\"},\"stake(uint256)\":{\"notice\":\"Stake a specified amount of tokens to earn rewards\"},\"title()\":{\"notice\":\"Returns the module's title.\"},\"trustedForwarder()\":{\"notice\":\"Returns the trusted forwarder\"},\"unstake(uint256)\":{\"notice\":\"Unstake a specified amount of tokens and collect rewards\"},\"url()\":{\"notice\":\"Returns the module's URL.\"},\"version()\":{\"notice\":\"Returns the module's version.\"}},\"notice\":\"Provides a mechanism for distributing rewards to stakers based          on Key Performance Indicators (KPIs).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/logicModule/LM_PC_KPIRewarder_v1.sol\":\"LM_PC_KPIRewarder_v1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[\":@aut/=src/modules/authorizer/\",\":@ex/=src/external/\",\":@fm/=src/modules/fundingManager/\",\":@lm/=src/modules/logicModule/\",\":@lm_pc/=src/modules/logicModule/paymentClient/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@pp/=src/modules/paymentProcessor/\",\":@uma/=lib/protocol/packages/core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x14b59e8cd5720c9cd31616450874b462f575bb52b387df2a54dbd26f9a07adf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://082df479035347a88472f330b089b421d798e4bb016f36b46ed80182e188b9ac\",\"dweb:/ipfs/QmZMCdVxCB3Lb5bf98YSF4HZFNShDkyyFg9Mg1s9oeM5ov\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"src/external/fees/interfaces/IFeeManager_v1.sol\":{\"keccak256\":\"0x8b796688609a4d609dc8e68047d4bb5c5195d5bffbb4e599aa2246b6bc10b150\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6c1586ebea82bfe3842072bdb9e05b4a53aac6f6cf87231afebdf08812d1b4ed\",\"dweb:/ipfs/QmRcNwv9uc7f3VQu4H2VBJqVdfDBYbKr7EsS4NzdzKyiif\"]},\"src/external/governance/interfaces/IGovernor_v1.sol\":{\"keccak256\":\"0xef35502692dd70ad27721c630016283e45ab5a9dceeff8937affa3ad5b4d31ee\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://01af25ec4741a71243c8be80793d6f8a68489621b2eadfb626d84194a759bb4e\",\"dweb:/ipfs/QmNPZyJTP8u1kBerLLWBgJa2rtBH1p8vuPQTTs8MrDkQaP\"]},\"src/external/interfaces/IERC2771Context.sol\":{\"keccak256\":\"0xfcc88fc7329ac304efe8c41871d596f0c3fe8f70917214b3a087266bf19ee86b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://47159333bca960cfdf0bd4e9d5e114174cb047477b08ad4e40dce6f956c8980a\",\"dweb:/ipfs/QmbjnnNmXauGRjP1UcMxAYxzb5YXpveL7hQGtr1PHMH4jv\"]},\"src/modules/authorizer/IAuthorizer_v1.sol\":{\"keccak256\":\"0xd15293834879f770e696e68b1f595032f4d1067456fdd3788b7631ee5ebc7e64\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ecd44790587ba3324ba42495dc3900850739f8fba141bbddc71fcc5e1898abab\",\"dweb:/ipfs/Qme7z5gQQiK6i9d8BFSYk7QzHaRnPbXPKDjzfUQTLWDPMG\"]},\"src/modules/base/IModule_v1.sol\":{\"keccak256\":\"0x6b552aed3184961eee51a1e6fde64c6e731400baffde78bbcbb2fee6b8a75e24\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://2df69251ca41b7b9159f083f1e33de73e925b9031206a30d11076c5f6ebe9cf5\",\"dweb:/ipfs/QmWXNZQM42MaBCXEQANyHAS299zK3jfkXwxHjwEDPTJd85\"]},\"src/modules/base/Module_v1.sol\":{\"keccak256\":\"0x039fc19f543ad5ebd43026a767b1a04fa5570f3215300e73448a5402d5fa75e7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8393f8bdf7827f6d46b09fc688049a453ce3d88f23ba14be4d76e2e4f86be978\",\"dweb:/ipfs/QmPt8uXYUAVPPXnBjYJcGKPLUJmjnDV39UYn8eirHwW7Tz\"]},\"src/modules/fundingManager/IFundingManager_v1.sol\":{\"keccak256\":\"0x3eeb41edee9eebfc09b30af9ed67cb84573eb37597b7ad262e4ce2d9e5c2464d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1fbce868b4a5f53a38a3859c8d9299e15bd84cf01e156ba72e91792cebb785cf\",\"dweb:/ipfs/QmRZAejdu6EG7D38vyJF5RH2zCa35B5afoY1XdQmdem9bK\"]},\"src/modules/lib/LibMetadata.sol\":{\"keccak256\":\"0x881141311eb65c4578ab2ad47322ae8fb25b05f8d01e6b8e84571b19f5ee5dd7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c17840e517341910d4d01024dfca4ed0d583b6208202cf1c61bf418c62041817\",\"dweb:/ipfs/QmeHkyuQ2nimJBHFAfpv7T8Zm1maZWiP64uF7AQRZmQwP3\"]},\"src/modules/logicModule/LM_PC_KPIRewarder_v1.sol\":{\"keccak256\":\"0xdfc158eab3c3108a99bc2d12b1e700bdc4cd5ca764709ea632b87c244731e2ce\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e9bb63e7a450b87a3b064d3982d8a215f3574e5881006281dccb59d7756757c7\",\"dweb:/ipfs/QmeKpBixsTDC7RjFYTqBfypdF6wDK3ym9BT3KC21rD5CvD\"]},\"src/modules/logicModule/LM_PC_Staking_v1.sol\":{\"keccak256\":\"0xf381b9d3c880c67651e0298417fe89208df46bc95ac99e0845ba8dce030ad8b0\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://43730c5da13e3fcb1f9c97a6e1eefb09c8f1a273be82b3a8413102d6cd2c916c\",\"dweb:/ipfs/QmXp2fh18SAvuRQMJWS9AmG9DdtANnWikFEJqei1g7jdu4\"]},\"src/modules/logicModule/abstracts/ERC20PaymentClientBase_v1.sol\":{\"keccak256\":\"0x111cccbaf87c10036a4f1c652bd1deae11131bd295e9b912dd18420370de918a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a56b3b1b04477d0703ca95e93b64c6636e3ec8fb7ad475345757db27300b908f\",\"dweb:/ipfs/QmcsgDfEJDpMtch8rYUZERP4DW59wLhooKgFdmiz9o1jtC\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/IOptimisticOracleIntegrator.sol\":{\"keccak256\":\"0xe65fb62cc3aca714658be2eec67bab1d138ffc00283f3163d652e127e0275346\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8bc7934af92d49526b54b4291ece521a709561021a66a3faa4defcf017fa357b\",\"dweb:/ipfs/Qmd71ejUKN6m4op646kAqNxCDHHjLJvGEdKEKPQ2nzgafZ\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/OptimisticOracleIntegrator.sol\":{\"keccak256\":\"0x8d45706912723a212a3d7eab3b4a398aea5c42a73b2ad71012b86e009000becf\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://36d0545f07e947c2e330ebcc3f8bee4ee46a41cd4d92eb6c3de6d48f4f6c265c\",\"dweb:/ipfs/QmVTzF5Ur4U2BA9ur7XLhhWgjDQjqW9vJNiDXiLU1yft3V\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/ClaimData.sol\":{\"keccak256\":\"0x5d45b9b7c9dda945ddc67a56492ef452aee03d30fc664cc4c7e59c81cdc083d2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://16508f23ca4081d89eed67293bf20b528d864c641c2b3f4e57dc74a85502ea13\",\"dweb:/ipfs/QmQtonvp14XWH37gyXwE53JPk7AztTauQ3krWXaYszRZnM\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x277837f95a899f2fc9b91dfd1fe2a7eae635c3daba138cde5bcb01cc500a363b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f7830f10355e9f53b36d5654c7a0271c5012022746da01a809fbaf070ccc04a0\",\"dweb:/ipfs/QmS1jSDeCEMu6hu9KdwsLcBVRBVZ9bKE83Rk6vXknLbZVm\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x49e038afcb5cabc877e56b93f8c6f8a4e44355d04a7bb38f606be39b1c054a3c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c8d7037641f91727a845fff12c534b895e08d45809e571816f7abd690094712\",\"dweb:/ipfs/QmVgDuCytTtMg3bdMWHVHf7DYcfbcYh7VeHU5f6AsTksCp\"]},\"src/modules/logicModule/interfaces/IERC20PaymentClientBase_v1.sol\":{\"keccak256\":\"0x99c48a9556b87a730cddec1f341da11ed36fa618b0e3810deaab8045dc266725\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a313b92e9e8100cd3e9c36b29018954570ff413a61e6d5b2984b0a315a0d1d42\",\"dweb:/ipfs/QmP6uGk6TE4Gm3jEs5iscrbZf4xEjk1ka2jcUCxs9wnWPF\"]},\"src/modules/logicModule/interfaces/ILM_PC_KPIRewarder_v1.sol\":{\"keccak256\":\"0x7bf8a363fc4e76912e7b7c868d11b4c2958126b74b292b858b6a6d17bf74a318\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://033d8c67cc786bc77b17866bf18fb29b4ffc887bfe96fb0494a66ce7bcb989a4\",\"dweb:/ipfs/QmVP5ofZnFKbRCoxo7PZCw9C1s3DDi4xTK1a7APevD8hb9\"]},\"src/modules/logicModule/interfaces/ILM_PC_Staking_v1.sol\":{\"keccak256\":\"0x4d1d6d3838afef7ad4c7482a04d63f3c1fa60d74d4476db2ce6f8ce84946e845\",\"urls\":[\"bzz-raw://813474b0762af95730feed87d1bba2ba14fe298c1da8bdd268a9d868baaa42bd\",\"dweb:/ipfs/QmfDXYv9m13h1GHtuEcVzMmWV1YSwr3c7T54HfNRAhfQRp\"]},\"src/modules/paymentProcessor/IPaymentProcessor_v1.sol\":{\"keccak256\":\"0x30292faef68798aebd70684b1fe29c8ec326687b1f5718878c0c14599b34a852\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://838ed480aafdc1cdd6afae69e98d1b40cf960446411d143576932aa43b455790\",\"dweb:/ipfs/QmcGWZhAuuuFHmhv6GDedWnkbWiBoBFn5NMhD6eQAg89Hg\"]},\"src/orchestrator/interfaces/IModuleManagerBase_v1.sol\":{\"keccak256\":\"0x8fbb094d7c1de91ec9b277253fc4ead5b39b504eca4ca72a197b68d765e77300\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://79c5d48d683418e66195a99065659e01df38e37a94f4656e2f782cec5eedd511\",\"dweb:/ipfs/Qmcbz5ZKyLqmVLqbSJSuugVXx2vfPmM5xsatdo7EeFLw3s\"]},\"src/orchestrator/interfaces/IOrchestrator_v1.sol\":{\"keccak256\":\"0xd2ad3095a78cebfb6a00898b4e5f46905b0baa1d6251df7b8e485299fca52aba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cbb15c4f6566ad79f26e55f37b06f93d7a67f99c848f95b88ed9736bf2999437\",\"dweb:/ipfs/QmW9f22rHGSzUYutMRvPimhBTWSV4qxLZAqdfqUQxh5KcR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "funcSig",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Module_OrchestratorCallbackFailed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module__CallerNotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__CallerNotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InsufficientFunds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__Invalidend"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__TokenTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__InvalidMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__InvalidOrchestratorAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPINumber"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidStakeAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__StakingQueueIsFull"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__UnresolvedAssertionExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v1__InvalidDuration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v1__InvalidRewardRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v1__InvalidStakingToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OnlyCallableByOrchestrator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__CallerNotOO"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__CurrencyBondTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidDefaultCurrency"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidDefaultLiveness"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidOOInstance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAsserted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAssertionResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeFundsDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "KPI_Id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "numOfTranches",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalKPIRewards",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "continuous",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "trancheValues",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "trancheRewards",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "KPICreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "parentOrchestrator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "moduleTitle",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "majorVersion",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minorVersion",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PaymentOrderAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creationTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "assertedValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "KpiToUse",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardRoundConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardRate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsEnd",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeDequeued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeEnqueued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ASSERTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "KPICounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_QUEUE_LENGTH",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "amountPaid"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertDataFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionConfig",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assertedValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "KpiToUse",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "distributed",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionData",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "resolved",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionDisputedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionPending",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionResolvedCallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectPaymentOrders",
          "outputs": [
            {
              "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymentToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cliff",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_continuous",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "_trancheValues",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_trancheRewards",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createKPI",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFeeFunds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "dequeueStake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "earned",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "estimateReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertion",
          "outputs": [
            {
              "internalType": "struct IOptimisticOracleIntegrator.DataAssertion",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "dataId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "asserter",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "resolved",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertionConfig",
          "outputs": [
            {
              "internalType": "struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creationTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assertedValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "KpiToUse",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "distributed",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "KPInum",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKPI",
          "outputs": [
            {
              "internalType": "struct ILM_PC_KPIRewarder_v1.KPI",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numOfTranches",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "continuous",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "trancheValues",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "trancheRewards",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingQueue",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantModuleRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantModuleRoleBatched"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IOrchestrator_v1",
              "name": "orchestrator_",
              "type": "address"
            },
            {
              "internalType": "struct IModule_v1.Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "majorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "url",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "configData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "orchestrator",
          "outputs": [
            {
              "internalType": "contract IOrchestrator_v1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "outstandingTokenAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paymentOrders",
          "outputs": [
            {
              "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymentToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cliff",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assertedValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetKPI",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postAssertion",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "registryOfKPIs",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "numOfTranches",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalRewards",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "continuous",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeModuleRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeModuleRoleBatched"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardsEnd",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_newLiveness",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultAssertionLiveness"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newCurrency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_newBond",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultCurrencyAndBond"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_minimumStake",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinimumStake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOO",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOptimisticOracle"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewards"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingQueue",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingQueueAmounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "title",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalQueuedFunds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "url",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "amountPaid(address,uint256)": {
            "details": "Payment Client will reduce the total amount of tokens it will stock up by the given amount This has to be called by a paymentProcessor",
            "params": {
              "amount": "amount of tokens that have been paid out"
            }
          },
          "assertDataFor(bytes32,bytes32,address)": {
            "details": "Data can be asserted many times with the same combination of arguments, resulting in unique assertionIds. This is because the block.timestamp is included in the claim. The consumer contract must store the returned assertionId identifiers to able to get the information using getData.",
            "params": {
              "asserter": "The address doing the asserter. If zero defaults to _msgSender().",
              "data": "The data to assert.",
              "dataId": "The id of the data to assert."
            },
            "returns": {
              "assertionId": "The id of the generated Assertion."
            }
          },
          "assertionDisputedCallback(bytes32)": {
            "details": "This OptimisticOracleV3 callback function needs to be defined so the OOv3 doesn't revert when it tries to call it.",
            "params": {
              "assertionId": "The identifier of the assertion that was disputed."
            }
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "params": {
              "assertedTruthfully": "Whether the assertion was resolved as truthful or not.",
              "assertionId": "The identifier of the assertion that was resolved."
            }
          },
          "balanceOf(address)": {
            "params": {
              "user": "The address of a user that staked"
            }
          },
          "claimRewards()": {
            "details": "Reaps the rewards collected up to this point for the msg.Sender()"
          },
          "collectPaymentOrders()": {
            "details": "Marks the orders as completed for the client.      The responsibility to fulfill the orders are now in the caller's      hand!",
            "returns": {
              "_0": "list of payment orders",
              "_1": "total amount of token to pay"
            }
          },
          "createKPI(bool,uint256[],uint256[])": {
            "params": {
              "_continuous": "Should the tranche rewards be distributed continuously or in steps",
              "_trancheRewards": "The rewards to be distributed at completion of each tranche",
              "_trancheValues": "The value at which the tranches end"
            }
          },
          "depositFeeFunds(uint256)": {
            "params": {
              "amount": "The amount to deposit"
            }
          },
          "earned(address)": {
            "params": {
              "user": "The address of a user that staked"
            }
          },
          "estimateReward(uint256,uint256)": {
            "details": "this calculation uses the current reward rate and the current totalSupply to calculate the rewardsthe estimated result could be 0 if the estimated rewards are not high enough",
            "params": {
              "amount": ": how much token are staked",
              "duration": ": how long the tokens will be staked"
            }
          },
          "getAssertion(bytes32)": {
            "params": {
              "assertionId": "The id of the Assertion to return."
            },
            "returns": {
              "_0": "DataAssertion The Assertion."
            }
          },
          "getAssertionConfig(bytes32)": {
            "params": {
              "assertionId": "The id of the Assertion to return"
            }
          },
          "getData(bytes32)": {
            "params": {
              "assertionId": "The id of the Assertion to return."
            },
            "returns": {
              "_0": "bool Wether the assertion is resolved.",
              "_1": "bytes32 The Assertion Data."
            }
          },
          "getKPI(uint256)": {
            "params": {
              "KPInum": "The number of the KPI to return"
            }
          },
          "identifier()": {
            "details": "The identifier is defined as the keccak256 hash of the module's      abi packed encoded major version, url and title.",
            "returns": {
              "_0": "The module's identifier."
            }
          },
          "init(address,(uint256,uint256,string,string),bytes)": {
            "details": "CAN be overriden by downstream contract.MUST call `__Module_init()`.",
            "params": {
              "configData": "Variable config data for specific module                   implementations.",
              "metadata": "The module's metadata.",
              "orchestrator": "The module's orchestrator instance."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator",
            "params": {
              "forwarder": "The contract address to be verified."
            },
            "returns": {
              "_0": "bool Is the given address the trusted forwarder"
            }
          },
          "orchestrator()": {
            "returns": {
              "_0": "The module's orchestrator."
            }
          },
          "postAssertion(bytes32,uint256,address,uint256)": {
            "details": "about the asserter address: any address can be set as asserter, it will be expected to pay for the bond on posting. The bond tokens can also be deposited in the Module and used to pay for itself, but ONLY if the bond token is different from the one being used for staking. If the asserter is set to 0, whomever calls postAssertion will be paying the bond.",
            "params": {
              "assertedValue": "The target value that will be asserted and posted as data to the oracle",
              "asserter": "The address of the asserter",
              "dataId": "The dataId to be posted",
              "targetKPI": "The KPI to be used for distribution once the assertion confirms"
            },
            "returns": {
              "assertionId": "The assertionId received for the posted assertion"
            }
          },
          "setDefaultAssertionLiveness(uint64)": {
            "params": {
              "_newLiveness": "The new liveness in seconds."
            }
          },
          "setDefaultCurrencyAndBond(address,uint256)": {
            "params": {
              "_newBond": "The new bond amount.",
              "_newCurrency": "The address of the new default currency."
            }
          },
          "setMinimumStake(uint256)": {
            "params": {
              "_minimumStake": "The minimum amount"
            }
          },
          "setOptimisticOracle(address)": {
            "params": {
              "_newOO": "The address of the new OptimisticOracleV3 instance."
            }
          },
          "setRewards(uint256,uint256)": {
            "details": "Equally distributes the reward amount over the given time period",
            "params": {
              "amount": ": how much token should be distributed",
              "duration": ": how much time it will take to distribute the token"
            }
          },
          "stake(uint256)": {
            "details": "should tokens already be staked, then the sending address will collect the rewards up until this pointFee on transfer tokens are currently not supported",
            "params": {
              "amount": ": how much token should be staked"
            }
          },
          "title()": {
            "returns": {
              "_0": "The module's title."
            }
          },
          "trustedForwarder()": {
            "details": "We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator",
            "returns": {
              "_0": "address The trusted forwarder"
            }
          },
          "unstake(uint256)": {
            "details": "this function will revert with a Over/Underflow error in case amount is higher than balance",
            "params": {
              "amount": ": how much token should be unstaked"
            }
          },
          "url()": {
            "returns": {
              "_0": "The module's URL."
            }
          },
          "version()": {
            "returns": {
              "_0": "The module's major version.",
              "_1": "The module's minor version."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "amountPaid(address,uint256)": {
            "notice": "Notifies the PaymentClient, that tokens have been paid out accordingly"
          },
          "assertDataFor(bytes32,bytes32,address)": {
            "notice": "Asserts data for a specific dataId on behalf of an asserter address."
          },
          "assertionDisputedCallback(bytes32)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is disputed."
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is resolved."
          },
          "balanceOf(address)": {
            "notice": "Returns the amount of tokens a user staked in this contract"
          },
          "claimRewards()": {
            "notice": "Collects the rewards that are earned up until now"
          },
          "collectPaymentOrders()": {
            "notice": "Collects outstanding payment orders."
          },
          "createKPI(bool,uint256[],uint256[])": {
            "notice": "Creates a KPI for the Rewarder"
          },
          "depositFeeFunds(uint256)": {
            "notice": "Deposits funds into the contract so it can pay for the oracle bond and fee itself"
          },
          "dequeueStake()": {
            "notice": "Remove a users funds from the staking queue"
          },
          "earned(address)": {
            "notice": "Returns the amount of tokens earned up until now by the current stake of a user"
          },
          "estimateReward(uint256,uint256)": {
            "notice": "Returns a estimation of how much rewards will be earned with the current state of the staking contract"
          },
          "getAssertion(bytes32)": {
            "notice": "For a given assertionId, returns the assserion itself."
          },
          "getAssertionConfig(bytes32)": {
            "notice": "Returns the Assertion Configuration for a given assertionId"
          },
          "getData(bytes32)": {
            "notice": "For a given assertionId, returns a boolean indicating whether the data is accessible and the data itself."
          },
          "getKPI(uint256)": {
            "notice": "Returns the KPI with the given number"
          },
          "getStakingQueue()": {
            "notice": "Returns the current queue to stake in the contract"
          },
          "identifier()": {
            "notice": "Returns the module's identifier."
          },
          "init(address,(uint256,uint256,string,string),bytes)": {
            "notice": "The module's initializer function."
          },
          "isTrustedForwarder(address)": {
            "notice": "Checks if the provided address is the trusted forwarder"
          },
          "orchestrator()": {
            "notice": "Returns the module's {IOrchestrator_v1} orchestrator instance."
          },
          "outstandingTokenAmount(address)": {
            "notice": "Returns the total outstanding token payment amount."
          },
          "paymentOrders()": {
            "notice": "Returns the list of outstanding payment orders."
          },
          "postAssertion(bytes32,uint256,address,uint256)": {
            "notice": "Posts an assertion to the Optimistic Oracle, specifying the KPI to use and the asserted value"
          },
          "setDefaultAssertionLiveness(uint64)": {
            "notice": "Sets the default time assertions will be open for dispute."
          },
          "setDefaultCurrencyAndBond(address,uint256)": {
            "notice": "Sets the default currency and amount for the bond."
          },
          "setMinimumStake(uint256)": {
            "notice": "Sets the minimum amount a user must stake"
          },
          "setOptimisticOracle(address)": {
            "notice": "Sets the OptimisticOracleV3 instance where assertions will be published to."
          },
          "setRewards(uint256,uint256)": {
            "notice": "Sets the rewards that are to be distributed"
          },
          "stake(uint256)": {
            "notice": "Stake a specified amount of tokens to earn rewards"
          },
          "title()": {
            "notice": "Returns the module's title."
          },
          "trustedForwarder()": {
            "notice": "Returns the trusted forwarder"
          },
          "unstake(uint256)": {
            "notice": "Unstake a specified amount of tokens and collect rewards"
          },
          "url()": {
            "notice": "Returns the module's URL."
          },
          "version()": {
            "notice": "Returns the module's version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aut/=src/modules/authorizer/",
        "@ex/=src/external/",
        "@fm/=src/modules/fundingManager/",
        "@lm/=src/modules/logicModule/",
        "@lm_pc/=src/modules/logicModule/paymentClient/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "@pp/=src/modules/paymentProcessor/",
        "@uma/=lib/protocol/packages/core/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "protocol/=lib/protocol/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 500
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/logicModule/LM_PC_KPIRewarder_v1.sol": "LM_PC_KPIRewarder_v1"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x14b59e8cd5720c9cd31616450874b462f575bb52b387df2a54dbd26f9a07adf8",
        "urls": [
          "bzz-raw://082df479035347a88472f330b089b421d798e4bb016f36b46ed80182e188b9ac",
          "dweb:/ipfs/QmZMCdVxCB3Lb5bf98YSF4HZFNShDkyyFg9Mg1s9oeM5ov"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol": {
        "keccak256": "0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306",
        "urls": [
          "bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3",
          "dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
        "urls": [
          "bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
          "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/fees/interfaces/IFeeManager_v1.sol": {
        "keccak256": "0x8b796688609a4d609dc8e68047d4bb5c5195d5bffbb4e599aa2246b6bc10b150",
        "urls": [
          "bzz-raw://6c1586ebea82bfe3842072bdb9e05b4a53aac6f6cf87231afebdf08812d1b4ed",
          "dweb:/ipfs/QmRcNwv9uc7f3VQu4H2VBJqVdfDBYbKr7EsS4NzdzKyiif"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/external/governance/interfaces/IGovernor_v1.sol": {
        "keccak256": "0xef35502692dd70ad27721c630016283e45ab5a9dceeff8937affa3ad5b4d31ee",
        "urls": [
          "bzz-raw://01af25ec4741a71243c8be80793d6f8a68489621b2eadfb626d84194a759bb4e",
          "dweb:/ipfs/QmNPZyJTP8u1kBerLLWBgJa2rtBH1p8vuPQTTs8MrDkQaP"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/external/interfaces/IERC2771Context.sol": {
        "keccak256": "0xfcc88fc7329ac304efe8c41871d596f0c3fe8f70917214b3a087266bf19ee86b",
        "urls": [
          "bzz-raw://47159333bca960cfdf0bd4e9d5e114174cb047477b08ad4e40dce6f956c8980a",
          "dweb:/ipfs/QmbjnnNmXauGRjP1UcMxAYxzb5YXpveL7hQGtr1PHMH4jv"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/authorizer/IAuthorizer_v1.sol": {
        "keccak256": "0xd15293834879f770e696e68b1f595032f4d1067456fdd3788b7631ee5ebc7e64",
        "urls": [
          "bzz-raw://ecd44790587ba3324ba42495dc3900850739f8fba141bbddc71fcc5e1898abab",
          "dweb:/ipfs/Qme7z5gQQiK6i9d8BFSYk7QzHaRnPbXPKDjzfUQTLWDPMG"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/base/IModule_v1.sol": {
        "keccak256": "0x6b552aed3184961eee51a1e6fde64c6e731400baffde78bbcbb2fee6b8a75e24",
        "urls": [
          "bzz-raw://2df69251ca41b7b9159f083f1e33de73e925b9031206a30d11076c5f6ebe9cf5",
          "dweb:/ipfs/QmWXNZQM42MaBCXEQANyHAS299zK3jfkXwxHjwEDPTJd85"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/base/Module_v1.sol": {
        "keccak256": "0x039fc19f543ad5ebd43026a767b1a04fa5570f3215300e73448a5402d5fa75e7",
        "urls": [
          "bzz-raw://8393f8bdf7827f6d46b09fc688049a453ce3d88f23ba14be4d76e2e4f86be978",
          "dweb:/ipfs/QmPt8uXYUAVPPXnBjYJcGKPLUJmjnDV39UYn8eirHwW7Tz"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/fundingManager/IFundingManager_v1.sol": {
        "keccak256": "0x3eeb41edee9eebfc09b30af9ed67cb84573eb37597b7ad262e4ce2d9e5c2464d",
        "urls": [
          "bzz-raw://1fbce868b4a5f53a38a3859c8d9299e15bd84cf01e156ba72e91792cebb785cf",
          "dweb:/ipfs/QmRZAejdu6EG7D38vyJF5RH2zCa35B5afoY1XdQmdem9bK"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/lib/LibMetadata.sol": {
        "keccak256": "0x881141311eb65c4578ab2ad47322ae8fb25b05f8d01e6b8e84571b19f5ee5dd7",
        "urls": [
          "bzz-raw://c17840e517341910d4d01024dfca4ed0d583b6208202cf1c61bf418c62041817",
          "dweb:/ipfs/QmeHkyuQ2nimJBHFAfpv7T8Zm1maZWiP64uF7AQRZmQwP3"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/LM_PC_KPIRewarder_v1.sol": {
        "keccak256": "0xdfc158eab3c3108a99bc2d12b1e700bdc4cd5ca764709ea632b87c244731e2ce",
        "urls": [
          "bzz-raw://e9bb63e7a450b87a3b064d3982d8a215f3574e5881006281dccb59d7756757c7",
          "dweb:/ipfs/QmeKpBixsTDC7RjFYTqBfypdF6wDK3ym9BT3KC21rD5CvD"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/LM_PC_Staking_v1.sol": {
        "keccak256": "0xf381b9d3c880c67651e0298417fe89208df46bc95ac99e0845ba8dce030ad8b0",
        "urls": [
          "bzz-raw://43730c5da13e3fcb1f9c97a6e1eefb09c8f1a273be82b3a8413102d6cd2c916c",
          "dweb:/ipfs/QmXp2fh18SAvuRQMJWS9AmG9DdtANnWikFEJqei1g7jdu4"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/ERC20PaymentClientBase_v1.sol": {
        "keccak256": "0x111cccbaf87c10036a4f1c652bd1deae11131bd295e9b912dd18420370de918a",
        "urls": [
          "bzz-raw://a56b3b1b04477d0703ca95e93b64c6636e3ec8fb7ad475345757db27300b908f",
          "dweb:/ipfs/QmcsgDfEJDpMtch8rYUZERP4DW59wLhooKgFdmiz9o1jtC"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/IOptimisticOracleIntegrator.sol": {
        "keccak256": "0xe65fb62cc3aca714658be2eec67bab1d138ffc00283f3163d652e127e0275346",
        "urls": [
          "bzz-raw://8bc7934af92d49526b54b4291ece521a709561021a66a3faa4defcf017fa357b",
          "dweb:/ipfs/Qmd71ejUKN6m4op646kAqNxCDHHjLJvGEdKEKPQ2nzgafZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/OptimisticOracleIntegrator.sol": {
        "keccak256": "0x8d45706912723a212a3d7eab3b4a398aea5c42a73b2ad71012b86e009000becf",
        "urls": [
          "bzz-raw://36d0545f07e947c2e330ebcc3f8bee4ee46a41cd4d92eb6c3de6d48f4f6c265c",
          "dweb:/ipfs/QmVTzF5Ur4U2BA9ur7XLhhWgjDQjqW9vJNiDXiLU1yft3V"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/ClaimData.sol": {
        "keccak256": "0x5d45b9b7c9dda945ddc67a56492ef452aee03d30fc664cc4c7e59c81cdc083d2",
        "urls": [
          "bzz-raw://16508f23ca4081d89eed67293bf20b528d864c641c2b3f4e57dc74a85502ea13",
          "dweb:/ipfs/QmQtonvp14XWH37gyXwE53JPk7AztTauQ3krWXaYszRZnM"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x277837f95a899f2fc9b91dfd1fe2a7eae635c3daba138cde5bcb01cc500a363b",
        "urls": [
          "bzz-raw://f7830f10355e9f53b36d5654c7a0271c5012022746da01a809fbaf070ccc04a0",
          "dweb:/ipfs/QmS1jSDeCEMu6hu9KdwsLcBVRBVZ9bKE83Rk6vXknLbZVm"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0x49e038afcb5cabc877e56b93f8c6f8a4e44355d04a7bb38f606be39b1c054a3c",
        "urls": [
          "bzz-raw://0c8d7037641f91727a845fff12c534b895e08d45809e571816f7abd690094712",
          "dweb:/ipfs/QmVgDuCytTtMg3bdMWHVHf7DYcfbcYh7VeHU5f6AsTksCp"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/IERC20PaymentClientBase_v1.sol": {
        "keccak256": "0x99c48a9556b87a730cddec1f341da11ed36fa618b0e3810deaab8045dc266725",
        "urls": [
          "bzz-raw://a313b92e9e8100cd3e9c36b29018954570ff413a61e6d5b2984b0a315a0d1d42",
          "dweb:/ipfs/QmP6uGk6TE4Gm3jEs5iscrbZf4xEjk1ka2jcUCxs9wnWPF"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/ILM_PC_KPIRewarder_v1.sol": {
        "keccak256": "0x7bf8a363fc4e76912e7b7c868d11b4c2958126b74b292b858b6a6d17bf74a318",
        "urls": [
          "bzz-raw://033d8c67cc786bc77b17866bf18fb29b4ffc887bfe96fb0494a66ce7bcb989a4",
          "dweb:/ipfs/QmVP5ofZnFKbRCoxo7PZCw9C1s3DDi4xTK1a7APevD8hb9"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/ILM_PC_Staking_v1.sol": {
        "keccak256": "0x4d1d6d3838afef7ad4c7482a04d63f3c1fa60d74d4476db2ce6f8ce84946e845",
        "urls": [
          "bzz-raw://813474b0762af95730feed87d1bba2ba14fe298c1da8bdd268a9d868baaa42bd",
          "dweb:/ipfs/QmfDXYv9m13h1GHtuEcVzMmWV1YSwr3c7T54HfNRAhfQRp"
        ],
        "license": null
      },
      "src/modules/paymentProcessor/IPaymentProcessor_v1.sol": {
        "keccak256": "0x30292faef68798aebd70684b1fe29c8ec326687b1f5718878c0c14599b34a852",
        "urls": [
          "bzz-raw://838ed480aafdc1cdd6afae69e98d1b40cf960446411d143576932aa43b455790",
          "dweb:/ipfs/QmcGWZhAuuuFHmhv6GDedWnkbWiBoBFn5NMhD6eQAg89Hg"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/orchestrator/interfaces/IModuleManagerBase_v1.sol": {
        "keccak256": "0x8fbb094d7c1de91ec9b277253fc4ead5b39b504eca4ca72a197b68d765e77300",
        "urls": [
          "bzz-raw://79c5d48d683418e66195a99065659e01df38e37a94f4656e2f782cec5eedd511",
          "dweb:/ipfs/Qmcbz5ZKyLqmVLqbSJSuugVXx2vfPmM5xsatdo7EeFLw3s"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/orchestrator/interfaces/IOrchestrator_v1.sol": {
        "keccak256": "0xd2ad3095a78cebfb6a00898b4e5f46905b0baa1d6251df7b8e485299fca52aba",
        "urls": [
          "bzz-raw://cbb15c4f6566ad79f26e55f37b06f93d7a67f99c848f95b88ed9736bf2999437",
          "dweb:/ipfs/QmW9f22rHGSzUYutMRvPimhBTWSV4qxLZAqdfqUQxh5KcR"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 145
}
