{
  "abi": [
    {
      "type": "function",
      "name": "ASSERTER_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "KPICounter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "amountPaid",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertDataFor",
      "inputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "data_",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertionConfig",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "creationTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "assertedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "KpiToUse",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "distributed",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionData",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "resolved",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionDisputedCallback",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertionLiveness",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionPending",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionResolvedCallback",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "assertedTruthfully",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimRewards",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "collectPaymentOrders",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
          "components": [
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymentToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "start",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cliff",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "end",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createKPI",
      "inputs": [
        {
          "name": "_continuous",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "_trancheValues",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "_trancheRewards",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "defaultBond",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultCurrency",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultIdentifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deleteStuckAssertion",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depositFeeFunds",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "earned",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "estimateReward",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "duration",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAssertion",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IOptimisticOracleIntegrator.DataAssertion",
          "components": [
            {
              "name": "dataId",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "data",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "asserter",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "resolved",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAssertionConfig",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration",
          "components": [
            {
              "name": "creationTime",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "assertedValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "KpiToUse",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "distributed",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getData",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKPI",
      "inputs": [
        {
          "name": "KPInum",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ILM_PC_KPIRewarder_v1.KPI",
          "components": [
            {
              "name": "numOfTranches",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "totalRewards",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "continuous",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "trancheValues",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "trancheRewards",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantModuleRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grantModuleRoleBatched",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "identifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "init",
      "inputs": [
        {
          "name": "orchestrator_",
          "type": "address",
          "internalType": "contract IOrchestrator_v1"
        },
        {
          "name": "metadata",
          "type": "tuple",
          "internalType": "struct IModule_v1.Metadata",
          "components": [
            {
              "name": "majorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "patchVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "url",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "title",
              "type": "string",
              "internalType": "string"
            }
          ]
        },
        {
          "name": "configData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oo",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract OptimisticOracleV3Interface"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "orchestrator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IOrchestrator_v1"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "outstandingTokenAmount",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paymentOrders",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
          "components": [
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymentToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "start",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cliff",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "end",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "postAssertion",
      "inputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "assertedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "asserter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "targetKPI",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registryOfKPIs",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "numOfTranches",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalRewards",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "continuous",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "revokeModuleRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeModuleRoleBatched",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rewardRate",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rewardsEnd",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setDefaultAssertionLiveness",
      "inputs": [
        {
          "name": "_newLiveness",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDefaultCurrencyAndBond",
      "inputs": [
        {
          "name": "_newCurrency",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_newBond",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOptimisticOracle",
      "inputs": [
        {
          "name": "_newOO",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRewards",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "duration",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "stake",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "stakingToken",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "title",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unstake",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "url",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "DataAsserted",
      "inputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DataAssertionResolved",
      "inputs": [
        {
          "name": "assertedTruthfully",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "dataId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DeletedStuckAssertion",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FeeFundsDeposited",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KPICreated",
      "inputs": [
        {
          "name": "KPI_Id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "numOfTranches",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "totalKPIRewards",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "continuous",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "trancheValues",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "trancheRewards",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModuleInitialized",
      "inputs": [
        {
          "name": "parentOrchestrator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadata",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IModule_v1.Metadata",
          "components": [
            {
              "name": "majorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "patchVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "url",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "title",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PaymentOrderAdded",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardRoundConfigured",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "creationTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "assertedValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "KpiToUse",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardSet",
      "inputs": [
        {
          "name": "rewardAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "duration",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newRewardRate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newRewardsEnd",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsDistributed",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Staked",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakingTokenSet",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unstaked",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Updated",
      "inputs": [
        {
          "name": "triggerAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "rewardValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "lastUpdate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "earnedRewards",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "FailedInnerCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module_OrchestratorCallbackFailed",
      "inputs": [
        {
          "name": "funcSig",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module__CallerNotAuthorized",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "caller",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__ArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__CallerNotAuthorized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InsufficientFunds",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidPaymentOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidRecipient",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidToken",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__Invalidend",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__TokenTransferFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__InvalidAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__InvalidMetadata",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__InvalidOrchestratorAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__AssertionNotStuck",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__CannotStakeWhenAssertionPending",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPINumber",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__NonExistentAssertionId",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v1__UnresolvedAssertionExists",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v1__InvalidDuration",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v1__InvalidRewardRate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v1__InvalidStakingToken",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OnlyCallableByOrchestrator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OnlyCallableByPaymentClient",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator_InsufficientFundsToPayForBond",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__CallerNotOO",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__CurrencyBondTooLow",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidDefaultCurrency",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidDefaultLiveness",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidOOInstance",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060006080526200002162000027565b620000db565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000785760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d85780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051615e72620000f460003960005050615e726000f3fe608060405234801561001057600080fd5b50600436106103565760003560e01c806378802654116101c8578063a6d14d6911610104578063bf14d4a9116100a2578063d448a4ec1161007c578063d448a4ec1461093f578063d509b01714610950578063e31ae42114610959578063f1b156b21461096c57600080fd5b8063bf14d4a9146108ee578063bf5c325214610915578063c0231ff61461092857600080fd5b8063b74795d9116100de578063b74795d914610883578063b75d4e2414610894578063bc7d2a33146108c8578063bcb61920146108db57600080fd5b8063a6d14d6914610854578063b33ec6181461085d578063b66a870c1461087057600080fd5b806381d09517116101715780638921a6141161014b5780638921a614146107d357806393ee663b146107e6578063956ae17b146107f9578063a694fc3a1461084157600080fd5b806381d09517146106f25780638333cb0614610705578063883028841461070e57600080fd5b80637b9a9c7f116101a25780637b9a9c7f1461067d5780637da0a877146106d75780637e5f43ff146106df57600080fd5b806378802654146106635780637998a1c41461066c5780637b0a47ee1461067457600080fd5b806354f6127f1161029757806364e6bbe51161024057806370a082311161021a57806370a08231146105f257806372f702f31461061b57806375fa0b761461062e578063772fd8da1461064357600080fd5b806364e6bbe5146105b9578063654e51e7146105cc5780636c67e807146105df57600080fd5b8063572b6c0511610271578063572b6c051461058657806359be48f21461059957806360a93176146105ac57600080fd5b806354f6127f1461053057806354fd4d501461055a5780635600f04f1461057e57600080fd5b8063272bbd44116103045780632e84db5f116102de5780632e84db5f1461049b578063372500ab146104c45780633ecd7972146104cc5780634a79d50c1461051b57600080fd5b8063272bbd44146104005780632a4e1904146104135780632e17de781461048857600080fd5b806318160ddd1161033557806318160ddd146103b757806320402e1d146103c057806324e30270146103eb57600080fd5b80628cc2621461035b57806301ffc9a714610381578063074644e6146103a4575b600080fd5b61036e610369366004614f19565b61097f565b6040519081526020015b60405180910390f35b61039461038f366004614f36565b610998565b6040519015158152602001610378565b61036e6103b2366004614f60565b6109d8565b61036e606d5481565b60a7546103d3906001600160a01b031681565b6040516001600160a01b039091168152602001610378565b6103fe6103f9366004614feb565b610c40565b005b6103fe61040e366004614feb565b610ea4565b610457610421366004615037565b60ab602052600090815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b604051610378949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6103fe610496366004615037565b61107e565b61036e6104a9366004614f19565b6001600160a01b031660009081526039602052604090205490565b6103fe611197565b6104fe6104da366004615037565b60df6020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610378565b6105236111e9565b60405161037891906150a0565b61054361053e366004615037565b61127e565b604080519215158352602083019190915201610378565b60015460025460035460408051938452602084019290925290820152606001610378565b6105236112c5565b610394610594366004614f19565b6112d7565b6103fe6105a73660046150b3565b611346565b60e1546103949060ff1681565b6103fe6105c7366004615037565b611400565b6103fe6105da3660046150df565b6114e8565b6103fe6105ed366004615101565b61153d565b61036e610600366004614f19565b6001600160a01b031660009081526072602052604090205490565b606c546103d3906001600160a01b031681565b610636611753565b60405161037891906151b9565b610656610651366004615037565b6117f6565b60405161037891906151fd565b61036e60de5481565b61036e611916565b61036e606e5481565b6106b561068b366004615037565b60e06020526000908152604090208054600182015460028301546003909301549192909160ff1684565b6040805194855260208501939093529183015215156060820152608001610378565b6103d3611a74565b61036e6106ed3660046150df565b611aec565b6103fe61070036600461526c565b611ba8565b61036e60a85481565b61079561071c366004615037565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260ab6020908152604091829020825160808101845281548152600182015492810192909252600201546001600160a01b03811692820192909252600160a01b90910460ff161515606082015290565b604051610378919081518152602080830151908201526040808301516001600160a01b03169082015260609182015115159181019190915260800190565b60a9546103d3906001600160a01b031681565b61036e6107f4366004615289565b611bfc565b61080c610807366004615037565b612024565b604051610378919081518152602080830151908201526040808301519082015260609182015115159181019190915260800190565b6103fe61084f366004615037565b61209b565b61036e606f5481565b6103fe61086b3660046150b3565b61212a565b6103fe61087e3660046153b2565b612188565b6000546001600160a01b03166103d3565b60a9546108af90600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610378565b61036e6108d63660046154a6565b6122ee565b6103fe6108e9366004615101565b6125ae565b61036e7f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba81565b6103fe610923366004614f19565b612790565b6109306127e4565b60405161037893929190615529565b6103fe61094d366004615037565b50565b61036e60aa5481565b6103fe610967366004615037565b612ca3565b6103fe61097a36600461559c565b612ed1565b60006109928261098d6131c9565b613231565b92915050565b60006001600160e01b03198216630de8208b60e41b14806109c957506001600160e01b031982166363a1750b60e01b145b806109925750610992826132a0565b60007f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba610af260008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7391906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f906044015b602060405180830381865afa158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae591906155de565b610aed6132e0565b613332565b60e15460ff1615610b1657604051631d0f767960e31b815260040160405180910390fd5b6001600160a01b03841630148015610b3e5750606c5460a7546001600160a01b039081169116145b15610b5c576040516357ee800b60e11b815260040160405180910390fd5b60de541580610b6d575060de548310155b15610b8b5760405163b88c02af60e01b815260040160405180910390fd5b610b96868686611bfc565b604080516080810182524280825260208083018a815283850189815260006060860181815288825260e08552908790209551865591516001860155516002850155516003909301805460ff1916931515939093179092558251908152908101889052919350849184917f2f7b2bd564a62db13a01d975e329f0cd4b96b6e435fd4114d8e25ab72a349f43910160405180910390a35060e1805460ff19166001179055949350505050565b600080546040805163d09edf3160e01b815290518693926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f90604401602060405180830381865afa158015610cfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2091906155de565b9050610dc760008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a91906155c1565b6001600160a01b031663248a9ca3836040518263ffffffff1660e01b8152600401610aa491815260200190565b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3c91906155c1565b6001600160a01b0316637d540a648686866040518463ffffffff1660e01b8152600401610e6b939291906155f7565b600060405180830381600087803b158015610e8557600080fd5b505af1158015610e99573d6000803e3d6000fd5b505050505050505050565b600080546040805163d09edf3160e01b815290518693926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1391906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f90604401602060405180830381865afa158015610f60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8491906155de565b9050610fda60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d76573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa15801561102b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104f91906155c1565b6001600160a01b031663648154538686866040518463ffffffff1660e01b8152600401610e6b939291906155f7565b611086613449565b8061109081613493565b600061109a6132e0565b90506110a5816134b4565b6001600160a01b038116600090815260726020526040812080548592906110cd908490615665565b9250508190555082606d60008282546110e69190615665565b9091555050606c54611102906001600160a01b03168285613572565b6001600160a01b0381166000908152607460205260409020541561112957611129816135d6565b806001600160a01b03167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758460405161116491815260200190565b60405180910390a2505061094d60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b61119f613449565b60006111a96132e0565b90506111b4816134b4565b6111bd816135d6565b506111e760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b565b6060600160040180546111fb90615678565b80601f016020809104026020016040519081016040528092919081815260200182805461122790615678565b80156112745780601f1061124957610100808354040283529160200191611274565b820191906000526020600020905b81548152906001019060200180831161125757829003601f168201915b5050505050905090565b600081815260ab60205260408120600201548190600160a01b900460ff166112ab57506000928392509050565b5050600090815260ab602052604090206001908101549091565b6060600160030180546111fb90615678565b6000805460405163572b6c0560e01b81526001600160a01b0384811660048301529091169063572b6c0590602401602060405180830381865afa158015611322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099291906156c2565b6000546040805163d09edf3160e01b815290516113f2926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b591906155c1565b6001600160a01b031663b3ecf2366040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ac1573d6000803e3d6000fd5b6113fc828261381f565b5050565b6000546040805163d09edf3160e01b8152905161144b926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b611453613449565b8061145d81613493565b61147c6114686132e0565b60a7546001600160a01b03169030856138fa565b60a7546040518381526001600160a01b03909116907f643b1bd5b160e780fef319c0a18a3535edb10da7f7136320b2935bb6f1a9f6059060200160405180910390a25061094d60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6000546040805163d09edf3160e01b81529051611533926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b6113fc8282613939565b600080546040805163d09edf3160e01b815290518593926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ac91906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f90604401602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d91906155de565b905061167360008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d76573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e891906155c1565b60405163385e205560e21b8152600481018690526001600160a01b038581166024830152919091169063e1788154906044015b600060405180830381600087803b15801561173557600080fd5b505af1158015611749573d6000803e3d6000fd5b5050505050505050565b60606038805480602002602001604051908101604052809291908181526020016000905b828210156117ed5760008481526020908190206040805160c0810182526006860290920180546001600160a01b0390811684526001808301549091168486015260028201549284019290925260038101546060840152600481015460808401526005015460a08301529083529092019101611777565b50505050905090565b61182a6040518060a00160405280600081526020016000815260200160001515815260200160608152602001606081525090565b600082815260df6020908152604091829020825160a08101845281548152600182015481840152600282015460ff1615158185015260038201805485518186028101860190965280865291949293606086019392908301828280156118ae57602002820191906000526020600020905b81548152602001906001019080831161189a575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561190657602002820191906000526020600020905b8154815260200190600101908083116118f2575b5050505050815250509050919050565b6000611a6f60016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201805461195690615678565b80601f016020809104026020016040519081016040528092919081815260200182805461198290615678565b80156119cf5780601f106119a4576101008083540402835291602001916119cf565b820191906000526020600020905b8154815290600101906020018083116119b257829003601f168201915b505050505081526020016004820180546119e890615678565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1490615678565b8015611a615780601f10611a3657610100808354040283529160200191611a61565b820191906000526020600020905b815481529060010190602001808311611a4457829003601f168201915b505050505081525050613a4c565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b0316637da0a8776040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6f91906155c1565b600082611af881613493565b8280600003611b1a57604051630e05ce7960e41b815260040160405180910390fd5b606f54421115611b2d5760009250611ba0565b606f54611b3a85426156ea565b1115611b515742606f54611b4e9190615665565b93505b606d54600003611b7957606e54611b6885876156fd565b611b7291906156fd565b9250611ba0565b606d54606e54611b8986886156fd565b611b9391906156fd565b611b9d919061572a565b92505b505092915050565b6000546040805163d09edf3160e01b81529051611bf3926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b61094d81613a8c565b60007f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba611c7360008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4f573d6000803e3d6000fd5b6001600160a01b03831615611c885782611c90565b611c906132e0565b9250306001600160a01b03841603611d355760a85460a7546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1191906155de565b1015611d3057604051635ad9961b60e01b815260040160405180910390fd5b611e43565b60a75460a854604080516001600160a01b03878116602483015230604483015260648083019490945282518083039094018452608490910182526020830180516001600160e01b03166323b872dd60e01b17905290516000938493921691611d9c91615768565b6000604051808303816000865af19150503d8060008114611dd9576040519150601f19603f3d011682016040523d82523d6000602084013e611dde565b606091505b5091509150811580611e0d575060008151118015611e0d575080806020019051810190611e0b91906156c2565b155b80611e22575060a7546001600160a01b03163b155b15611e4057604051635ad9961b60e01b815260040160405180910390fd5b50505b60a95460a85460a754611e64926001600160a01b0391821692911690613afb565b60a9546001600160a01b0316636457c979611e7e86613b85565b611e8788613b85565b611e9087613bc6565b611e9942613c3e565b611ea230613bc6565b604051602001611eb6959493929190615784565b60408051808303601f190181529082905260a95460a75460a85460aa5460e087901b6001600160e01b0319168652611f18958b943094600094600160a01b90920467ffffffffffffffff16936001600160a01b039091169285906004016158e2565b6020604051808303816000875af1158015611f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5b91906155de565b6040805160808101825287815260208082018881526001600160a01b0380891684860181815260006060870181815289825260ab909652879020955186559251600186015591516002909401805493511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199094169490911693909317919091179091559051919350839187907f29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec906120149089815260200190565b60405180910390a4509392505050565b61205160405180608001604052806000815260200160008152602001600081526020016000151581525090565b50600090815260e0602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff161515606082015290565b6120a3613449565b806120ad81613493565b60e15460ff16156120d15760405163ee0a20ad60e01b815260040160405180910390fd5b60006120db6132e0565b90506120e78184613d82565b606c546120ff906001600160a01b03168230866138fa565b505061094d60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b61213a6121356132e0565b613e33565b6121575760405163e4597a6b60e01b815260040160405180910390fd5b6001600160a01b0382166000908152603960205260408120805483929061217f908490615665565b90915550505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156121d35750825b905060008267ffffffffffffffff1660011480156121f05750303b155b9050811580156121fe575080155b1561221c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561225057845468ff00000000000000001916680100000000000000001785555b61225a8888613eb3565b60008060008060008a806020019051810190612276919061595b565b9450945094509450945061228985613fa1565b61229584848484613fb2565b5050505050831561174957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050505050505050565b600080546040805163d09edf3160e01b8152905161233a926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b83600181108061234a5750601481115b156123685760405163036da02f60e61b815260040160405180910390fd5b80831461238857604051631166f7c560e31b815260040160405180910390fd5b60008484600081811061239d5761239d6159c6565b90506020020135905060018211156124465760015b82811015612444578787828181106123cc576123cc6159c6565b9050602002013588886001846123e29190615665565b8181106123f1576123f16159c6565b90506020020135106124165760405163458f641360e11b815260040160405180910390fd5b858582818110612428576124286159c6565b905060200201358261243a91906156ea565b91506001016123b2565b505b600060de5490506040518060a001604052808481526020018381526020018a1515815260200189898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060408051602089810282810182019093528982529283019290918a918a918291850190849080828437600092018290525093909452505083815260df6020908152604091829020845181558482015160018201559184015160028301805460ff19169115159190911790556060840151805192935061252a9260038501929190910190614e3b565b5060808201518051612546916004840191602090910190614e3b565b505060de805491506000612559836159dc565b9190505550807fc1063bd63d477506eb51343042d915c0d3377b74bb787bc0f4d255ca1a7039b684848c8c8c8c8c60405161259a9796959493929190615a40565b60405180910390a298975050505050505050565b600080546040805163d09edf3160e01b815290518593926001600160a01b03169163d09edf319160048083019260209291908290030181865afa1580156125f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261d91906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f90604401602060405180830381865afa15801561266a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268e91906155de565b90506126e460008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d76573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015612735573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275991906155c1565b604051632e99be7f60e21b8152600481018690526001600160a01b038581166024830152919091169063ba66f9fc9060440161171b565b6000546040805163d09edf3160e01b815290516127db926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b61094d81613fd6565b60608060606127f46121356132e0565b6128115760405163e4597a6b60e01b815260040160405180910390fd5b6038546000808267ffffffffffffffff811115612830576128306152c2565b604051908082528060200260200182016040528015612859578160200160208202803683370190505b50905060008367ffffffffffffffff811115612877576128776152c2565b6040519080825280602002602001820160405280156128a0578160200160208202803683370190505b50905060008467ffffffffffffffff8111156128be576128be6152c2565b60405190808252806020026020018201604052801561293a57816020015b6129276040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816128dc5790505b50905060005b85811015612b14576038818154811061295b5761295b6159c6565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03908116845260018201541693830193909352600283015490820152600382015460608201526004820154608082015260059091015460a082015282518390839081106129d0576129d06159c6565b60200260200101819052506000805b86811015612a47578383815181106129f9576129f96159c6565b6020026020010151602001516001600160a01b0316868281518110612a2057612a206159c6565b60200260200101516001600160a01b031603612a3f5760019150612a47565b6001016129df565b5080612b0b57828281518110612a5f57612a5f6159c6565b602002602001015160200151858781518110612a7d57612a7d6159c6565b60200260200101906001600160a01b031690816001600160a01b03168152505060396000848481518110612ab357612ab36159c6565b6020026020010151602001516001600160a01b03166001600160a01b0316815260200190815260200160002054848781518110612af257612af26159c6565b602090810291909101015285612b07816159dc565b9650505b50600101612940565b50612b2160386000614e86565b60008467ffffffffffffffff811115612b3c57612b3c6152c2565b604051908082528060200260200182016040528015612b65578160200160208202803683370190505b50905060008567ffffffffffffffff811115612b8357612b836152c2565b604051908082528060200260200182016040528015612bac578160200160208202803683370190505b50905060005b86811015612c9257858181518110612bcc57612bcc6159c6565b6020026020010151838281518110612be657612be66159c6565b60200260200101906001600160a01b031690816001600160a01b031681525050848181518110612c1857612c186159c6565b6020026020010151828281518110612c3257612c326159c6565b602002602001018181525050612c68612c496132e0565b848381518110612c5b57612c5b6159c6565b6020026020010151614080565b612c8a838281518110612c7d57612c7d6159c6565b60200260200101516140a5565b600101612bb2565b509199909850909650945050505050565b6000546040805163d09edf3160e01b81529051612cee926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b600081815260ab6020526040902054612d2257604051634cd2cb0d60e01b8152600481018290526024015b60405180910390fd5b60a95460405163220c0a2160e21b8152600481018390526000916001600160a01b03169063883028849060240161020060405180830381865afa158015612d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d919190615b04565b60a0015167ffffffffffffffff169050804211612dc45760405163189f57a760e11b815260048101839052602401612d19565b60a954604051634124beef60e01b8152600481018490526001600160a01b0390911690634124beef90602401600060405180830381600087803b158015612e0a57600080fd5b505af1925050508015612e1b575060015b612eb557600082815260e060209081526040808320838155600180820185905560028083018690556003909201805460ff1990811690915560ab90945282852085815590810185905501805474ffffffffffffffffffffffffffffffffffffffffff1916905560e180549092169091555183917fcd1f3eba521c46676cab303c79c9a68595d6f3efd65761b2588af919b7b2885b91a25050565b60405163189f57a760e11b815260048101839052602401612d19565b600082815260ab6020526040902054612f0057604051634cd2cb0d60e01b815260048101839052602401612d19565b612f0a828261432b565b801561318f57600082815260e060209081526040808320600290810154845260df8352818420825160a081018452815481526001820154818601529181015460ff161515828401526003810180548451818702810187019095528085529294919360608601939092830182828015612fa157602002820191906000526020600020905b815481526020019060010190808311612f8d575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015612ff957602002820191906000526020600020905b815481526020019060010190808311612fe5575b50505050508152505090506000805b825181101561316057600085815260e06020526040902060010154606084015180518390811061303a5761303a6159c6565b602002602001015111613077578260800151818151811061305d5761305d6159c6565b60200260200101518261307091906156ea565b9150613158565b82604001511561315357600083608001518281518110613099576130996159c6565b602002602001015190506000826000146130da5760608501516130bd600185615665565b815181106130cd576130cd6159c6565b60200260200101516130dd565b60005b600088815260e06020526040812060010154919250906130fe908390615665565b905060008287606001518681518110613119576131196159c6565b602002602001015161312b9190615665565b90508061313885846156fd565b613142919061572a565b61314c90876156ea565b9550505050505b613160565b600101613008565b5061316c816001613939565b5050600082815260e060205260409020600301805460ff191660011790556131bb565b600082815260e060205260408120818155600181018290556002810191909155600301805460ff191690555b505060e1805460ff19169055565b6000606d546000036131dc575060705490565b607054606d54606e546071546131f0614479565b6131fa9190615665565b61320491906156fd565b61321d906ec097ce7bc90715b34b9f10000000006156fd565b613227919061572a565b611a6f91906156ea565b6001600160a01b038216600090815260746020908152604080832054607283528184205460739093529083205490916ec097ce7bc90715b34b9f10000000009161327b9086615665565b61328591906156fd565b61328f919061572a565b61329991906156ea565b9392505050565b60006001600160e01b0319821663281ab37760e01b14806132d157506001600160e01b031982166312fcf92f60e11b145b80610992575061099282614491565b60003660146132ee336112d7565b80156132fa5750808210155b1561332a5760003661330c8385615665565b613317928290615be4565b61332091615c0e565b60601c9250505090565b339250505090565b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015613383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133a791906155c1565b60405163a883867d60e01b8152600481018490526001600160a01b038381166024830152919091169063a883867d90604401602060405180830381865afa1580156133f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061341a91906156c2565b6113fc576040516342abbb7760e01b8152600481018390526001600160a01b0382166024820152604401612d19565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080546001190161348d57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b8060000361094d576040516351cd1a8760e11b815260040160405180910390fd5b60006134be6131c9565b6070819055905060006134cf614479565b6071819055905060006001600160a01b03841615613520576134f384607054613231565b6001600160a01b038516600090815260746020908152604080832084905560705460739092529091205590505b60408051848152602081018490529081018290526001600160a01b038516907fa970b12b7ab9d055296c48cc861cf24cf1b06100b204a5a3a32d9208ca06cc919060600160405180910390a250505050565b6040516001600160a01b038381166024830152604482018390526135d191859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506144b6565b505050565b6001600160a01b03811660008181526074602090815260408083208054939055805160c08101909152928352909161370891810161361c6000546001600160a01b031690565b6001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061367d91906155c1565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156136ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136de91906155c1565b6001600160a01b031681526020018381526020014281526020016000815260200142815250614519565b60008054906101000a90046001600160a01b03166001600160a01b031663f1c6bdf86040518163ffffffff1660e01b8152600401602060405180830381865afa158015613759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377d91906155c1565b60405163e151fc6160e01b81523060048201526001600160a01b03919091169063e151fc6190602401600060405180830381600087803b1580156137c057600080fd5b505af11580156137d4573d6000803e3d6000fd5b50505050816001600160a01b03167fdf29796aad820e4bb192f3a8d631b76519bcd2cbe77cc85af20e9df53cece0868260405161381391815260200190565b60405180910390a25050565b6001600160a01b03821661384657604051630d03dd3d60e01b815260040160405180910390fd5b60a954604051634360af3d60e01b81526001600160a01b03848116600483015290911690634360af3d90602401602060405180830381865afa158015613890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138b491906155de565b8110156138d457604051634c79406b60e01b815260040160405180910390fd5b60a780546001600160a01b0319166001600160a01b03939093169290921790915560a855565b6040516001600160a01b0384811660248301528381166044830152606482018390526139339186918216906323b872dd9060840161359f565b50505050565b8161394381613493565b818060000361396557604051630e05ce7960e41b815260040160405180910390fd5b61396f60006134b4565b606f54421061398a57613982838561572a565b606e556139c3565b6000606e5442606f5461399d9190615665565b6139a791906156fd565b9050836139b482876156ea565b6139be919061572a565b606e55505b606e546000036139e657604051631db9af3b60e21b815260040160405180910390fd5b6139f083426156ea565b606f81905542607155606e5460408051878152602081018790529081019190915260608101919091527fe6ff9e5909ab32d770b5c8e779b77275ca8dda9d96cfb24d0287d80715dd02969060800160405180910390a150505050565b6000816000015182606001518360800151604051602001613a6f93929190615c41565b604051602081830303815290604052805190602001209050919050565b6154608167ffffffffffffffff161015613ab957604051634f0d3f4960e01b815260040160405180910390fd5b60a9805467ffffffffffffffff909216600160a01b027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015613b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b6f91906155de565b90506139338484613b8085856156ea565b6146da565b6060613b94608083901c61476a565b613b9d8361476a565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b6060613be76fffffffffffffffffffffffffffffffff602084901c1661476a565b613c028360601b6bffffffffffffffffffffffff191661476a565b604051602001613bb09291909182527fffffffffffffffff00000000000000000000000000000000000000000000000016602082015260280190565b606081600003613c655750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613c8f5780613c79816159dc565b9150613c889050600a8361572a565b9150613c69565b60008167ffffffffffffffff811115613caa57613caa6152c2565b6040519080825280601f01601f191660200182016040528015613cd4576020820181803683370190505b509050815b8515613d7957613cea600182615665565b90506000613cf9600a8861572a565b613d0490600a6156fd565b613d0e9088615665565b613d19906030615c6c565b905060008160f81b905080848481518110613d3657613d366159c6565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613d70600a8961572a565b97505050613cd9565b50949350505050565b613d8b826134b4565b6001600160a01b03821660009081526074602052604090205415613db257613db2826135d6565b6001600160a01b03821660009081526072602052604081208054839290613dda9084906156ea565b9250508190555080606d6000828254613df391906156ea565b90915550506040518181526001600160a01b038316907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001613813565b6000805460408051631e38d7bf60e31b815290516001600160a01b0380861693169163f1c6bdf89160048083019260209291908290030181865afa158015613e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ea391906155c1565b6001600160a01b03161492915050565b613ebb61490c565b6001600160a01b038216613ee257604051637280679360e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038416179055613f068161495a565b613f2357604051637511254160e01b815260040160405180910390fd5b80516001908155602082015160025560408201516003556060820151829190600490613f4f9082615cd5565b5060808201516004820190613f649082615cd5565b50905050816001600160a01b03167fd5f3f84c2e1816ce290af84d002663800b02f2985d770cdd335de76fd723b730826040516138139190615d95565b613fa961490c565b61094d816149ba565b613fba61490c565b613fc382613fd6565b613fcc81613a8c565b613933848461381f565b6001600160a01b038116613ffd576040516321ea035160e21b815260040160405180910390fd5b60a980546001600160a01b0319166001600160a01b0383169081179091556040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa158015614056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061407a91906155de565b60aa5550565b6001600160a01b0381166000818152603960205260409020546113fc919084906146da565b6001600160a01b0381166000818152603960205260408082205490516370a0823160e01b81523060048201529092906370a0823190602401602060405180830381865afa1580156140fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061411e91906155de565b9050818110156135d15760008054906101000a90046001600160a01b03166001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061419d91906155c1565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156141da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141fe91906155c1565b6001600160a01b0316836001600160a01b0316036143075760008054906101000a90046001600160a01b03166001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061428b91906155c1565b6001600160a01b031663759cc4b5306142a48486615665565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156142ea57600080fd5b505af11580156142fe573d6000803e3d6000fd5b50505050505050565b6040516346511acb60e11b81526001600160a01b0384166004820152602401612d19565b60a9546001600160a01b031661433f6132e0565b6001600160a01b031614614366576040516311b77b4360e11b815260040160405180910390fd5b600082815260ab60209081526040918290208251608081018452815480825260018301548285018190526002909301546001600160a01b038116838701819052600160a01b90910460ff16151560608401528551871515815294850193909352909386937f557deaca39aedd0a84876c0dcbcb715b9b68641286033d7e79a274bdfe8d8a40910160405180910390a4811561443d57600083815260ab6020526040902060020180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055505050565b5050600090815260ab602052604081208181556001810191909155600201805474ffffffffffffffffffffffffffffffffffffffffff19169055565b600042606f54111561448a57504290565b50606f5490565b60006001600160e01b031982166363a1750b60e01b1480610992575061099282614b16565b60006144cb6001600160a01b03841683614b3b565b905080516000141580156144f05750808060200190518101906144ee91906156c2565b155b156135d157604051635274afe760e01b81526001600160a01b0384166004820152602401612d19565b8061452381614b49565b81604001516039600084602001516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461456091906156ea565b909155505060388054600181018255600091909152825160069091027f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f456199810180546001600160a01b039384166001600160a01b0319918216811790925560208601517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619a8401805491909516911681179093556040808601517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619b840181905560608701517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619c85015560808701517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619d85015560a08701517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619e909401939093555190917f21b8b94494ef1aff6ce0f5f3741800bdb27204fd430c1280b54d4cc653ae6f3a916146ce91815260200190565b60405180910390a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261472b8482614c41565b613933576040516001600160a01b0384811660248301526000604483015261476091869182169063095ea7b39060640161359f565b61393384826144b6565b6000808260001c9050806fffffffffffffffffffffffffffffffff169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f0808080808080808080808080808080808080808080808080808080808080808168161488e5761488e615714565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166111e757604051631afcd79f60e31b815260040160405180910390fd5b600081606001515160000361497157506000919050565b81608001515160000361498657506000919050565b815115801561499757506020820151155b80156149a557506040820151155b156149b257506000919050565b506001919050565b6001600160a01b0381161580614aae57506000546001600160a01b03166001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a3891906155c1565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a9991906155c1565b6001600160a01b0316816001600160a01b0316145b15614acc57604051631c307bff60e31b815260040160405180910390fd5b606c80546001600160a01b0319166001600160a01b0383169081179091556040517f9904a32444ae0eb0bae2045baf588aa248f03f4fef600c18afd1d7e751614af890600090a250565b60006001600160e01b0319821663286309c760e01b1480610992575061099282614ce4565b606061329983836000614d19565b6000546001600160a01b03166001600160a01b031663f1c6bdf86040518163ffffffff1660e01b8152600401602060405180830381865afa158015614b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614bb691906155c1565b6001600160a01b03166308fd683d826040518263ffffffff1660e01b8152600401614be19190615dec565b6020604051808303816000875af1158015614c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c2491906156c2565b61094d5760405163349a262760e01b815260040160405180910390fd5b6000806000846001600160a01b031684604051614c5e9190615768565b6000604051808303816000865af19150503d8060008114614c9b576040519150601f19603f3d011682016040523d82523d6000602084013e614ca0565b606091505b5091509150818015614cca575080511580614cca575080806020019051810190614cca91906156c2565b8015611b9d5750505050506001600160a01b03163b151590565b60006001600160e01b0319821663e328951160e01b148061099257506301ffc9a760e01b6001600160e01b0319831614610992565b606081471015614d3e5760405163cd78605960e01b8152306004820152602401612d19565b600080856001600160a01b03168486604051614d5a9190615768565b60006040518083038185875af1925050503d8060008114614d97576040519150601f19603f3d011682016040523d82523d6000602084013e614d9c565b606091505b5091509150614dac868383614db6565b9695505050505050565b606082614dcb57614dc682614e12565b613299565b8151158015614de257506001600160a01b0384163b155b15614e0b57604051639996b31560e01b81526001600160a01b0385166004820152602401612d19565b5080613299565b805115614e225780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b828054828255906000526020600020908101928215614e76579160200282015b82811115614e76578251825591602001919060010190614e5b565b50614e82929150614ea7565b5090565b508054600082556006029060005260206000209081019061094d9190614ebc565b5b80821115614e825760008155600101614ea8565b5b80821115614e825780546001600160a01b03199081168255600182018054909116905560006002820181905560038201819055600482018190556005820155600601614ebd565b6001600160a01b038116811461094d57600080fd5b600060208284031215614f2b57600080fd5b813561329981614f04565b600060208284031215614f4857600080fd5b81356001600160e01b03198116811461329957600080fd5b60008060008060808587031215614f7657600080fd5b84359350602085013592506040850135614f8f81614f04565b9396929550929360600135925050565b60008083601f840112614fb157600080fd5b50813567ffffffffffffffff811115614fc957600080fd5b6020830191508360208260051b8501011115614fe457600080fd5b9250929050565b60008060006040848603121561500057600080fd5b83359250602084013567ffffffffffffffff81111561501e57600080fd5b61502a86828701614f9f565b9497909650939450505050565b60006020828403121561504957600080fd5b5035919050565b60005b8381101561506b578181015183820152602001615053565b50506000910152565b6000815180845261508c816020860160208601615050565b601f01601f19169290920160200192915050565b6020815260006132996020830184615074565b600080604083850312156150c657600080fd5b82356150d181614f04565b946020939093013593505050565b600080604083850312156150f257600080fd5b50508035926020909101359150565b6000806040838503121561511457600080fd5b82359150602083013561512681614f04565b809150509250929050565b60008151808452602080850194506020840160005b838110156151ae5761519b8783516001600160a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b60c0969096019590820190600101615146565b509495945050505050565b6020815260006132996020830184615131565b60008151808452602080850194506020840160005b838110156151ae578151875295820195908201906001016151e1565b6020815281516020820152602082015160408201526040820151151560608201526000606083015160a0608084015261523960c08401826151cc565b90506080840151601f198483030160a0850152611b9d82826151cc565b67ffffffffffffffff8116811461094d57600080fd5b60006020828403121561527e57600080fd5b813561329981615256565b60008060006060848603121561529e57600080fd5b833592506020840135915060408401356152b781614f04565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156152fb576152fb6152c2565b60405290565b604051610180810167ffffffffffffffff811182821017156152fb576152fb6152c2565b600082601f83011261533657600080fd5b813567ffffffffffffffff80821115615351576153516152c2565b604051601f8301601f19908116603f01168101908282118183101715615379576153796152c2565b8160405283815286602085880101111561539257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156153c757600080fd5b83356153d281614f04565b9250602084013567ffffffffffffffff808211156153ef57600080fd5b9085019060a0828803121561540357600080fd5b61540b6152d8565b82358152602083013560208201526040830135604082015260608301358281111561543557600080fd5b61544189828601615325565b60608301525060808301358281111561545957600080fd5b61546589828601615325565b6080830152509350604086013591508082111561548157600080fd5b5061548e86828701615325565b9150509250925092565b801515811461094d57600080fd5b6000806000806000606086880312156154be57600080fd5b85356154c981615498565b9450602086013567ffffffffffffffff808211156154e657600080fd5b6154f289838a01614f9f565b9096509450604088013591508082111561550b57600080fd5b5061551888828901614f9f565b969995985093965092949392505050565b60608152600061553c6060830186615131565b82810360208481019190915285518083528682019282019060005b8181101561557c5784516001600160a01b031683529383019391830191600101615557565b5050848103604086015261559081876151cc565b98975050505050505050565b600080604083850312156155af57600080fd5b82359150602083013561512681615498565b6000602082840312156155d357600080fd5b815161329981614f04565b6000602082840312156155f057600080fd5b5051919050565b83815260406020808301829052908201839052600090849060608401835b8681101561564357833561562881614f04565b6001600160a01b031682529282019290820190600101615615565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156109925761099261564f565b600181811c9082168061568c57607f821691505b6020821081036156ac57634e487b7160e01b600052602260045260246000fd5b50919050565b80516156bd81615498565b919050565b6000602082840312156156d457600080fd5b815161329981615498565b80516156bd81614f04565b808201808211156109925761099261564f565b80820281158282048414176109925761099261564f565b634e487b7160e01b600052601260045260246000fd5b60008261574757634e487b7160e01b600052601260045260246000fd5b500490565b6000815161575e818560208601615050565b9290920192915050565b6000825161577a818460208701615050565b9190910192915050565b7f446174612061737365727465643a20307800000000000000000000000000000081526000865160206157bd8260118601838c01615050565b7f20666f72206461746149643a203078000000000000000000000000000000000060119285019283015287516157f881838501848c01615050565b7f20616e642061737365727465723a203078000000000000000000000000000000920181810192909252865161583481603185018a8501615050565b7f2061742074696d657374616d703a2000000000000000000000000000000000006031939091019283015285516158718160408501848a01615050565b7f20696e207468652044617461417373657274657220636f6e747261637420617460409390910192830152506204060f60eb1b60608201526155906158b9606383018661574c565b7f2069732076616c69642e000000000000000000000000000000000000000000008152600a0190565b60006101208083526158f68184018d615074565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b80516156bd81615256565b600080600080600060a0868803121561597357600080fd5b855161597e81614f04565b602087015190955061598f81614f04565b6040870151606088015191955093506159a781614f04565b60808701519092506159b881615256565b809150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b6000600182016159ee576159ee61564f565b5060010190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115615a2757600080fd5b8260051b80836020870137939093016020019392505050565b878152866020820152851515604082015260a060608201526000615a6860a0830186886159f5565b8281036080840152615a7b8185876159f5565b9a9950505050505050505050565b600060a08284031215615a9b57600080fd5b615aa36152d8565b90508151615ab081615498565b81526020820151615ac081615498565b60208201526040820151615ad381615498565b60408201526060820151615ae681614f04565b60608201526080820151615af981614f04565b608082015292915050565b60006102008284031215615b1757600080fd5b615b1f615301565b615b298484615a89565b8152615b3760a084016156df565b6020820152615b4860c08401615950565b6040820152615b5960e084016156b2565b6060820152610100615b6c8185016156df565b6080830152610120615b7f818601615950565b60a0840152610140615b928187016156b2565b60c08501526101608087015160e0860152610180870151848601526101a087015183860152615bc46101c088016156df565b82860152615bd56101e088016156df565b90850152509195945050505050565b60008085851115615bf457600080fd5b83861115615c0157600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015611ba05760149490940360031b84901b1690921692915050565b838152606060208201526000615c5a6060830185615074565b8281036040840152614dac8185615074565b60ff81811683821601908111156109925761099261564f565b601f8211156135d1576000816000526020600020601f850160051c81016020861015615cae5750805b601f850160051c820191505b81811015615ccd57828155600101615cba565b505050505050565b815167ffffffffffffffff811115615cef57615cef6152c2565b615d0381615cfd8454615678565b84615c85565b602080601f831160018114615d385760008415615d205750858301515b600019600386901b1c1916600185901b178555615ccd565b600085815260208120601f198616915b82811015615d6757888601518255948401946001909101908401615d48565b5085821015615d855787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081528151602082015260208201516040820152604082015160608201526000606083015160a06080840152615dcf60c0840182615074565b90506080840151601f198483030160a0850152611b9d8282615074565b60c0810161099282846001600160a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a0830152505056fea26469706673582212201c472ecf4713485c54e6e1ae6b31e61a170118b132f8b95744447149d6bff1a664736f6c63430008170033",
    "sourceMap": "1461:13400:134:-:0;;;;;;;;;;;;-1:-1:-1;5274:1:106;1621:37:24;;5288:22:106::1;:20;:22::i;:::-;1461:13400:134::0;;7711:422:25;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:25;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:25;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:25;-1:-1:-1;;;;;8035:33:25;;;;;8087:29;;158:50:265;;;8087:29:25;;146:2:265;131:18;8087:29:25;;;;;;;7981:146;7760:373;7711:422::o;14:200:265:-;1461:13400:134;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103565760003560e01c806378802654116101c8578063a6d14d6911610104578063bf14d4a9116100a2578063d448a4ec1161007c578063d448a4ec1461093f578063d509b01714610950578063e31ae42114610959578063f1b156b21461096c57600080fd5b8063bf14d4a9146108ee578063bf5c325214610915578063c0231ff61461092857600080fd5b8063b74795d9116100de578063b74795d914610883578063b75d4e2414610894578063bc7d2a33146108c8578063bcb61920146108db57600080fd5b8063a6d14d6914610854578063b33ec6181461085d578063b66a870c1461087057600080fd5b806381d09517116101715780638921a6141161014b5780638921a614146107d357806393ee663b146107e6578063956ae17b146107f9578063a694fc3a1461084157600080fd5b806381d09517146106f25780638333cb0614610705578063883028841461070e57600080fd5b80637b9a9c7f116101a25780637b9a9c7f1461067d5780637da0a877146106d75780637e5f43ff146106df57600080fd5b806378802654146106635780637998a1c41461066c5780637b0a47ee1461067457600080fd5b806354f6127f1161029757806364e6bbe51161024057806370a082311161021a57806370a08231146105f257806372f702f31461061b57806375fa0b761461062e578063772fd8da1461064357600080fd5b806364e6bbe5146105b9578063654e51e7146105cc5780636c67e807146105df57600080fd5b8063572b6c0511610271578063572b6c051461058657806359be48f21461059957806360a93176146105ac57600080fd5b806354f6127f1461053057806354fd4d501461055a5780635600f04f1461057e57600080fd5b8063272bbd44116103045780632e84db5f116102de5780632e84db5f1461049b578063372500ab146104c45780633ecd7972146104cc5780634a79d50c1461051b57600080fd5b8063272bbd44146104005780632a4e1904146104135780632e17de781461048857600080fd5b806318160ddd1161033557806318160ddd146103b757806320402e1d146103c057806324e30270146103eb57600080fd5b80628cc2621461035b57806301ffc9a714610381578063074644e6146103a4575b600080fd5b61036e610369366004614f19565b61097f565b6040519081526020015b60405180910390f35b61039461038f366004614f36565b610998565b6040519015158152602001610378565b61036e6103b2366004614f60565b6109d8565b61036e606d5481565b60a7546103d3906001600160a01b031681565b6040516001600160a01b039091168152602001610378565b6103fe6103f9366004614feb565b610c40565b005b6103fe61040e366004614feb565b610ea4565b610457610421366004615037565b60ab602052600090815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b604051610378949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6103fe610496366004615037565b61107e565b61036e6104a9366004614f19565b6001600160a01b031660009081526039602052604090205490565b6103fe611197565b6104fe6104da366004615037565b60df6020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610378565b6105236111e9565b60405161037891906150a0565b61054361053e366004615037565b61127e565b604080519215158352602083019190915201610378565b60015460025460035460408051938452602084019290925290820152606001610378565b6105236112c5565b610394610594366004614f19565b6112d7565b6103fe6105a73660046150b3565b611346565b60e1546103949060ff1681565b6103fe6105c7366004615037565b611400565b6103fe6105da3660046150df565b6114e8565b6103fe6105ed366004615101565b61153d565b61036e610600366004614f19565b6001600160a01b031660009081526072602052604090205490565b606c546103d3906001600160a01b031681565b610636611753565b60405161037891906151b9565b610656610651366004615037565b6117f6565b60405161037891906151fd565b61036e60de5481565b61036e611916565b61036e606e5481565b6106b561068b366004615037565b60e06020526000908152604090208054600182015460028301546003909301549192909160ff1684565b6040805194855260208501939093529183015215156060820152608001610378565b6103d3611a74565b61036e6106ed3660046150df565b611aec565b6103fe61070036600461526c565b611ba8565b61036e60a85481565b61079561071c366004615037565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260ab6020908152604091829020825160808101845281548152600182015492810192909252600201546001600160a01b03811692820192909252600160a01b90910460ff161515606082015290565b604051610378919081518152602080830151908201526040808301516001600160a01b03169082015260609182015115159181019190915260800190565b60a9546103d3906001600160a01b031681565b61036e6107f4366004615289565b611bfc565b61080c610807366004615037565b612024565b604051610378919081518152602080830151908201526040808301519082015260609182015115159181019190915260800190565b6103fe61084f366004615037565b61209b565b61036e606f5481565b6103fe61086b3660046150b3565b61212a565b6103fe61087e3660046153b2565b612188565b6000546001600160a01b03166103d3565b60a9546108af90600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610378565b61036e6108d63660046154a6565b6122ee565b6103fe6108e9366004615101565b6125ae565b61036e7f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba81565b6103fe610923366004614f19565b612790565b6109306127e4565b60405161037893929190615529565b6103fe61094d366004615037565b50565b61036e60aa5481565b6103fe610967366004615037565b612ca3565b6103fe61097a36600461559c565b612ed1565b60006109928261098d6131c9565b613231565b92915050565b60006001600160e01b03198216630de8208b60e41b14806109c957506001600160e01b031982166363a1750b60e01b145b806109925750610992826132a0565b60007f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba610af260008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7391906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f906044015b602060405180830381865afa158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae591906155de565b610aed6132e0565b613332565b60e15460ff1615610b1657604051631d0f767960e31b815260040160405180910390fd5b6001600160a01b03841630148015610b3e5750606c5460a7546001600160a01b039081169116145b15610b5c576040516357ee800b60e11b815260040160405180910390fd5b60de541580610b6d575060de548310155b15610b8b5760405163b88c02af60e01b815260040160405180910390fd5b610b96868686611bfc565b604080516080810182524280825260208083018a815283850189815260006060860181815288825260e08552908790209551865591516001860155516002850155516003909301805460ff1916931515939093179092558251908152908101889052919350849184917f2f7b2bd564a62db13a01d975e329f0cd4b96b6e435fd4114d8e25ab72a349f43910160405180910390a35060e1805460ff19166001179055949350505050565b600080546040805163d09edf3160e01b815290518693926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f90604401602060405180830381865afa158015610cfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2091906155de565b9050610dc760008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a91906155c1565b6001600160a01b031663248a9ca3836040518263ffffffff1660e01b8152600401610aa491815260200190565b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3c91906155c1565b6001600160a01b0316637d540a648686866040518463ffffffff1660e01b8152600401610e6b939291906155f7565b600060405180830381600087803b158015610e8557600080fd5b505af1158015610e99573d6000803e3d6000fd5b505050505050505050565b600080546040805163d09edf3160e01b815290518693926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1391906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f90604401602060405180830381865afa158015610f60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8491906155de565b9050610fda60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d76573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa15801561102b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104f91906155c1565b6001600160a01b031663648154538686866040518463ffffffff1660e01b8152600401610e6b939291906155f7565b611086613449565b8061109081613493565b600061109a6132e0565b90506110a5816134b4565b6001600160a01b038116600090815260726020526040812080548592906110cd908490615665565b9250508190555082606d60008282546110e69190615665565b9091555050606c54611102906001600160a01b03168285613572565b6001600160a01b0381166000908152607460205260409020541561112957611129816135d6565b806001600160a01b03167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758460405161116491815260200190565b60405180910390a2505061094d60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b61119f613449565b60006111a96132e0565b90506111b4816134b4565b6111bd816135d6565b506111e760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b565b6060600160040180546111fb90615678565b80601f016020809104026020016040519081016040528092919081815260200182805461122790615678565b80156112745780601f1061124957610100808354040283529160200191611274565b820191906000526020600020905b81548152906001019060200180831161125757829003601f168201915b5050505050905090565b600081815260ab60205260408120600201548190600160a01b900460ff166112ab57506000928392509050565b5050600090815260ab602052604090206001908101549091565b6060600160030180546111fb90615678565b6000805460405163572b6c0560e01b81526001600160a01b0384811660048301529091169063572b6c0590602401602060405180830381865afa158015611322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099291906156c2565b6000546040805163d09edf3160e01b815290516113f2926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b591906155c1565b6001600160a01b031663b3ecf2366040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ac1573d6000803e3d6000fd5b6113fc828261381f565b5050565b6000546040805163d09edf3160e01b8152905161144b926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b611453613449565b8061145d81613493565b61147c6114686132e0565b60a7546001600160a01b03169030856138fa565b60a7546040518381526001600160a01b03909116907f643b1bd5b160e780fef319c0a18a3535edb10da7f7136320b2935bb6f1a9f6059060200160405180910390a25061094d60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6000546040805163d09edf3160e01b81529051611533926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b6113fc8282613939565b600080546040805163d09edf3160e01b815290518593926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ac91906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f90604401602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d91906155de565b905061167360008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d76573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e891906155c1565b60405163385e205560e21b8152600481018690526001600160a01b038581166024830152919091169063e1788154906044015b600060405180830381600087803b15801561173557600080fd5b505af1158015611749573d6000803e3d6000fd5b5050505050505050565b60606038805480602002602001604051908101604052809291908181526020016000905b828210156117ed5760008481526020908190206040805160c0810182526006860290920180546001600160a01b0390811684526001808301549091168486015260028201549284019290925260038101546060840152600481015460808401526005015460a08301529083529092019101611777565b50505050905090565b61182a6040518060a00160405280600081526020016000815260200160001515815260200160608152602001606081525090565b600082815260df6020908152604091829020825160a08101845281548152600182015481840152600282015460ff1615158185015260038201805485518186028101860190965280865291949293606086019392908301828280156118ae57602002820191906000526020600020905b81548152602001906001019080831161189a575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561190657602002820191906000526020600020905b8154815260200190600101908083116118f2575b5050505050815250509050919050565b6000611a6f60016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201805461195690615678565b80601f016020809104026020016040519081016040528092919081815260200182805461198290615678565b80156119cf5780601f106119a4576101008083540402835291602001916119cf565b820191906000526020600020905b8154815290600101906020018083116119b257829003601f168201915b505050505081526020016004820180546119e890615678565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1490615678565b8015611a615780601f10611a3657610100808354040283529160200191611a61565b820191906000526020600020905b815481529060010190602001808311611a4457829003601f168201915b505050505081525050613a4c565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b0316637da0a8776040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6f91906155c1565b600082611af881613493565b8280600003611b1a57604051630e05ce7960e41b815260040160405180910390fd5b606f54421115611b2d5760009250611ba0565b606f54611b3a85426156ea565b1115611b515742606f54611b4e9190615665565b93505b606d54600003611b7957606e54611b6885876156fd565b611b7291906156fd565b9250611ba0565b606d54606e54611b8986886156fd565b611b9391906156fd565b611b9d919061572a565b92505b505092915050565b6000546040805163d09edf3160e01b81529051611bf3926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b61094d81613a8c565b60007f351566c1ac6c6b0e5df4c16e81bc932aa8bf8cb9457b6e94847672b67f393cba611c7360008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4f573d6000803e3d6000fd5b6001600160a01b03831615611c885782611c90565b611c906132e0565b9250306001600160a01b03841603611d355760a85460a7546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1191906155de565b1015611d3057604051635ad9961b60e01b815260040160405180910390fd5b611e43565b60a75460a854604080516001600160a01b03878116602483015230604483015260648083019490945282518083039094018452608490910182526020830180516001600160e01b03166323b872dd60e01b17905290516000938493921691611d9c91615768565b6000604051808303816000865af19150503d8060008114611dd9576040519150601f19603f3d011682016040523d82523d6000602084013e611dde565b606091505b5091509150811580611e0d575060008151118015611e0d575080806020019051810190611e0b91906156c2565b155b80611e22575060a7546001600160a01b03163b155b15611e4057604051635ad9961b60e01b815260040160405180910390fd5b50505b60a95460a85460a754611e64926001600160a01b0391821692911690613afb565b60a9546001600160a01b0316636457c979611e7e86613b85565b611e8788613b85565b611e9087613bc6565b611e9942613c3e565b611ea230613bc6565b604051602001611eb6959493929190615784565b60408051808303601f190181529082905260a95460a75460a85460aa5460e087901b6001600160e01b0319168652611f18958b943094600094600160a01b90920467ffffffffffffffff16936001600160a01b039091169285906004016158e2565b6020604051808303816000875af1158015611f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5b91906155de565b6040805160808101825287815260208082018881526001600160a01b0380891684860181815260006060870181815289825260ab909652879020955186559251600186015591516002909401805493511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199094169490911693909317919091179091559051919350839187907f29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec906120149089815260200190565b60405180910390a4509392505050565b61205160405180608001604052806000815260200160008152602001600081526020016000151581525090565b50600090815260e0602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff161515606082015290565b6120a3613449565b806120ad81613493565b60e15460ff16156120d15760405163ee0a20ad60e01b815260040160405180910390fd5b60006120db6132e0565b90506120e78184613d82565b606c546120ff906001600160a01b03168230866138fa565b505061094d60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b61213a6121356132e0565b613e33565b6121575760405163e4597a6b60e01b815260040160405180910390fd5b6001600160a01b0382166000908152603960205260408120805483929061217f908490615665565b90915550505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156121d35750825b905060008267ffffffffffffffff1660011480156121f05750303b155b9050811580156121fe575080155b1561221c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561225057845468ff00000000000000001916680100000000000000001785555b61225a8888613eb3565b60008060008060008a806020019051810190612276919061595b565b9450945094509450945061228985613fa1565b61229584848484613fb2565b5050505050831561174957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050505050505050565b600080546040805163d09edf3160e01b8152905161233a926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b83600181108061234a5750601481115b156123685760405163036da02f60e61b815260040160405180910390fd5b80831461238857604051631166f7c560e31b815260040160405180910390fd5b60008484600081811061239d5761239d6159c6565b90506020020135905060018211156124465760015b82811015612444578787828181106123cc576123cc6159c6565b9050602002013588886001846123e29190615665565b8181106123f1576123f16159c6565b90506020020135106124165760405163458f641360e11b815260040160405180910390fd5b858582818110612428576124286159c6565b905060200201358261243a91906156ea565b91506001016123b2565b505b600060de5490506040518060a001604052808481526020018381526020018a1515815260200189898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060408051602089810282810182019093528982529283019290918a918a918291850190849080828437600092018290525093909452505083815260df6020908152604091829020845181558482015160018201559184015160028301805460ff19169115159190911790556060840151805192935061252a9260038501929190910190614e3b565b5060808201518051612546916004840191602090910190614e3b565b505060de805491506000612559836159dc565b9190505550807fc1063bd63d477506eb51343042d915c0d3377b74bb787bc0f4d255ca1a7039b684848c8c8c8c8c60405161259a9796959493929190615a40565b60405180910390a298975050505050505050565b600080546040805163d09edf3160e01b815290518593926001600160a01b03169163d09edf319160048083019260209291908290030181865afa1580156125f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261d91906155c1565b60405163fdd5205f60e01b8152306004820152602481018490526001600160a01b03919091169063fdd5205f90604401602060405180830381865afa15801561266a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268e91906155de565b90506126e460008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d76573d6000803e3d6000fd5b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015612735573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275991906155c1565b604051632e99be7f60e21b8152600481018690526001600160a01b038581166024830152919091169063ba66f9fc9060440161171b565b6000546040805163d09edf3160e01b815290516127db926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b61094d81613fd6565b60608060606127f46121356132e0565b6128115760405163e4597a6b60e01b815260040160405180910390fd5b6038546000808267ffffffffffffffff811115612830576128306152c2565b604051908082528060200260200182016040528015612859578160200160208202803683370190505b50905060008367ffffffffffffffff811115612877576128776152c2565b6040519080825280602002602001820160405280156128a0578160200160208202803683370190505b50905060008467ffffffffffffffff8111156128be576128be6152c2565b60405190808252806020026020018201604052801561293a57816020015b6129276040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816128dc5790505b50905060005b85811015612b14576038818154811061295b5761295b6159c6565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03908116845260018201541693830193909352600283015490820152600382015460608201526004820154608082015260059091015460a082015282518390839081106129d0576129d06159c6565b60200260200101819052506000805b86811015612a47578383815181106129f9576129f96159c6565b6020026020010151602001516001600160a01b0316868281518110612a2057612a206159c6565b60200260200101516001600160a01b031603612a3f5760019150612a47565b6001016129df565b5080612b0b57828281518110612a5f57612a5f6159c6565b602002602001015160200151858781518110612a7d57612a7d6159c6565b60200260200101906001600160a01b031690816001600160a01b03168152505060396000848481518110612ab357612ab36159c6565b6020026020010151602001516001600160a01b03166001600160a01b0316815260200190815260200160002054848781518110612af257612af26159c6565b602090810291909101015285612b07816159dc565b9650505b50600101612940565b50612b2160386000614e86565b60008467ffffffffffffffff811115612b3c57612b3c6152c2565b604051908082528060200260200182016040528015612b65578160200160208202803683370190505b50905060008567ffffffffffffffff811115612b8357612b836152c2565b604051908082528060200260200182016040528015612bac578160200160208202803683370190505b50905060005b86811015612c9257858181518110612bcc57612bcc6159c6565b6020026020010151838281518110612be657612be66159c6565b60200260200101906001600160a01b031690816001600160a01b031681525050848181518110612c1857612c186159c6565b6020026020010151828281518110612c3257612c326159c6565b602002602001018181525050612c68612c496132e0565b848381518110612c5b57612c5b6159c6565b6020026020010151614080565b612c8a838281518110612c7d57612c7d6159c6565b60200260200101516140a5565b600101612bb2565b509199909850909650945050505050565b6000546040805163d09edf3160e01b81529051612cee926001600160a01b03169163d09edf319160048083019260209291908290030181865afa158015611391573d6000803e3d6000fd5b600081815260ab6020526040902054612d2257604051634cd2cb0d60e01b8152600481018290526024015b60405180910390fd5b60a95460405163220c0a2160e21b8152600481018390526000916001600160a01b03169063883028849060240161020060405180830381865afa158015612d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d919190615b04565b60a0015167ffffffffffffffff169050804211612dc45760405163189f57a760e11b815260048101839052602401612d19565b60a954604051634124beef60e01b8152600481018490526001600160a01b0390911690634124beef90602401600060405180830381600087803b158015612e0a57600080fd5b505af1925050508015612e1b575060015b612eb557600082815260e060209081526040808320838155600180820185905560028083018690556003909201805460ff1990811690915560ab90945282852085815590810185905501805474ffffffffffffffffffffffffffffffffffffffffff1916905560e180549092169091555183917fcd1f3eba521c46676cab303c79c9a68595d6f3efd65761b2588af919b7b2885b91a25050565b60405163189f57a760e11b815260048101839052602401612d19565b600082815260ab6020526040902054612f0057604051634cd2cb0d60e01b815260048101839052602401612d19565b612f0a828261432b565b801561318f57600082815260e060209081526040808320600290810154845260df8352818420825160a081018452815481526001820154818601529181015460ff161515828401526003810180548451818702810187019095528085529294919360608601939092830182828015612fa157602002820191906000526020600020905b815481526020019060010190808311612f8d575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015612ff957602002820191906000526020600020905b815481526020019060010190808311612fe5575b50505050508152505090506000805b825181101561316057600085815260e06020526040902060010154606084015180518390811061303a5761303a6159c6565b602002602001015111613077578260800151818151811061305d5761305d6159c6565b60200260200101518261307091906156ea565b9150613158565b82604001511561315357600083608001518281518110613099576130996159c6565b602002602001015190506000826000146130da5760608501516130bd600185615665565b815181106130cd576130cd6159c6565b60200260200101516130dd565b60005b600088815260e06020526040812060010154919250906130fe908390615665565b905060008287606001518681518110613119576131196159c6565b602002602001015161312b9190615665565b90508061313885846156fd565b613142919061572a565b61314c90876156ea565b9550505050505b613160565b600101613008565b5061316c816001613939565b5050600082815260e060205260409020600301805460ff191660011790556131bb565b600082815260e060205260408120818155600181018290556002810191909155600301805460ff191690555b505060e1805460ff19169055565b6000606d546000036131dc575060705490565b607054606d54606e546071546131f0614479565b6131fa9190615665565b61320491906156fd565b61321d906ec097ce7bc90715b34b9f10000000006156fd565b613227919061572a565b611a6f91906156ea565b6001600160a01b038216600090815260746020908152604080832054607283528184205460739093529083205490916ec097ce7bc90715b34b9f10000000009161327b9086615665565b61328591906156fd565b61328f919061572a565b61329991906156ea565b9392505050565b60006001600160e01b0319821663281ab37760e01b14806132d157506001600160e01b031982166312fcf92f60e11b145b80610992575061099282614491565b60003660146132ee336112d7565b80156132fa5750808210155b1561332a5760003661330c8385615665565b613317928290615be4565b61332091615c0e565b60601c9250505090565b339250505090565b60008054906101000a90046001600160a01b03166001600160a01b031663d09edf316040518163ffffffff1660e01b8152600401602060405180830381865afa158015613383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133a791906155c1565b60405163a883867d60e01b8152600481018490526001600160a01b038381166024830152919091169063a883867d90604401602060405180830381865afa1580156133f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061341a91906156c2565b6113fc576040516342abbb7760e01b8152600481018390526001600160a01b0382166024820152604401612d19565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080546001190161348d57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b8060000361094d576040516351cd1a8760e11b815260040160405180910390fd5b60006134be6131c9565b6070819055905060006134cf614479565b6071819055905060006001600160a01b03841615613520576134f384607054613231565b6001600160a01b038516600090815260746020908152604080832084905560705460739092529091205590505b60408051848152602081018490529081018290526001600160a01b038516907fa970b12b7ab9d055296c48cc861cf24cf1b06100b204a5a3a32d9208ca06cc919060600160405180910390a250505050565b6040516001600160a01b038381166024830152604482018390526135d191859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506144b6565b505050565b6001600160a01b03811660008181526074602090815260408083208054939055805160c08101909152928352909161370891810161361c6000546001600160a01b031690565b6001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061367d91906155c1565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156136ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136de91906155c1565b6001600160a01b031681526020018381526020014281526020016000815260200142815250614519565b60008054906101000a90046001600160a01b03166001600160a01b031663f1c6bdf86040518163ffffffff1660e01b8152600401602060405180830381865afa158015613759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377d91906155c1565b60405163e151fc6160e01b81523060048201526001600160a01b03919091169063e151fc6190602401600060405180830381600087803b1580156137c057600080fd5b505af11580156137d4573d6000803e3d6000fd5b50505050816001600160a01b03167fdf29796aad820e4bb192f3a8d631b76519bcd2cbe77cc85af20e9df53cece0868260405161381391815260200190565b60405180910390a25050565b6001600160a01b03821661384657604051630d03dd3d60e01b815260040160405180910390fd5b60a954604051634360af3d60e01b81526001600160a01b03848116600483015290911690634360af3d90602401602060405180830381865afa158015613890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138b491906155de565b8110156138d457604051634c79406b60e01b815260040160405180910390fd5b60a780546001600160a01b0319166001600160a01b03939093169290921790915560a855565b6040516001600160a01b0384811660248301528381166044830152606482018390526139339186918216906323b872dd9060840161359f565b50505050565b8161394381613493565b818060000361396557604051630e05ce7960e41b815260040160405180910390fd5b61396f60006134b4565b606f54421061398a57613982838561572a565b606e556139c3565b6000606e5442606f5461399d9190615665565b6139a791906156fd565b9050836139b482876156ea565b6139be919061572a565b606e55505b606e546000036139e657604051631db9af3b60e21b815260040160405180910390fd5b6139f083426156ea565b606f81905542607155606e5460408051878152602081018790529081019190915260608101919091527fe6ff9e5909ab32d770b5c8e779b77275ca8dda9d96cfb24d0287d80715dd02969060800160405180910390a150505050565b6000816000015182606001518360800151604051602001613a6f93929190615c41565b604051602081830303815290604052805190602001209050919050565b6154608167ffffffffffffffff161015613ab957604051634f0d3f4960e01b815260040160405180910390fd5b60a9805467ffffffffffffffff909216600160a01b027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015613b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b6f91906155de565b90506139338484613b8085856156ea565b6146da565b6060613b94608083901c61476a565b613b9d8361476a565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b6060613be76fffffffffffffffffffffffffffffffff602084901c1661476a565b613c028360601b6bffffffffffffffffffffffff191661476a565b604051602001613bb09291909182527fffffffffffffffff00000000000000000000000000000000000000000000000016602082015260280190565b606081600003613c655750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613c8f5780613c79816159dc565b9150613c889050600a8361572a565b9150613c69565b60008167ffffffffffffffff811115613caa57613caa6152c2565b6040519080825280601f01601f191660200182016040528015613cd4576020820181803683370190505b509050815b8515613d7957613cea600182615665565b90506000613cf9600a8861572a565b613d0490600a6156fd565b613d0e9088615665565b613d19906030615c6c565b905060008160f81b905080848481518110613d3657613d366159c6565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613d70600a8961572a565b97505050613cd9565b50949350505050565b613d8b826134b4565b6001600160a01b03821660009081526074602052604090205415613db257613db2826135d6565b6001600160a01b03821660009081526072602052604081208054839290613dda9084906156ea565b9250508190555080606d6000828254613df391906156ea565b90915550506040518181526001600160a01b038316907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001613813565b6000805460408051631e38d7bf60e31b815290516001600160a01b0380861693169163f1c6bdf89160048083019260209291908290030181865afa158015613e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ea391906155c1565b6001600160a01b03161492915050565b613ebb61490c565b6001600160a01b038216613ee257604051637280679360e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038416179055613f068161495a565b613f2357604051637511254160e01b815260040160405180910390fd5b80516001908155602082015160025560408201516003556060820151829190600490613f4f9082615cd5565b5060808201516004820190613f649082615cd5565b50905050816001600160a01b03167fd5f3f84c2e1816ce290af84d002663800b02f2985d770cdd335de76fd723b730826040516138139190615d95565b613fa961490c565b61094d816149ba565b613fba61490c565b613fc382613fd6565b613fcc81613a8c565b613933848461381f565b6001600160a01b038116613ffd576040516321ea035160e21b815260040160405180910390fd5b60a980546001600160a01b0319166001600160a01b0383169081179091556040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa158015614056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061407a91906155de565b60aa5550565b6001600160a01b0381166000818152603960205260409020546113fc919084906146da565b6001600160a01b0381166000818152603960205260408082205490516370a0823160e01b81523060048201529092906370a0823190602401602060405180830381865afa1580156140fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061411e91906155de565b9050818110156135d15760008054906101000a90046001600160a01b03166001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061419d91906155c1565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156141da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141fe91906155c1565b6001600160a01b0316836001600160a01b0316036143075760008054906101000a90046001600160a01b03166001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061428b91906155c1565b6001600160a01b031663759cc4b5306142a48486615665565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156142ea57600080fd5b505af11580156142fe573d6000803e3d6000fd5b50505050505050565b6040516346511acb60e11b81526001600160a01b0384166004820152602401612d19565b60a9546001600160a01b031661433f6132e0565b6001600160a01b031614614366576040516311b77b4360e11b815260040160405180910390fd5b600082815260ab60209081526040918290208251608081018452815480825260018301548285018190526002909301546001600160a01b038116838701819052600160a01b90910460ff16151560608401528551871515815294850193909352909386937f557deaca39aedd0a84876c0dcbcb715b9b68641286033d7e79a274bdfe8d8a40910160405180910390a4811561443d57600083815260ab6020526040902060020180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055505050565b5050600090815260ab602052604081208181556001810191909155600201805474ffffffffffffffffffffffffffffffffffffffffff19169055565b600042606f54111561448a57504290565b50606f5490565b60006001600160e01b031982166363a1750b60e01b1480610992575061099282614b16565b60006144cb6001600160a01b03841683614b3b565b905080516000141580156144f05750808060200190518101906144ee91906156c2565b155b156135d157604051635274afe760e01b81526001600160a01b0384166004820152602401612d19565b8061452381614b49565b81604001516039600084602001516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461456091906156ea565b909155505060388054600181018255600091909152825160069091027f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f456199810180546001600160a01b039384166001600160a01b0319918216811790925560208601517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619a8401805491909516911681179093556040808601517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619b840181905560608701517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619c85015560808701517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619d85015560a08701517f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619e909401939093555190917f21b8b94494ef1aff6ce0f5f3741800bdb27204fd430c1280b54d4cc653ae6f3a916146ce91815260200190565b60405180910390a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261472b8482614c41565b613933576040516001600160a01b0384811660248301526000604483015261476091869182169063095ea7b39060640161359f565b61393384826144b6565b6000808260001c9050806fffffffffffffffffffffffffffffffff169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f0808080808080808080808080808080808080808080808080808080808080808168161488e5761488e615714565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166111e757604051631afcd79f60e31b815260040160405180910390fd5b600081606001515160000361497157506000919050565b81608001515160000361498657506000919050565b815115801561499757506020820151155b80156149a557506040820151155b156149b257506000919050565b506001919050565b6001600160a01b0381161580614aae57506000546001600160a01b03166001600160a01b03166304baed9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a3891906155c1565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a9991906155c1565b6001600160a01b0316816001600160a01b0316145b15614acc57604051631c307bff60e31b815260040160405180910390fd5b606c80546001600160a01b0319166001600160a01b0383169081179091556040517f9904a32444ae0eb0bae2045baf588aa248f03f4fef600c18afd1d7e751614af890600090a250565b60006001600160e01b0319821663286309c760e01b1480610992575061099282614ce4565b606061329983836000614d19565b6000546001600160a01b03166001600160a01b031663f1c6bdf86040518163ffffffff1660e01b8152600401602060405180830381865afa158015614b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614bb691906155c1565b6001600160a01b03166308fd683d826040518263ffffffff1660e01b8152600401614be19190615dec565b6020604051808303816000875af1158015614c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c2491906156c2565b61094d5760405163349a262760e01b815260040160405180910390fd5b6000806000846001600160a01b031684604051614c5e9190615768565b6000604051808303816000865af19150503d8060008114614c9b576040519150601f19603f3d011682016040523d82523d6000602084013e614ca0565b606091505b5091509150818015614cca575080511580614cca575080806020019051810190614cca91906156c2565b8015611b9d5750505050506001600160a01b03163b151590565b60006001600160e01b0319821663e328951160e01b148061099257506301ffc9a760e01b6001600160e01b0319831614610992565b606081471015614d3e5760405163cd78605960e01b8152306004820152602401612d19565b600080856001600160a01b03168486604051614d5a9190615768565b60006040518083038185875af1925050503d8060008114614d97576040519150601f19603f3d011682016040523d82523d6000602084013e614d9c565b606091505b5091509150614dac868383614db6565b9695505050505050565b606082614dcb57614dc682614e12565b613299565b8151158015614de257506001600160a01b0384163b155b15614e0b57604051639996b31560e01b81526001600160a01b0385166004820152602401612d19565b5080613299565b805115614e225780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b828054828255906000526020600020908101928215614e76579160200282015b82811115614e76578251825591602001919060010190614e5b565b50614e82929150614ea7565b5090565b508054600082556006029060005260206000209081019061094d9190614ebc565b5b80821115614e825760008155600101614ea8565b5b80821115614e825780546001600160a01b03199081168255600182018054909116905560006002820181905560038201819055600482018190556005820155600601614ebd565b6001600160a01b038116811461094d57600080fd5b600060208284031215614f2b57600080fd5b813561329981614f04565b600060208284031215614f4857600080fd5b81356001600160e01b03198116811461329957600080fd5b60008060008060808587031215614f7657600080fd5b84359350602085013592506040850135614f8f81614f04565b9396929550929360600135925050565b60008083601f840112614fb157600080fd5b50813567ffffffffffffffff811115614fc957600080fd5b6020830191508360208260051b8501011115614fe457600080fd5b9250929050565b60008060006040848603121561500057600080fd5b83359250602084013567ffffffffffffffff81111561501e57600080fd5b61502a86828701614f9f565b9497909650939450505050565b60006020828403121561504957600080fd5b5035919050565b60005b8381101561506b578181015183820152602001615053565b50506000910152565b6000815180845261508c816020860160208601615050565b601f01601f19169290920160200192915050565b6020815260006132996020830184615074565b600080604083850312156150c657600080fd5b82356150d181614f04565b946020939093013593505050565b600080604083850312156150f257600080fd5b50508035926020909101359150565b6000806040838503121561511457600080fd5b82359150602083013561512681614f04565b809150509250929050565b60008151808452602080850194506020840160005b838110156151ae5761519b8783516001600160a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b60c0969096019590820190600101615146565b509495945050505050565b6020815260006132996020830184615131565b60008151808452602080850194506020840160005b838110156151ae578151875295820195908201906001016151e1565b6020815281516020820152602082015160408201526040820151151560608201526000606083015160a0608084015261523960c08401826151cc565b90506080840151601f198483030160a0850152611b9d82826151cc565b67ffffffffffffffff8116811461094d57600080fd5b60006020828403121561527e57600080fd5b813561329981615256565b60008060006060848603121561529e57600080fd5b833592506020840135915060408401356152b781614f04565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156152fb576152fb6152c2565b60405290565b604051610180810167ffffffffffffffff811182821017156152fb576152fb6152c2565b600082601f83011261533657600080fd5b813567ffffffffffffffff80821115615351576153516152c2565b604051601f8301601f19908116603f01168101908282118183101715615379576153796152c2565b8160405283815286602085880101111561539257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156153c757600080fd5b83356153d281614f04565b9250602084013567ffffffffffffffff808211156153ef57600080fd5b9085019060a0828803121561540357600080fd5b61540b6152d8565b82358152602083013560208201526040830135604082015260608301358281111561543557600080fd5b61544189828601615325565b60608301525060808301358281111561545957600080fd5b61546589828601615325565b6080830152509350604086013591508082111561548157600080fd5b5061548e86828701615325565b9150509250925092565b801515811461094d57600080fd5b6000806000806000606086880312156154be57600080fd5b85356154c981615498565b9450602086013567ffffffffffffffff808211156154e657600080fd5b6154f289838a01614f9f565b9096509450604088013591508082111561550b57600080fd5b5061551888828901614f9f565b969995985093965092949392505050565b60608152600061553c6060830186615131565b82810360208481019190915285518083528682019282019060005b8181101561557c5784516001600160a01b031683529383019391830191600101615557565b5050848103604086015261559081876151cc565b98975050505050505050565b600080604083850312156155af57600080fd5b82359150602083013561512681615498565b6000602082840312156155d357600080fd5b815161329981614f04565b6000602082840312156155f057600080fd5b5051919050565b83815260406020808301829052908201839052600090849060608401835b8681101561564357833561562881614f04565b6001600160a01b031682529282019290820190600101615615565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156109925761099261564f565b600181811c9082168061568c57607f821691505b6020821081036156ac57634e487b7160e01b600052602260045260246000fd5b50919050565b80516156bd81615498565b919050565b6000602082840312156156d457600080fd5b815161329981615498565b80516156bd81614f04565b808201808211156109925761099261564f565b80820281158282048414176109925761099261564f565b634e487b7160e01b600052601260045260246000fd5b60008261574757634e487b7160e01b600052601260045260246000fd5b500490565b6000815161575e818560208601615050565b9290920192915050565b6000825161577a818460208701615050565b9190910192915050565b7f446174612061737365727465643a20307800000000000000000000000000000081526000865160206157bd8260118601838c01615050565b7f20666f72206461746149643a203078000000000000000000000000000000000060119285019283015287516157f881838501848c01615050565b7f20616e642061737365727465723a203078000000000000000000000000000000920181810192909252865161583481603185018a8501615050565b7f2061742074696d657374616d703a2000000000000000000000000000000000006031939091019283015285516158718160408501848a01615050565b7f20696e207468652044617461417373657274657220636f6e747261637420617460409390910192830152506204060f60eb1b60608201526155906158b9606383018661574c565b7f2069732076616c69642e000000000000000000000000000000000000000000008152600a0190565b60006101208083526158f68184018d615074565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b80516156bd81615256565b600080600080600060a0868803121561597357600080fd5b855161597e81614f04565b602087015190955061598f81614f04565b6040870151606088015191955093506159a781614f04565b60808701519092506159b881615256565b809150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b6000600182016159ee576159ee61564f565b5060010190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115615a2757600080fd5b8260051b80836020870137939093016020019392505050565b878152866020820152851515604082015260a060608201526000615a6860a0830186886159f5565b8281036080840152615a7b8185876159f5565b9a9950505050505050505050565b600060a08284031215615a9b57600080fd5b615aa36152d8565b90508151615ab081615498565b81526020820151615ac081615498565b60208201526040820151615ad381615498565b60408201526060820151615ae681614f04565b60608201526080820151615af981614f04565b608082015292915050565b60006102008284031215615b1757600080fd5b615b1f615301565b615b298484615a89565b8152615b3760a084016156df565b6020820152615b4860c08401615950565b6040820152615b5960e084016156b2565b6060820152610100615b6c8185016156df565b6080830152610120615b7f818601615950565b60a0840152610140615b928187016156b2565b60c08501526101608087015160e0860152610180870151848601526101a087015183860152615bc46101c088016156df565b82860152615bd56101e088016156df565b90850152509195945050505050565b60008085851115615bf457600080fd5b83861115615c0157600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015611ba05760149490940360031b84901b1690921692915050565b838152606060208201526000615c5a6060830185615074565b8281036040840152614dac8185615074565b60ff81811683821601908111156109925761099261564f565b601f8211156135d1576000816000526020600020601f850160051c81016020861015615cae5750805b601f850160051c820191505b81811015615ccd57828155600101615cba565b505050505050565b815167ffffffffffffffff811115615cef57615cef6152c2565b615d0381615cfd8454615678565b84615c85565b602080601f831160018114615d385760008415615d205750858301515b600019600386901b1c1916600185901b178555615ccd565b600085815260208120601f198616915b82811015615d6757888601518255948401946001909101908401615d48565b5085821015615d855787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081528151602082015260208201516040820152604082015160608201526000606083015160a06080840152615dcf60c0840182615074565b90506080840151601f198483030160a0850152611b9d8282615074565b60c0810161099282846001600160a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a0830152505056fea26469706673582212201c472ecf4713485c54e6e1ae6b31e61a170118b132f8b95744447149d6bff1a664736f6c63430008170033",
    "sourceMap": "1461:13400:134:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4737:121:137;;;;;;:::i;:::-;;:::i;:::-;;;571:25:265;;;559:2;544:18;4737:121:137;;;;;;;;1651:377:134;;;;;;:::i;:::-;;:::i;:::-;;;1063:14:265;;1056:22;1038:41;;1026:2;1011:18;1651:377:134;898:187:265;6041:1635:134;;;;;;:::i;:::-;;:::i;2531:23:137:-;;;;;;2567:29:140;;;;;-1:-1:-1;;;;;2567:29:140;;;;;;-1:-1:-1;;;;;1909:55:265;;;1891:74;;1879:2;1864:18;2567:29:140;1729:242:265;8190:246:106;;;;;;:::i;:::-;;:::i;:::-;;7675:244;;;;;;:::i;:::-;;:::i;3171:54:140:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3171:54:140;;;-1:-1:-1;;;3171:54:140;;;;;;;;;;;;;;;3268:25:265;;;3324:2;3309:18;;3302:34;;;;-1:-1:-1;;;;;3372:55:265;3367:2;3352:18;;3345:83;3471:14;3464:22;3459:2;3444:18;;3437:50;3255:3;3240:19;;3043:450;6286:695:137;;;;;;:::i;:::-;;:::i;4414:177:138:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4552:32:138;4525:4;4552:32;;;:24;:32;;;;;;;4414:177;7025:171:137;;;:::i;3279:42:134:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3879:25:265;;;3935:2;3920:18;;3913:34;;;;3990:14;3983:22;3963:18;;;3956:50;3867:2;3852:18;3279:42:134;3683:329:265;7056:100:106;;;:::i;:::-;;;;;;;:::i;4420:206:140:-;;;;;;:::i;:::-;;:::i;:::-;;;;4966:14:265;;4959:22;4941:41;;5013:2;4998:18;;4991:34;;;;4914:18;4420:206:140;4773:258:265;6662:224:106;6751:17;:30;6795;;6839;;6662:224;;;5238:25:265;;;5294:2;5279:18;;5272:34;;;;5322:18;;;5315:34;5226:2;5211:18;6662:224:106;5036:319:265;6923:96:106;;;:::i;12489:237::-;;;;;;:::i;:::-;;:::i;5004:188:140:-;;;;;;:::i;:::-;;:::i;3568:28:134:-;;;;;;;;;7906:291;;;;;;:::i;:::-;;:::i;7240:145:137:-;;;;;;:::i;:::-;;:::i;7443:195:106:-;;;;;;:::i;:::-;;:::i;4592:101:137:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4671:15:137;4648:4;4671:15;;;:9;:15;;;;;;;4592:101;2438:27;;;;;-1:-1:-1;;;;;2438:27:137;;;4215:146:138;;;:::i;:::-;;;;;;;:::i;5101:108:134:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3211:22::-;;;;;;6508:117:106;;;:::i;2698:22:137:-;;;;;;3418:67:134;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9184:25:265;;;9240:2;9225:18;;9218:34;;;;9268:18;;;9261:34;9338:14;9331:22;9326:2;9311:18;;9304:50;9171:3;9156:19;3418:67:134;8959:401:265;13079:210:106;;;:::i;4902:764:137:-;;;;;;:::i;:::-;;:::i;5419:166:140:-;;;;;;:::i;:::-;;:::i;2715:23::-;;;;;;4680:164;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:26:140;;;;:13;:26;;;;;;;;;4804:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4804:33:140;;;;;;;;;-1:-1:-1;;;4804:33:140;;;;;;;;;;;;4680:164;;;;;;;9978:13:265;;9960:32;;10048:4;10036:17;;;10030:24;10008:20;;;10001:54;10115:4;10103:17;;;10097:24;-1:-1:-1;;;;;10093:73:265;10071:20;;;10064:103;10237:4;10225:17;;;10219:24;10212:32;10205:40;10183:20;;;10176:70;;;;9947:3;9932:19;;9749:503;2828:37:140;;;;;-1:-1:-1;;;;;2828:37:140;;;7691:3148;;;;;;:::i;:::-;;:::i;5257:183:134:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;11164:13:265;;11146:32;;11234:4;11222:17;;;11216:24;11194:20;;;11187:54;11297:4;11285:17;;;11279:24;11257:20;;;11250:54;11374:4;11362:17;;;11356:24;11349:32;11342:40;11320:20;;;11313:70;;;;11133:3;11118:19;;10913:476;9849:559:134;;;;;;:::i;:::-;;:::i;2785:22:137:-;;;;;;7144:429:138;;;;;;:::i;:::-;;:::i;4237:712:134:-;;;;;;:::i;:::-;;:::i;7193:108:106:-;7238:16;7273:21;-1:-1:-1;;;;;7273:21:106;7193:108;;2943:31:140;;;;;-1:-1:-1;;;2943:31:140;;;;;;;;;14528:18:265;14516:31;;;14498:50;;14486:2;14471:18;2943:31:140;14354:200:265;8245:1402:134;;;;;;:::i;:::-;;:::i;7956:197:106:-;;;;;;:::i;:::-;;:::i;2325:66:140:-;;2365:26;2325:66;;5246:119;;;;;;:::i;:::-;;:::i;4644:2447:138:-;;;:::i;:::-;;;;;;;;;:::i;14758:101:134:-;;;;;;:::i;:::-;6286:695:137;;3098:32:140;;;;;;10456:1094:134;;;;;;:::i;:::-;;:::i;11739:2804::-;;;;;;:::i;:::-;;:::i;4737:121:137:-;4790:4;4813:38;4821:4;4827:23;:21;:23::i;:::-;4813:7;:38::i;:::-;4806:45;4737:121;-1:-1:-1;;4737:121:137:o;1651:377:134:-;1822:4;-1:-1:-1;;;;;;1849:54:134;;-1:-1:-1;;;1849:54:134;;:120;;-1:-1:-1;;;;;;;1919:50:134;;-1:-1:-1;;;1919:50:134;1849:120;:172;;;;1985:36;2009:11;1985:23;:36::i;6041:1635::-;6218:19;2365:26:140;3942:168:106;3974:21;;;;;;;;-1:-1:-1;;;;;3974:21:106;-1:-1:-1;;;;;3974:32:106;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:100;;-1:-1:-1;;;3974:100:106;;4049:4;3974:100;;;17461:74:265;17551:18;;;17544:34;;;-1:-1:-1;;;;;3974:49:106;;;;;;;17434:18:265;;3974:100:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4088:12;:10;:12::i;:::-;3942:18;:168::i;:::-;6353:16:134::1;::::0;::::1;;6349:111;;;6392:57;;-1:-1:-1::0;;;6392:57:134::1;;;;;;;;;;;6349:111;-1:-1:-1::0;;;;;6787:25:134;::::1;6807:4;6787:25;:85:::0;::::1;;;-1:-1:-1::0;6860:12:134::1;::::0;6840:15:::1;::::0;-1:-1:-1;;;;;6840:15:134;;::::1;6860:12:::0;::::1;6832:40;6787:85;6770:226;;;6920:65;;-1:-1:-1::0;;;6920:65:134::1;;;;;;;;;;;6770:226;7069:10;::::0;:15;;:42:::1;;;7101:10;;7088:9;:23;;7069:42;7065:128;;;7134:48;;-1:-1:-1::0;;;7134:48:134::1;;;;;;;;;;;7065:128;7328:55;7342:6:::0;7358:13;7374:8;7328:13:::1;:55::i;:::-;7424:96;::::0;;::::1;::::0;::::1;::::0;;7462:15:::1;7424:96:::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;7424:96:134;;;;;;7393:28;;;:15:::1;:28:::0;;;;;;:127;;;;;;7424:96;7393:127;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;7393:127:134::1;::::0;::::1;;::::0;;;::::1;::::0;;;7536:99;;17952:25:265;;;17993:18;;;17986:34;;;7393:28:134;;-1:-1:-1;7424:96:134;;7393:28;;7536:99:::1;::::0;17925:18:265;7536:99:134::1;;;;;;;-1:-1:-1::0;7646:16:134::1;:23:::0;;-1:-1:-1;;7646:23:134::1;7665:4;7646:23;::::0;;6041:1635;;-1:-1:-1;;;;6041:1635:134:o;8190:246:106:-;4307:18;4328:21;;:34;;;-1:-1:-1;;;4328:34:106;;;;8310:4;;4307:18;-1:-1:-1;;;;;4328:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;4328:92:106;;4399:4;4328:92;;;17461:74:265;17551:18;;;17544:34;;;-1:-1:-1;;;;;4328:49:106;;;;;;;17434:18:265;;4328:92:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4307:113;;4430:127;4462:21;;;;;;;;-1:-1:-1;;;;;4462:21:106;-1:-1:-1;;;;;4462:32:106;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4462:47:106;;4510:10;4462:59;;;;;;;;;;;;;571:25:265;;559:2;544:18;;425:177;4430:127:106;8330:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;8330:21:106::1;-1:-1:-1::0;;;;;8330:32:106::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8330:62:106::1;;8406:4;8412:7;;8330:99;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4297:278:::0;8190:246;;;;:::o;7675:244::-;4307:18;4328:21;;:34;;;-1:-1:-1;;;4328:34:106;;;;7794:4;;4307:18;-1:-1:-1;;;;;4328:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;4328:92:106;;4399:4;4328:92;;;17461:74:265;17551:18;;;17544:34;;;-1:-1:-1;;;;;4328:49:106;;;;;;;17434:18:265;;4328:92:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4307:113;;4430:127;4462:21;;;;;;;;-1:-1:-1;;;;;4462:21:106;-1:-1:-1;;;;;4462:32:106;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:127;7814:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;7814:21:106::1;-1:-1:-1::0;;;;;7814:32:106::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7814:61:106::1;;7889:4;7895:7;;7814:98;;;;;;;;;;;;;;;;;:::i;6286:695:137:-:0;3251:21:27;:19;:21::i;:::-;6390:6:137::1;2296:26:138;2315:6;2296:18;:26::i;:::-;6412:14:137::2;6429:12;:10;:12::i;:::-;6412:29;;6517:15;6525:6;6517:7;:15::i;:::-;-1:-1:-1::0;;;;;6582:17:137;::::2;;::::0;;;:9:::2;:17;::::0;;;;:27;;6603:6;;6582:17;:27:::2;::::0;6603:6;;6582:27:::2;:::i;:::-;;;;;;;;6662:6;6647:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6727:12:137::2;::::0;6720:49:::2;::::0;-1:-1:-1;;;;;6727:12:137::2;6754:6:::0;6762;6720:33:::2;:49::i;:::-;-1:-1:-1::0;;;;;6828:15:137;::::2;;::::0;;;:7:::2;:15;::::0;;;;;:20;6824:111:::2;;6898:26;6917:6;6898:18;:26::i;:::-;6959:6;-1:-1:-1::0;;;;;6950:24:137::2;;6967:6;6950:24;;;;571:25:265::0;;559:2;544:18;;425:177;6950:24:137::2;;;;;;;;6402:579;3282:1:27::1;3293:20:::0;1805:1;2388:30;3969:23;3716:283;7025:171:137;3251:21:27;:19;:21::i;:::-;7089:17:137::1;7109:12;:10;:12::i;:::-;7089:32;;7132:18;7140:9;7132:7;:18::i;:::-;7160:29;7179:9;7160:18;:29::i;:::-;7079:117;3293:20:27::0;1805:1;2388:30;3969:23;3716:283;3293:20;7025:171:137:o;7056:100:106:-;7094:13;7126:17;:23;;7119:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7056:100;:::o;4420:206:140:-;4479:4;4509:26;;;:13;:26;;;;;:35;;;4479:4;;-1:-1:-1;;;4509:35:140;;;;4504:59;;-1:-1:-1;4554:5:140;;;;-1:-1:-1;4420:206:140;-1:-1:-1;4420:206:140:o;4504:59::-;-1:-1:-1;;4587:26:140;;;;:13;:26;;;;;4581:4;4587:31;;;;4581:4;;4420:206::o;6923:96:106:-;6959:13;6991:17;:21;;6984:28;;;;;:::i;12489:237::-;12641:4;12668:21;;:51;;-1:-1:-1;;;12668:51:106;;-1:-1:-1;;;;;1909:55:265;;;12668:51:106;;;1891:74:265;12668:21:106;;;;:40;;1864:18:265;;12668:51:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5004:188:140:-;3367:21:106;;:34;;;-1:-1:-1;;;3367:34:106;;;;3335:105;;-1:-1:-1;;;;;3367:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3367:47:106;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:105;5135:50:140::1;5162:12;5176:8;5135:26;:50::i;:::-;5004:188:::0;;:::o;7906:291:134:-;3367:21:106;;:34;;;-1:-1:-1;;;3367:34:106;;;;3335:105;;-1:-1:-1;;;;;3367:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3335:105;3251:21:27::1;:19;:21::i;:::-;8032:6:134::2;2296:26:138;2315:6;2296:18;:26::i;:::-;8054:69:134::3;8087:12;:10;:12::i;:::-;8054:15;::::0;-1:-1:-1;;;;;8054:15:134::3;::::0;8109:4:::3;8116:6:::0;8054:32:::3;:69::i;:::-;8165:15;::::0;8139:51:::3;::::0;571:25:265;;;-1:-1:-1;;;;;8165:15:134;;::::3;::::0;8139:51:::3;::::0;559:2:265;544:18;8139:51:134::3;;;;;;;3282:1:27::2;3293:20:::1;1805:1:::0;2388:30;3969:23;3716:283;7240:145:137;3367:21:106;;:34;;;-1:-1:-1;;;3367:34:106;;;;3335:105;;-1:-1:-1;;;;;3367:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3335:105;7349:29:137::1;7361:6;7369:8;7349:11;:29::i;7443:195:106:-:0;4307:18;4328:21;;:34;;;-1:-1:-1;;;4328:34:106;;;;7543:4;;4307:18;-1:-1:-1;;;;;4328:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;4328:92:106;;4399:4;4328:92;;;17461:74:265;17551:18;;;17544:34;;;-1:-1:-1;;;;;4328:49:106;;;;;;;17434:18:265;;4328:92:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4307:113;;4430:127;4462:21;;;;;;;;-1:-1:-1;;;;;4462:21:106;-1:-1:-1;;;;;4462:32:106;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:127;7563:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;7563:21:106::1;-1:-1:-1::0;;;;;7563:32:106::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;::::0;-1:-1:-1;;;7563:68:106;;::::1;::::0;::::1;20046:25:265::0;;;-1:-1:-1;;;;;20107:55:265;;;20087:18;;;20080:83;7563:54:106;;;::::1;::::0;::::1;::::0;20019:18:265;;7563:68:106::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4297:278:::0;7443:195;;;:::o;4215:146:138:-;4303:21;4347:7;4340:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4340:14:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:146;:::o;5101:108:134:-;5151:10;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5151:10:134;5180:22;;;;:14;:22;;;;;;;;;5173:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5180:22;;5173:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5101:108;;;:::o;6508:117:106:-;6551:7;6577:41;6600:17;6577:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:41::i;:::-;6570:48;;6508:117;:::o;13079:210::-;13212:7;13242:21;;;;;;;;;-1:-1:-1;;;;;13242:21:106;-1:-1:-1;;;;;13242:38:106;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4902:764:137:-;5061:4;5004:6;2296:26:138;2315:6;2296:18;:26::i;:::-;5034:8:137::1;2170;2182:1;2170:13:::0;2166:94:::1;;2206:43;;-1:-1:-1::0;;;2206:43:137::1;;;;;;;;;;;2166:94;5164:10:::2;;5146:15;:28;5142:67;;;5197:1;5190:8;;;;5142:67;5295:10;::::0;5266:26:::2;5284:8:::0;5266:15:::2;:26;:::i;:::-;:39;5262:173;;;5409:15;5396:10;;:28;;;;:::i;:::-;5385:39;;5262:173;5481:11;;5496:1;5481:16:::0;5477:120:::2;;5576:10;::::0;5556:17:::2;5565:8:::0;5556:6;:17:::2;:::i;:::-;:30;;;;:::i;:::-;5549:37;;;;5477:120;5648:11;::::0;5634:10:::2;::::0;5614:17:::2;5623:8:::0;5614:6;:17:::2;:::i;:::-;:30;;;;:::i;:::-;5613:46;;;;:::i;:::-;5606:53;;2269:1;2332::138::1;4902:764:137::0;;;;;:::o;5419:166:140:-;3367:21:106;;:34;;;-1:-1:-1;;;3367:34:106;;;;3335:105;;-1:-1:-1;;;;;3367:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3335:105;5536:42:140::1;5565:12;5536:28;:42::i;7691:3148::-:0;7849:19;2365:26;3942:168:106;3974:21;;;;;;;;-1:-1:-1;;;;;3974:21:106;-1:-1:-1;;;;;3974:32:106;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3942:168;-1:-1:-1;;;;;7895:22:140;::::1;::::0;:48:::1;;7935:8;7895:48;;;7920:12;:10;:12::i;:::-;7884:59:::0;-1:-1:-1;7977:4:140::1;-1:-1:-1::0;;;;;7957:25:140;::::1;::::0;7953:1143:::1;;8090:11;::::0;8047:15:::1;::::0;:40:::1;::::0;-1:-1:-1;;;8047:40:140;;8081:4:::1;8047:40;::::0;::::1;1891:74:265::0;-1:-1:-1;;;;;8047:15:140;;::::1;::::0;:25:::1;::::0;1864:18:265;;8047:40:140::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;8043:203;;;8148:83;;-1:-1:-1::0;;;8148:83:140::1;;;;;;;;;;;8043:203;7953:1143;;;8320:15;::::0;8527:11:::1;::::0;8359:197:::1;::::0;;-1:-1:-1;;;;;21700:15:265;;;8359:197:140::1;::::0;::::1;21682:34:265::0;8500:4:140::1;21732:18:265::0;;;21725:43;21784:18;;;;21777:34;;;;8359:197:140;;;;;;;;;;21594:18:265;;;;8359:197:140;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;8359:197:140::1;-1:-1:-1::0;;;8359:197:140::1;::::0;;8312:258;;-1:-1:-1;;;;8320:15:140;::::1;::::0;8312:258:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8276:294;;;;8806:7;8805:8;:58;;;;8832:1;8818:4;:11;:15;:44;;;;;8849:4;8838:24;;;;;;;;;;;;:::i;:::-;8837:25;8818:44;8805:123;;;-1:-1:-1::0;8895:15:140::1;::::0;-1:-1:-1;;;;;8895:15:140::1;8887:36;:41:::0;8805:123:::1;8784:302;;;8988:83;;-1:-1:-1::0;;;8988:83:140::1;;;;;;;;;;;8784:302;8262:834;;7953:1143;9151:2;::::0;9156:11:::1;::::0;9105:15:::1;::::0;:63:::1;::::0;-1:-1:-1;;;;;9105:15:140;;::::1;::::0;9151:2;::::1;::::0;9105:37:::1;:63::i;:::-;9783:2;::::0;-1:-1:-1;;;;;9783:2:140::1;:14;9950:28;9972:5:::0;9950:21:::1;:28::i;:::-;10031:29;10053:6;10031:21;:29::i;:::-;10115:38;10144:8;10115:28;:38::i;:::-;10206:42;10232:15;10206:25;:42::i;:::-;10321:43;10358:4;10321:28;:43::i;:::-;9811:597;;;;;;;;;;;;:::i;:::-;;::::0;;;;::::1;-1:-1:-1::0;;9811:597:140;;;;;;;10521:17:::1;::::0;10552:15:::1;::::0;10581:11:::1;::::0;10606:17:::1;::::0;9783:888:::1;::::0;;;-1:-1:-1;;;;;;9783:888:140;;;::::1;::::0;10422:8;;10452:4:::1;::::0;10479:1:::1;::::0;-1:-1:-1;;;10521:17:140;;::::1;;;::::0;-1:-1:-1;;;;;10552:15:140;;::::1;::::0;10479:1;;9783:888:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10722:45;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;10722:45:140;;::::1;::::0;;;;;;-1:-1:-1;10722:45:140;;;;;;10681:26;;;:13:::1;:26:::0;;;;;;:86;;;;;;10722:45;10681:86;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;::::1;;-1:-1:-1::0;;;10681:86:140::1;-1:-1:-1::0;;10681:86:140;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;10782:50;;9769:902;;-1:-1:-1;9769:902:140;;10736:6;;10782:50:::1;::::0;::::1;::::0;10744:5;571:25:265;;559:2;544:18;;425:177;10782:50:140::1;;;;;;;;7691:3148:::0;;;;;;:::o;5257:183:134:-;5351:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5351:31:134;-1:-1:-1;5405:28:134;;;;:15;:28;;;;;;;;;5398:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5257:183::o;9849:559::-;3251:21:27;:19;:21::i;:::-;9952:6:134::1;2296:26:138;2315:6;2296:18;:26::i;:::-;10078:16:134::2;::::0;::::2;;10074:130;;;10117:76;;-1:-1:-1::0;;;10117:76:134::2;;;;;;;;;;;10074:130;10214:14;10231:12;:10;:12::i;:::-;10214:29;;10254:22;10261:6;10269;10254;:22::i;:::-;10340:12;::::0;10333:68:::2;::::0;-1:-1:-1;;;;;10340:12:134::2;10371:6:::0;10387:4:::2;10394:6:::0;10333:37:::2;:68::i;:::-;9964:444;3282:1:27::1;3293:20:::0;1805:1;2388:30;3969:23;3716:283;7144:429:138;7292:65;7343:12;:10;:12::i;:::-;7292:29;:65::i;:::-;7287:165;;7388:53;;-1:-1:-1;;;7388:53:138;;;;;;;;;;;7287:165;-1:-1:-1;;;;;7525:31:138;;;;;;:24;:31;;;;;:41;;7560:6;;7525:31;:41;;7560:6;;7525:41;:::i;:::-;;;;-1:-1:-1;;;;7144:429:138:o;4237:712:134:-;8870:21:25;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:25;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:25;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:25;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:25;;;;;4979:67;4494:38:134::1;4508:13;4523:8;4494:13;:38::i;:::-;4557:24;4595:20:::0;4629:16:::1;4659:14:::0;4687:15:::1;4726:10;4715:65;;;;;;;;;;;;:::i;:::-;4543:237;;;;;;;;;;4791:41;4815:16;4791:23;:41::i;:::-;4842:100;4889:12;4903:11;4916:6;4924:8;4842:33;:100::i;:::-;4484:465;;;;;5070:14:25::0;5066:101;;;5100:23;;-1:-1:-1;;5100:23:25;;;5142:14;;-1:-1:-1;14498:50:265;;5142:14:25;;14486:2:265;14471:18;5142:14:25;;;;;;;4092:1081;;;;;4237:712:134;;;:::o;8245:1402::-;8417:4;3367:21:106;;:34;;;-1:-1:-1;;;3367:34:106;;;;3335:105;;-1:-1:-1;;;;;3367:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3335:105;8455:14:134;8508:1:::1;8491:18:::0;::::1;::::0;:41:::1;;;8530:2;8513:14;:19;8491:41;8487:131;;;8555:52;;-1:-1:-1::0;;;8555:52:134::1;;;;;;;;;;;8487:131;8632:40:::0;;::::1;8628:132;;8695:54;;-1:-1:-1::0;;;8695:54:134::1;;;;;;;;;;;8628:132;8770:21;8794:15;;8810:1;8794:18;;;;;;;:::i;:::-;;;;;;;8770:42;;8843:1;8826:14;:18;8822:351;;;8874:1;8860:303;8881:14;8877:1;:18;8860:303;;;8949:14;;8964:1;8949:17;;;;;;;:::i;:::-;;;;;;;8924:14;;8943:1;8939;:5;;;;:::i;:::-;8924:21;;;;;;;:::i;:::-;;;;;;;:42;8920:172;;8997:76;;-1:-1:-1::0;;;8997:76:134::1;;;;;;;;;;;8920:172;9130:15;;9146:1;9130:18;;;;;;;:::i;:::-;;;;;;;9110:38;;;;;:::i;:::-;::::0;-1:-1:-1;8897:3:134::1;;8860:303;;;;8822:351;9183:11;9197:10;;9183:24;;9243:153;;;;;;;;9260:14;9243:153;;;;9288:16;9243:153;;;;9318:11;9243:153;;;;;;9343:14;;9243:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;9243:153:134;;;-1:-1:-1;9243:153:134::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;9371:15;;;;;;9243:153;::::1;::::0;9371:15;;9243:153;9371:15;9243:153;::::1;;::::0;::::1;::::0;;;-1:-1:-1;9243:153:134;;;;-1:-1:-1;;9218:22:134;;;:14:::1;:22;::::0;;;;;;;;:178;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;9218:178:134::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;:22;;-1:-1:-1;9218:178:134::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;9218:178:134::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;9406:10:134::1;:12:::0;;;-1:-1:-1;9406:10:134::1;:12;::::0;::::1;:::i;:::-;;;;;;9458:6;9434:180;9478:14;9506:16;9536:11;9561:14;;9589:15;;9434:180;;;;;;;;;;;;:::i;:::-;;;;;;;;9633:6:::0;8245:1402;-1:-1:-1;;;;;;;;8245:1402:134:o;7956:197:106:-;4307:18;4328:21;;:34;;;-1:-1:-1;;;4328:34:106;;;;8057:4;;4307:18;-1:-1:-1;;;;;4328:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;4328:92:106;;4399:4;4328:92;;;17461:74:265;17551:18;;;17544:34;;;-1:-1:-1;;;;;4328:49:106;;;;;;;17434:18:265;;4328:92:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4307:113;;4430:127;4462:21;;;;;;;;-1:-1:-1;;;;;4462:21:106;-1:-1:-1;;;;;4462:32:106;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:127;8077:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;8077:21:106::1;-1:-1:-1::0;;;;;8077:32:106::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;::::0;-1:-1:-1;;;8077:69:106;;::::1;::::0;::::1;20046:25:265::0;;;-1:-1:-1;;;;;20107:55:265;;;20087:18;;;20080:83;8077:55:106;;;::::1;::::0;::::1;::::0;20019:18:265;;8077:69:106::1;19872:297:265::0;5246:119:140;3367:21:106;;:34;;;-1:-1:-1;;;3367:34:106;;;;3335:105;;-1:-1:-1;;;;;3367:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3335:105;5330:28:140::1;5351:6;5330:20;:28::i;4644:2447:138:-:0;4726:21;4749:16;4767:13;4869:65;4920:12;:10;:12::i;4869:65::-;4864:165;;4965:53;;-1:-1:-1;;;4965:53:138;;;;;;;;;;;4864:165;5109:7;:14;5089:17;;5109:14;5192:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5192:27:138;;5159:60;;5229:28;5271:12;5260:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5260:24:138;;5229:55;;5294:26;5342:12;5323:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5323:32:138;;;;;;;;;;;;;;;;;5294:61;;5371:6;5366:618;5383:12;5379:1;:16;5366:618;;;5426:7;5434:1;5426:10;;;;;;;;:::i;:::-;;;;;;;;;;5416:20;;;;;;;;5426:10;;;;;;;5416:20;;-1:-1:-1;;;;;5416:20:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;:4;;5421:1;;5416:7;;;;;;:::i;:::-;;;;;;:20;;;;5450:10;5479:6;5474:192;5491:10;5487:1;:14;5474:192;;;5550:4;5555:1;5550:7;;;;;;;;:::i;:::-;;;;;;;:20;;;-1:-1:-1;;;;;5530:40:138;:13;5544:1;5530:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5530:40:138;;5526:126;;5602:4;5594:12;;5628:5;;5526:126;5503:3;;5474:192;;;;5684:5;5679:295;;5796:4;5801:1;5796:7;;;;;;;;:::i;:::-;;;;;;;:20;;;5768:13;5782:10;5768:25;;;;;;;;:::i;:::-;;;;;;:48;-1:-1:-1;;;;;5768:48:138;;;-1:-1:-1;;;;;5768:48:138;;;;;5883:24;:46;5908:4;5913:1;5908:7;;;;;;;;:::i;:::-;;;;;;;:20;;;-1:-1:-1;;;;;5883:46:138;-1:-1:-1;;;;;5883:46:138;;;;;;;;;;;;;5834:14;5849:10;5834:26;;;;;;;;:::i;:::-;;;;;;;;;;:95;5947:12;;;;:::i;:::-;;;;5679:295;-1:-1:-1;5397:3:138;;5366:618;;;-1:-1:-1;6036:14:138;6043:7;;6036:14;:::i;:::-;6114:23;6154:10;6140:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6140:25:138;;6114:51;;6175:21;6210:10;6199:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6199:22:138;;6175:46;;6237:6;6232:715;6249:10;6245:1;:14;6232:715;;;6292:13;6306:1;6292:16;;;;;;;;:::i;:::-;;;;;;;6280:6;6287:1;6280:9;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1;;;;;6280:28:138;;;-1:-1:-1;;;;;6280:28:138;;;;;6335:14;6350:1;6335:17;;;;;;;;:::i;:::-;;;;;;;6322:7;6330:1;6322:10;;;;;;;;:::i;:::-;;;;;;:30;;;;;6455:68;6498:12;:10;:12::i;:::-;6513:6;6520:1;6513:9;;;;;;;;:::i;:::-;;;;;;;6455:21;:68::i;:::-;6906:30;6926:6;6933:1;6926:9;;;;;;;;:::i;:::-;;;;;;;6906:19;:30::i;:::-;6261:3;;6232:715;;;-1:-1:-1;7062:4:138;;7068:6;;-1:-1:-1;7076:7:138;;-1:-1:-1;4644:2447:138;-1:-1:-1;;;;;4644:2447:138:o;10456:1094:134:-;3367:21:106;;:34;;;-1:-1:-1;;;3367:34:106;;;;3335:105;;-1:-1:-1;;;;;3367:21:106;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3335:105;10731:3:134::1;10686:26:::0;;;:13:::1;:26;::::0;;;;:33;10682:182:::1;;10758:95;::::0;-1:-1:-1;;;10758:95:134;;::::1;::::0;::::1;571:25:265::0;;;544:18;;10758:95:134::1;;;;;;;;10682:182;10917:2;::::0;:28:::1;::::0;-1:-1:-1;;;10917:28:134;;::::1;::::0;::::1;571:25:265::0;;;10874:28:134::1;::::0;-1:-1:-1;;;;;10917:2:134::1;::::0;:15:::1;::::0;544:18:265;;10917:28:134::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;10874:86;;;;10994:23;10975:15;:42;10971:140;;11040:60;::::0;-1:-1:-1;;;11040:60:134;;::::1;::::0;::::1;571:25:265::0;;;544:18;;11040:60:134::1;425:177:265::0;10971:140:134::1;11125:2;::::0;:31:::1;::::0;-1:-1:-1;;;11125:31:134;;::::1;::::0;::::1;571:25:265::0;;;-1:-1:-1;;;;;11125:2:134;;::::1;::::0;:18:::1;::::0;544::265;;11125:31:134::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;11121:423;;11367:28;::::0;;;:15:::1;:28;::::0;;;;;;;11360:35;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;11360:35:134;;::::1;::::0;;;11416:13:::1;:26:::0;;;;;;11409:33;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;11409:33:134;;;11456:16:::1;:24:::0;;;;::::1;::::0;;;11499:34;11383:11;;11499:34:::1;::::0;::::1;5004:188:140::0;;:::o;11121:423:134:-:1;11268:60;::::0;-1:-1:-1;;;11268:60:134;;::::1;::::0;::::1;571:25:265::0;;;544:18;;11268:60:134::1;425:177:265::0;11739:2804:134;12033:3;11988:26;;;:13;:26;;;;;:33;11984:182;;12060:95;;-1:-1:-1;;;12060:95:134;;;;;571:25:265;;;544:18;;12060:95:134;425:177:265;11984:182:134;12257:64;12289:11;12302:18;12257:31;:64::i;:::-;12420:18;12416:1974;;;12664:22;12720:28;;;:15;:28;;;;;;;;:37;;;;;12705:53;;:14;:53;;;;;12664:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12705:53;;12664:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12772:17;12809:6;12804:1246;12821:25;;12817:29;;12804:1246;;;12952:28;;;;:15;:28;;;;;:42;;;12896:25;;;;:28;;12922:1;;12896:28;;;;;;:::i;:::-;;;;;;;:98;12871:1165;;13114:11;:26;;;13141:1;13114:29;;;;;;;;:::i;:::-;;;;;;;13098:45;;;;;:::i;:::-;;;12871:1165;;;13243:11;:22;;;13239:673;;;13344:23;13370:11;:26;;;13397:1;13370:29;;;;;;;;:::i;:::-;;;;;;;13344:55;;13425:17;13473:1;13478;13473:6;:45;;13486:25;;;;13512:5;13516:1;13512;:5;:::i;:::-;13486:32;;;;;;;;:::i;:::-;;;;;;;13473:45;;;13482:1;13473:45;13545:19;13567:28;;;:15;:28;;;;;:71;;;13425:93;;-1:-1:-1;13545:19:134;13567:86;;13425:93;;13567:86;:::i;:::-;13545:108;;13679:15;13756:12;13725:11;:25;;;13751:1;13725:28;;;;;;;;:::i;:::-;;;;;;;:43;;;;:::i;:::-;13679:89;-1:-1:-1;13679:89:134;13840:35;13857:18;13840:14;:35;:::i;:::-;13839:50;;;;:::i;:::-;13795:94;;;;:::i;:::-;;;13267:645;;;;13239:673;14012:5;;12871:1165;12848:3;;12804:1246;;;;14064:28;14076:12;14090:1;14064:11;:28::i;:::-;-1:-1:-1;;14106:28:134;;;;:15;:28;;;;;:40;;:47;;-1:-1:-1;;14106:47:134;14149:4;14106:47;;;12416:1974;;;14351:28;;;;:15;:28;;;;;14344:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14344:35:134;;;12416:1974;-1:-1:-1;;14512:16:134;:24;;-1:-1:-1;;14512:24:134;;;11739:2804::o;9890:853:137:-;9946:4;10036:11;;10051:1;10036:16;10032:65;;-1:-1:-1;10075:11:137;;;9890:853::o;10032:65::-;10666:11;;10579;;10310:10;;10151;;10115:33;:31;:33::i;:::-;:46;;;;:::i;:::-;10114:206;;;;:::i;:::-;:323;;10433:4;10114:323;:::i;:::-;:476;;;;:::i;:::-;:563;;;;:::i;11932:513::-;-1:-1:-1;;;;;12425:13:137;;12036:4;12425:13;;;:7;:13;;;;;;;;;12254:9;:15;;;;;;12086;:21;;;;;;;12425:13;;12363:4;;12064:43;;:19;:43;:::i;:::-;12063:206;;;;:::i;:::-;:304;;;;:::i;:::-;:375;;;;:::i;:::-;12056:382;11932:513;-1:-1:-1;;;11932:513:137:o;1775:391:140:-;1911:4;-1:-1:-1;;;;;;1938:60:140;;-1:-1:-1;;;1938:60:140;;:169;;-1:-1:-1;;;;;;;2014:93:140;;-1:-1:-1;;;2014:93:140;1938:169;:221;;;;2123:36;2147:11;2123:23;:36::i;2327:429:24:-;2389:7;2433:8;3604:2;2524:30;2543:10;2524:18;:30::i;:::-;:71;;;;;2576:19;2558:14;:37;;2524:71;2520:230;;;2634:8;;2643:36;2660:19;2643:14;:36;:::i;:::-;2634:47;;;;;:::i;:::-;2626:56;;;:::i;:::-;2618:65;;2611:72;;;;2327:429;:::o;2520:230::-;966:10:26;2714:25:24;;;;2327:429;:::o;10737:223:106:-;10822:21;;;;;;;;-1:-1:-1;;;;;10822:21:106;-1:-1:-1;;;;;10822:32:106;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;-1:-1:-1;;;10822:59:106;;;;;20046:25:265;;;-1:-1:-1;;;;;20107:55:265;;;20087:18;;;20080:83;10822:47:106;;;;;;;20019:18:265;;10822:59:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10817:137;;10904:39;;-1:-1:-1;;;10904:39:106;;;;;20046:25:265;;;-1:-1:-1;;;;;20107:55:265;;20087:18;;;20080:83;20019:18;;10904:39:106;19872:297:265;3326:384:27;2388:30;3526:9;;-1:-1:-1;;3526:20:27;3522:88;;3569:30;;-1:-1:-1;;;3569:30:27;;;;;;;;;;;3522:88;1847:1;3684:19;;3326:384::o;8093:166:138:-;8161:6;8171:1;8161:11;8157:96;;8195:47;;-1:-1:-1;;;8195:47:138;;;;;;;;;;;8348:738:137;8442:19;8464:23;:21;:23::i;:::-;8497:11;:28;;;8442:45;-1:-1:-1;8571:18:137;8592:33;:31;:33::i;:::-;8635:10;:26;;;8571:54;-1:-1:-1;8727:17:137;-1:-1:-1;;;;;8758:28:137;;;8754:221;;8817:36;8825:14;8841:11;;8817:7;:36::i;:::-;-1:-1:-1;;;;;8867:23:137;;;;;;:7;:23;;;;;;;;:38;;;8953:11;;8919:15;:31;;;;;;:45;8802:51;-1:-1:-1;8754:221:137;8989:90;;;5238:25:265;;;5294:2;5279:18;;5272:34;;;5322:18;;;5315:34;;;-1:-1:-1;;;;;8989:90:137;;;;;5226:2:265;5211:18;8989:90:137;;;;;;;8398:688;;;8348:738;:::o;1303:160:52:-;1412:43;;-1:-1:-1;;;;;17479:55:265;;;1412:43:52;;;17461:74:265;17551:18;;;17544:34;;;1385:71:52;;1405:5;;1427:14;;;;;17434:18:265;;1412:43:52;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1412:43:52;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;12647:729:137:-;-1:-1:-1;;;;;12770:18:137;;12756:11;12770:18;;;:7;:18;;;;;;;;;;12829:22;;;12892:282;;;;;;;;;;;12770:18;;12862:322;;12892:282;;12983:14;7238:16:106;7273:21;-1:-1:-1;;;;;7273:21:106;;7193:108;12983:14:137;-1:-1:-1;;;;;12983:29:137;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12983:37:137;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12892:282:137;;;;;13049:6;12892:282;;;;13080:15;12892:282;;;;13120:1;12892:282;;;;13144:15;12892:282;;;12862:16;:322::i;:::-;13195:21;;;;;;;;-1:-1:-1;;;;;13195:21:137;-1:-1:-1;;;;;13195:38:137;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:121;;-1:-1:-1;;;13195:121:137;;13300:4;13195:121;;;1891:74:265;-1:-1:-1;;;;;13195:56:137;;;;;;;1864:18:265;;13195:121:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13351:9;-1:-1:-1;;;;;13332:37:137;;13362:6;13332:37;;;;571:25:265;;559:2;544:18;;425:177;13332:37:137;;;;;;;;12703:673;12647:729;:::o;5861:478:140:-;-1:-1:-1;;;;;5969:35:140;;5965:133;;6027:60;;-1:-1:-1;;;6027:60:140;;;;;;;;;;;5965:133;6122:2;;:40;;-1:-1:-1;;;6122:40:140;;-1:-1:-1;;;;;1909:55:265;;;6122:40:140;;;1891:74:265;6122:2:140;;;;:17;;1864:18:265;;6122:40:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6111:8;:51;6107:145;;;6185:56;;-1:-1:-1;;;6185:56:140;;;;;;;;;;;6107:145;6262:15;:38;;-1:-1:-1;;;;;;6262:38:140;-1:-1:-1;;;;;6262:38:140;;;;;;;;;;;6310:11;:22;5861:478::o;1702:188:52:-;1829:53;;-1:-1:-1;;;;;21700:15:265;;;1829:53:52;;;21682:34:265;21752:15;;;21732:18;;;21725:43;21784:18;;;21777:34;;;1802:81:52;;1822:5;;1844:18;;;;;21594::265;;1829:53:52;21419:398:265;1802:81:52;1702:188;;;;:::o;13573:1145:137:-;13659:6;2296:26:138;2315:6;2296:18;:26::i;:::-;13689:8:137::1;2170;2182:1;2170:13:::0;2166:94:::1;;2206:43;;-1:-1:-1::0;;;2206:43:137::1;;;;;;;;;;;2166:94;13713:19:::2;13729:1;13713:7;:19::i;:::-;13809:10;;13790:15;:29;13786:447;;13897:17;13906:8:::0;13897:6;:17:::2;:::i;:::-;13884:10;:30:::0;13786:447:::2;;;14022:21;14079:10;;14060:15;14047:10;;:28;;;;:::i;:::-;14046:43;;;;:::i;:::-;14022:67:::0;-1:-1:-1;14214:8:137;14185:25:::2;14022:67:::0;14185:6;:25:::2;:::i;:::-;14184:38;;;;:::i;:::-;14171:10;:51:::0;-1:-1:-1;13786:447:137::2;14282:10;;14296:1;14282:15:::0;14278:98:::2;;14320:45;;-1:-1:-1::0;;;14320:45:137::2;;;;;;;;;;;14278:98;14443:26;14461:8:::0;14443:15:::2;:26;:::i;:::-;14430:10;:39:::0;;;14629:15:::2;14616:10;:28:::0;14688:10:::2;::::0;14660:51:::2;::::0;;32264:25:265;;;32320:2;32305:18;;32298:34;;;32348:18;;;32341:34;;;;32406:2;32391:18;;32384:34;;;;14660:51:137::2;::::0;32251:3:265;32236:19;14660:51:137::2;;;;;;;2332:1:138::1;13573:1145:137::0;;;:::o;708:237:130:-;812:7;876:8;:21;;;899:8;:12;;;913:8;:14;;;865:63;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;842:96;;;;;;835:103;;708:237;;;:::o;6916:284:140:-;7013:6;6998:12;:21;;;6994:158;;;7081:60;;-1:-1:-1;;;7081:60:140;;;;;;;;;;;6994:158;7161:17;:32;;;;;;-1:-1:-1;;;7161:32:140;;;;;;;;;;;6916:284::o;2081:225:52:-;2200:39;;-1:-1:-1;;;2200:39:52;;2224:4;2200:39;;;33123:34:265;-1:-1:-1;;;;;33193:15:265;;;33173:18;;;33166:43;2177:20:52;;2200:15;;;;;;33035:18:265;;2200:39:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2177:62;-1:-1:-1;2249:50:52;2262:5;2269:7;2278:20;2293:5;2177:62;2278:20;:::i;:::-;2249:12;:50::i;2586:182:73:-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;33377:19:265;;;;33412:12;;33405:28;33449:12;;2678:83:73;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;3287:26;;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;33627:19:265;;;33688:66;33676:79;33671:2;33662:12;;33655:101;33781:2;33772:12;;33472:318;3569:546:73;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:73;;;;;;;;;;;;-1:-1:-1;;;3678:10:73;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:73;;-1:-1:-1;3805:2:73;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:73;-1:-1:-1;3827:34:73;-1:-1:-1;3883:3:73;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:73;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;4070:7:73;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:73;3569:546;-1:-1:-1;;;;3569:546:73:o;7632:493:137:-;7708:19;7716:10;7708:7;:19::i;:::-;-1:-1:-1;;;;;7794:19:137;;;;;;:7;:19;;;;;;:24;7790:146;;7895:30;7914:10;7895:18;:30::i;:::-;-1:-1:-1;;;;;7986:21:137;;;;;;:9;:21;;;;;:31;;8011:6;;7986:21;:31;;8011:6;;7986:31;:::i;:::-;;;;;;;;8070:6;8055:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;8092:26:137;;571:25:265;;;-1:-1:-1;;;;;8092:26:137;;;;;559:2:265;544:18;8092:26:137;425:177:265;10548:209:138;10676:4;10703:21;;:40;;;-1:-1:-1;;;10703:40:138;;;;-1:-1:-1;;;;;10703:47:138;;;;:21;;:38;;:40;;;;;;;;;;;;;;:21;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10703:47:138;;;10548:209;-1:-1:-1;;10548:209:138:o;5770:590:106:-;6931:20:25;:18;:20::i;:::-;-1:-1:-1;;;;;5955:36:106;::::1;5951:110;;6014:36;;-1:-1:-1::0;;;6014:36:106::1;;;;;;;;;;;5951:110;6070:21;:37:::0;;-1:-1:-1;;;;;;6070:37:106::1;-1:-1:-1::0;;;;;6070:37:106;::::1;;::::0;;6161:29:::1;6181:8:::0;6161:19:::1;:29::i;:::-;6156:93;;6213:25;;-1:-1:-1::0;;;6213:25:106::1;;;;;;;;;;;6156:93;6258:28:::0;;:17:::1;:28:::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;6278:8;;6258:17;:28;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6258:28:106::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;6328:13;-1:-1:-1::0;;;;;6302:51:106::1;;6344:8;6302:51;;;;;;:::i;4292:150:137:-:0;6931:20:25;:18;:20::i;:::-;4404:31:137::1;4421:13;4404:16;:31::i;3926:334:140:-:0;6931:20:25;:18;:20::i;:::-;4115:28:140::1;4136:6;4115:20;:28::i;:::-;4153:38;4182:8;4153:28;:38::i;:::-;4201:52;4228:12;4242:10;4201:26;:52::i;6509:286::-:0;-1:-1:-1;;;;;6578:20:140;;6574:113;;6621:55;;-1:-1:-1;;;6621:55:140;;;;;;;;;;;6574:113;6696:2;:40;;-1:-1:-1;;;;;;6696:40:140;-1:-1:-1;;;;;6696:40:140;;;;;;;;6766:22;;;-1:-1:-1;;;6766:22:140;;;;:20;;:22;;;;;;;;;;;;;;;6696:40;6766:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6746:17;:42;-1:-1:-1;6509:286:140:o;10234:229:138:-;-1:-1:-1;;;;;10415:31:138;;;;;;:24;:31;;;;;;10357:99;;10415:31;10405:7;;10357:26;:99::i;9237:916::-;-1:-1:-1;;;;;9322:31:138;;9308:11;9322:31;;;:24;:31;;;;;;;9383:38;;-1:-1:-1;;;9383:38:138;;9415:4;9383:38;;;1891:74:265;9322:31:138;;;9383:23;;1864:18:265;;9383:38:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9363:58;;9494:6;9479:12;:21;9475:672;;;9632:21;;;;;;;;-1:-1:-1;;;;;9632:21:138;-1:-1:-1;;;;;9632:36:138;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9632:44:138;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9615:64:138;:5;-1:-1:-1;;;;;9615:64:138;;9594:543;;9878:21;;;;;;;;-1:-1:-1;;;;;9878:21:138;-1:-1:-1;;;;;9878:36:138;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9878:64:138;;9972:4;9980:21;9989:12;9980:6;:21;:::i;:::-;9878:142;;-1:-1:-1;;;;;;9878:142:138;;;;;;;-1:-1:-1;;;;;17479:55:265;;;9878:142:138;;;17461:74:265;17551:18;;;17544:34;17434:18;;9878:142:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:160:52;;;:::o;9594:543:138:-;10066:56;;-1:-1:-1;;;10066:56:138;;-1:-1:-1;;;;;1909:55:265;;10066:56:138;;;1891:74:265;1864:18;;10066:56:138;1729:242:265;11249:831:140;11405:2;;-1:-1:-1;;;;;11405:2:140;11381:12;:10;:12::i;:::-;-1:-1:-1;;;;;11381:27:140;;11377:114;;11431:49;;-1:-1:-1;;;11431:49:140;;;;;;;;;;;11377:114;11501:34;11538:26;;;:13;:26;;;;;;;;;11501:63;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11501:63:140;;;;;;;;-1:-1:-1;;;11501:63:140;;;;;;;;;;;11580:190;;4966:14:265;;4959:22;4941:41;;4998:18;;;4991:34;;;;11501:63:140;;11538:26;;11580:190;;4914:18:265;11580:190:140;;;;;;;11860:18;11856:155;;;11894:26;;;;:13;:26;;;;;:35;;:42;;;;-1:-1:-1;;;11894:42:140;;;1303:160:52;;;:::o;11856:155:140:-;-1:-1:-1;;11974:26:140;;;;:13;:26;;;;;11967:33;;;;;;;;;;;;;;-1:-1:-1;;11967:33:140;;;11249:831::o;11223:156:137:-;11289:4;11326:15;11312:10;;:29;;:60;;-1:-1:-1;11357:15:137;;6508:117:106:o;11312:60:137:-;-1:-1:-1;11344:10:137;;;11223:156::o;1612:288::-;1764:4;-1:-1:-1;;;;;;1791:50:137;;-1:-1:-1;;;1791:50:137;;:102;;;1857:36;1881:11;1857:23;:36::i;4059:629:52:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:52;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:52;;-1:-1:-1;;;;;1909:55:265;;4631:40:52;;;1891:74:265;1864:18;;4631:40:52;1729:242:265;3199:458:138;3311:5;2473:31;2498:5;2473:24;:31::i;:::-;3447:5:::1;:12;;;3399:24;:44;3424:5;:18;;;-1:-1:-1::0;;;;;3399:44:138::1;-1:-1:-1::0;;;;;3399:44:138::1;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3525:7:138::1;:19:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3525:19:138;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;3525:19:138;;::::1;-1:-1:-1::0;;;;;;3525:19:138;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;3560:90;3525:19;;3560:90:::1;::::0;::::1;::::0;571:25:265;;559:2;544:18;;425:177;3560:90:138::1;;;;;;;;3199:458:::0;;:::o;3296:380:52:-;3411:47;;;-1:-1:-1;;;;;17479:55:265;;3411:47:52;;;17461:74:265;17551:18;;;;17544:34;;;3411:47:52;;;;;;;;;;17434:18:265;;;;3411:47:52;;;;;;;;-1:-1:-1;;;;;3411:47:52;-1:-1:-1;;;3411:47:52;;;3474:44;3426:13;3411:47;3474:23;:44::i;:::-;3469:201;;3561:43;;-1:-1:-1;;;;;17479:55:265;;;3561:43:52;;;17461:74:265;3601:1:52;17551:18:265;;;17544:34;3534:71:52;;3554:5;;3576:13;;;;;17434:18:265;;3561:43:52;17287:297:265;3534:71:52;3619:40;3639:5;3646:12;3619:19;:40::i;897:1306:73:-;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;1092:66;1088:70;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:73:o;7084:141:25:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:25;;;;;;;;;;;1105:595:130;1206:4;1269:8;:12;;;1263:26;1293:1;1263:31;1259:74;;-1:-1:-1;1317:5:130;;1105:595;-1:-1:-1;1105:595:130:o;1259:74::-;1388:8;:14;;;1382:28;1414:1;1382:33;1378:76;;-1:-1:-1;1438:5:130;;1105:595;-1:-1:-1;1105:595:130:o;1378:76::-;1522:21;;:26;:56;;;;-1:-1:-1;1552:21:130;;;;:26;1522:56;:102;;;;-1:-1:-1;1598:21:130;;;;:26;1522:102;1505:167;;;-1:-1:-1;1656:5:130;;1105:595;-1:-1:-1;1105:595:130:o;1505:167::-;-1:-1:-1;1689:4:130;;1105:595;-1:-1:-1;1105:595:130:o;14829:341:137:-;-1:-1:-1;;;;;14907:20:137;;;;:98;;-1:-1:-1;7238:16:106;7273:21;-1:-1:-1;;;;;7273:21:106;-1:-1:-1;;;;;14965:29:137;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14965:37:137;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14947:58:137;:6;-1:-1:-1;;;;;14947:58:137;;14907:98;14890:205;;;15037:47;;-1:-1:-1;;;15037:47:137;;;;;;;;;;;14890:205;15104:12;:21;;-1:-1:-1;;;;;;15104:21:137;-1:-1:-1;;;;;15104:21:137;;;;;;;;15140:23;;;;-1:-1:-1;;15140:23:137;14829:341;:::o;1610:281:138:-;1746:4;-1:-1:-1;;;;;;1773:59:138;;-1:-1:-1;;;1773:59:138;;:111;;;1848:36;1872:11;1848:23;:36::i;2705:151:57:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;8627:237:138:-;7238:16:106;7273:21;-1:-1:-1;;;;;7273:21:106;-1:-1:-1;;;;;8712:31:138;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8712:51:138;;8764:5;8712:58;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8706:152;;8794:53;;-1:-1:-1;;;8794:53:138;;;;;;;;;;;5189:578:52;5272:4;5574:12;5588:23;5623:5;-1:-1:-1;;;;;5615:19:52;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;-1:-1:-1;5669:17:52;;:22;;:56;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5657:103;;;;-1:-1:-1;;;;;;;;;;5730:26:52;;:30;;;5189:578::o;2011:273:106:-;2155:4;-1:-1:-1;;;;;;2182:43:106;;-1:-1:-1;;;2182:43:106;;:95;;-1:-1:-1;;;;;;;;;;1133:40:28;;;2241:36:106;1034:146:28;3180:392:57;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:57;;3394:4;3359:41;;;1891:74:265;1864:18;;3359:41:57;1729:242:265;3303:108:57;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:57;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:57:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:57;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:57;;-1:-1:-1;;;;;1909:55:265;;5121:24:57;;;1891:74:265;1864:18;;5121:24:57;1729:242:265;5041:119:57;-1:-1:-1;5180:10:57;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:57;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:154:265;-1:-1:-1;;;;;93:5:265;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:247;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;607:286::-;665:6;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;760:23;;-1:-1:-1;;;;;;812:32:265;;802:43;;792:71;;859:1;856;849:12;1090:452;1176:6;1184;1192;1200;1253:3;1241:9;1232:7;1228:23;1224:33;1221:53;;;1270:1;1267;1260:12;1221:53;1306:9;1293:23;1283:33;;1363:2;1352:9;1348:18;1335:32;1325:42;;1417:2;1406:9;1402:18;1389:32;1430:31;1455:5;1430:31;:::i;:::-;1090:452;;;;-1:-1:-1;1480:5:265;;1532:2;1517:18;1504:32;;-1:-1:-1;;1090:452:265:o;1976:367::-;2039:8;2049:6;2103:3;2096:4;2088:6;2084:17;2080:27;2070:55;;2121:1;2118;2111:12;2070:55;-1:-1:-1;2144:20:265;;2187:18;2176:30;;2173:50;;;2219:1;2216;2209:12;2173:50;2256:4;2248:6;2244:17;2232:29;;2316:3;2309:4;2299:6;2296:1;2292:14;2284:6;2280:27;2276:38;2273:47;2270:67;;;2333:1;2330;2323:12;2270:67;1976:367;;;;;:::o;2348:505::-;2443:6;2451;2459;2512:2;2500:9;2491:7;2487:23;2483:32;2480:52;;;2528:1;2525;2518:12;2480:52;2564:9;2551:23;2541:33;;2625:2;2614:9;2610:18;2597:32;2652:18;2644:6;2641:30;2638:50;;;2684:1;2681;2674:12;2638:50;2723:70;2785:7;2776:6;2765:9;2761:22;2723:70;:::i;:::-;2348:505;;2812:8;;-1:-1:-1;2697:96:265;;-1:-1:-1;;;;2348:505:265:o;2858:180::-;2917:6;2970:2;2958:9;2949:7;2945:23;2941:32;2938:52;;;2986:1;2983;2976:12;2938:52;-1:-1:-1;3009:23:265;;2858:180;-1:-1:-1;2858:180:265:o;4017:250::-;4102:1;4112:113;4126:6;4123:1;4120:13;4112:113;;;4202:11;;;4196:18;4183:11;;;4176:39;4148:2;4141:10;4112:113;;;-1:-1:-1;;4259:1:265;4241:16;;4234:27;4017:250::o;4272:271::-;4314:3;4352:5;4346:12;4379:6;4374:3;4367:19;4395:76;4464:6;4457:4;4452:3;4448:14;4441:4;4434:5;4430:16;4395:76;:::i;:::-;4525:2;4504:15;-1:-1:-1;;4500:29:265;4491:39;;;;4532:4;4487:50;;4272:271;-1:-1:-1;;4272:271:265:o;4548:220::-;4697:2;4686:9;4679:21;4660:4;4717:45;4758:2;4747:9;4743:18;4735:6;4717:45;:::i;5360:315::-;5428:6;5436;5489:2;5477:9;5468:7;5464:23;5460:32;5457:52;;;5505:1;5502;5495:12;5457:52;5544:9;5531:23;5563:31;5588:5;5563:31;:::i;:::-;5613:5;5665:2;5650:18;;;;5637:32;;-1:-1:-1;;;5360:315:265:o;5680:248::-;5748:6;5756;5809:2;5797:9;5788:7;5784:23;5780:32;5777:52;;;5825:1;5822;5815:12;5777:52;-1:-1:-1;;5848:23:265;;;5918:2;5903:18;;;5890:32;;-1:-1:-1;5680:248:265:o;5933:315::-;6001:6;6009;6062:2;6050:9;6041:7;6037:23;6033:32;6030:52;;;6078:1;6075;6068:12;6030:52;6114:9;6101:23;6091:33;;6174:2;6163:9;6159:18;6146:32;6187:31;6212:5;6187:31;:::i;:::-;6237:5;6227:15;;;5933:315;;;;;:::o;6945:477::-;7010:3;7048:5;7042:12;7075:6;7070:3;7063:19;7101:4;7130;7125:3;7121:14;7114:21;;7169:4;7162:5;7158:16;7192:1;7202:195;7216:6;7213:1;7210:13;7202:195;;;7265:50;7311:3;7302:6;7296:13;-1:-1:-1;;;;;6641:2:265;6633:5;6627:12;6623:21;6618:3;6611:34;6706:2;6698:4;6691:5;6687:16;6681:23;6677:32;6670:4;6665:3;6661:14;6654:56;;6759:4;6752:5;6748:16;6742:23;6735:4;6730:3;6726:14;6719:47;6815:4;6808:5;6804:16;6798:23;6791:4;6786:3;6782:14;6775:47;6871:4;6864:5;6860:16;6854:23;6847:4;6842:3;6838:14;6831:47;6927:4;6920:5;6916:16;6910:23;6903:4;6898:3;6894:14;6887:47;6484:456;;;7265:50;7344:4;7335:14;;;;;7372:15;;;;7238:1;7231:9;7202:195;;;-1:-1:-1;7413:3:265;;6945:477;-1:-1:-1;;;;;6945:477:265:o;7427:335::-;7668:2;7657:9;7650:21;7631:4;7688:68;7752:2;7741:9;7737:18;7729:6;7688:68;:::i;7767:439::-;7820:3;7858:5;7852:12;7885:6;7880:3;7873:19;7911:4;7940;7935:3;7931:14;7924:21;;7979:4;7972:5;7968:16;8002:1;8012:169;8026:6;8023:1;8020:13;8012:169;;;8087:13;;8075:26;;8121:12;;;;8156:15;;;;8048:1;8041:9;8012:169;;8211:743;8384:2;8373:9;8366:21;8429:6;8423:13;8418:2;8407:9;8403:18;8396:41;8491:2;8483:6;8479:15;8473:22;8468:2;8457:9;8453:18;8446:50;8564:2;8556:6;8552:15;8546:22;8539:30;8532:38;8527:2;8516:9;8512:18;8505:66;8347:4;8618:2;8610:6;8606:15;8600:22;8659:4;8653:3;8642:9;8638:19;8631:33;8687:63;8745:3;8734:9;8730:19;8716:12;8687:63;:::i;:::-;8673:77;;8799:3;8791:6;8787:16;8781:23;8874:2;8870:7;8858:9;8850:6;8846:22;8842:36;8835:4;8824:9;8820:20;8813:66;8896:52;8941:6;8925:14;8896:52;:::i;9365:129::-;9450:18;9443:5;9439:30;9432:5;9429:41;9419:69;;9484:1;9481;9474:12;9499:245;9557:6;9610:2;9598:9;9589:7;9585:23;9581:32;9578:52;;;9626:1;9623;9616:12;9578:52;9665:9;9652:23;9684:30;9708:5;9684:30;:::i;10525:383::-;10602:6;10610;10618;10671:2;10659:9;10650:7;10646:23;10642:32;10639:52;;;10687:1;10684;10677:12;10639:52;10723:9;10710:23;10700:33;;10780:2;10769:9;10765:18;10752:32;10742:42;;10834:2;10823:9;10819:18;10806:32;10847:31;10872:5;10847:31;:::i;:::-;10897:5;10887:15;;;10525:383;;;;;:::o;11394:127::-;11455:10;11450:3;11446:20;11443:1;11436:31;11486:4;11483:1;11476:15;11510:4;11507:1;11500:15;11526:248;11593:2;11587:9;11635:4;11623:17;;11670:18;11655:34;;11691:22;;;11652:62;11649:88;;;11717:18;;:::i;:::-;11753:2;11746:22;11526:248;:::o;11779:255::-;11851:2;11845:9;11893:6;11881:19;;11930:18;11915:34;;11951:22;;;11912:62;11909:88;;;11977:18;;:::i;12039:719::-;12082:5;12135:3;12128:4;12120:6;12116:17;12112:27;12102:55;;12153:1;12150;12143:12;12102:55;12189:6;12176:20;12215:18;12252:2;12248;12245:10;12242:36;;;12258:18;;:::i;:::-;12333:2;12327:9;12301:2;12387:13;;-1:-1:-1;;12383:22:265;;;12407:2;12379:31;12375:40;12363:53;;;12431:18;;;12451:22;;;12428:46;12425:72;;;12477:18;;:::i;:::-;12517:10;12513:2;12506:22;12552:2;12544:6;12537:18;12598:3;12591:4;12586:2;12578:6;12574:15;12570:26;12567:35;12564:55;;;12615:1;12612;12605:12;12564:55;12679:2;12672:4;12664:6;12660:17;12653:4;12645:6;12641:17;12628:54;12726:1;12719:4;12714:2;12706:6;12702:15;12698:26;12691:37;12746:6;12737:15;;;;;;12039:719;;;;:::o;12763:1329::-;12902:6;12910;12918;12971:2;12959:9;12950:7;12946:23;12942:32;12939:52;;;12987:1;12984;12977:12;12939:52;13026:9;13013:23;13045:31;13070:5;13045:31;:::i;:::-;13095:5;-1:-1:-1;13151:2:265;13136:18;;13123:32;13174:18;13204:14;;;13201:34;;;13231:1;13228;13221:12;13201:34;13254:22;;;;13310:4;13292:16;;;13288:27;13285:47;;;13328:1;13325;13318:12;13285:47;13356:17;;:::i;:::-;13411:2;13398:16;13389:7;13382:33;13470:2;13466;13462:11;13449:25;13444:2;13435:7;13431:16;13424:51;13530:2;13526;13522:11;13509:25;13504:2;13495:7;13491:16;13484:51;13581:2;13577;13573:11;13560:25;13610:2;13600:8;13597:16;13594:36;;;13626:1;13623;13616:12;13594:36;13664:45;13701:7;13690:8;13686:2;13682:17;13664:45;:::i;:::-;13659:2;13650:7;13646:16;13639:71;;13756:3;13752:2;13748:12;13735:26;13786:2;13776:8;13773:16;13770:36;;;13802:1;13799;13792:12;13770:36;13841:45;13878:7;13867:8;13863:2;13859:17;13841:45;:::i;:::-;13835:3;13822:17;;13815:72;-1:-1:-1;13826:7:265;-1:-1:-1;13966:2:265;13951:18;;13938:32;;-1:-1:-1;13982:16:265;;;13979:36;;;14011:1;14008;14001:12;13979:36;;14034:52;14078:7;14067:8;14056:9;14052:24;14034:52;:::i;:::-;14024:62;;;12763:1329;;;;;:::o;14559:118::-;14645:5;14638:13;14631:21;14624:5;14621:32;14611:60;;14667:1;14664;14657:12;14682:902;14810:6;14818;14826;14834;14842;14895:2;14883:9;14874:7;14870:23;14866:32;14863:52;;;14911:1;14908;14901:12;14863:52;14950:9;14937:23;14969:28;14991:5;14969:28;:::i;:::-;15016:5;-1:-1:-1;15072:2:265;15057:18;;15044:32;15095:18;15125:14;;;15122:34;;;15152:1;15149;15142:12;15122:34;15191:70;15253:7;15244:6;15233:9;15229:22;15191:70;:::i;:::-;15280:8;;-1:-1:-1;15165:96:265;-1:-1:-1;15368:2:265;15353:18;;15340:32;;-1:-1:-1;15384:16:265;;;15381:36;;;15413:1;15410;15403:12;15381:36;;15452:72;15516:7;15505:8;15494:9;15490:24;15452:72;:::i;:::-;14682:902;;;;-1:-1:-1;14682:902:265;;-1:-1:-1;15543:8:265;;15426:98;14682:902;-1:-1:-1;;;14682:902:265:o;15589:1099::-;15986:2;15975:9;15968:21;15949:4;16012:68;16076:2;16065:9;16061:18;16053:6;16012:68;:::i;:::-;16137:22;;;16099:2;16117:18;;;16110:50;;;;16209:13;;16231:22;;;16307:15;;;;16269;;;16340:1;16350:218;16364:6;16361:1;16358:13;16350:218;;;16429:13;;-1:-1:-1;;;;;16425:62:265;16413:75;;16543:15;;;;16508:12;;;;16386:1;16379:9;16350:218;;;16354:3;;16613:9;16608:3;16604:19;16599:2;16588:9;16584:18;16577:47;16641:41;16678:3;16670:6;16641:41;:::i;:::-;16633:49;15589:1099;-1:-1:-1;;;;;;;;15589:1099:265:o;16693:309::-;16758:6;16766;16819:2;16807:9;16798:7;16794:23;16790:32;16787:52;;;16835:1;16832;16825:12;16787:52;16871:9;16858:23;16848:33;;16931:2;16920:9;16916:18;16903:32;16944:28;16966:5;16944:28;:::i;17007:275::-;17101:6;17154:2;17142:9;17133:7;17129:23;17125:32;17122:52;;;17170:1;17167;17160:12;17122:52;17202:9;17196:16;17221:31;17246:5;17221:31;:::i;17589:184::-;17659:6;17712:2;17700:9;17691:7;17687:23;17683:32;17680:52;;;17728:1;17725;17718:12;17680:52;-1:-1:-1;17751:16:265;;17589:184;-1:-1:-1;17589:184:265:o;18031:799::-;18271:25;;;18259:2;18315;18333:18;;;18326:30;;;18244:18;;;18391:22;;;18211:4;;18470:6;;18444:2;18429:18;;18211:4;18504:300;18518:6;18515:1;18512:13;18504:300;;;18593:6;18580:20;18613:31;18638:5;18613:31;:::i;:::-;-1:-1:-1;;;;;18669:54:265;18657:67;;18779:15;;;;18744:12;;;;18540:1;18533:9;18504:300;;;-1:-1:-1;18821:3:265;18031:799;-1:-1:-1;;;;;;;18031:799:265:o;18835:127::-;18896:10;18891:3;18887:20;18884:1;18877:31;18927:4;18924:1;18917:15;18951:4;18948:1;18941:15;18967:128;19034:9;;;19055:11;;;19052:37;;;19069:18;;:::i;19100:380::-;19179:1;19175:12;;;;19222;;;19243:61;;19297:4;19289:6;19285:17;19275:27;;19243:61;19350:2;19342:6;19339:14;19319:18;19316:38;19313:161;;19396:10;19391:3;19387:20;19384:1;19377:31;19431:4;19428:1;19421:15;19459:4;19456:1;19449:15;19313:161;;19100:380;;;:::o;19485:132::-;19561:13;;19583:28;19561:13;19583:28;:::i;:::-;19485:132;;;:::o;19622:245::-;19689:6;19742:2;19730:9;19721:7;19717:23;19713:32;19710:52;;;19758:1;19755;19748:12;19710:52;19790:9;19784:16;19809:28;19831:5;19809:28;:::i;20174:138::-;20253:13;;20275:31;20253:13;20275:31;:::i;20573:125::-;20638:9;;;20659:10;;;20656:36;;;20672:18;;:::i;20703:168::-;20776:9;;;20807;;20824:15;;;20818:22;;20804:37;20794:71;;20845:18;;:::i;20876:127::-;20937:10;20932:3;20928:20;20925:1;20918:31;20968:4;20965:1;20958:15;20992:4;20989:1;20982:15;21008:217;21048:1;21074;21064:132;;21118:10;21113:3;21109:20;21106:1;21099:31;21153:4;21150:1;21143:15;21181:4;21178:1;21171:15;21064:132;-1:-1:-1;21210:9:265;;21008:217::o;21822:197::-;21863:3;21901:5;21895:12;21916:65;21974:6;21969:3;21962:4;21955:5;21951:16;21916:65;:::i;:::-;21997:16;;;;;21822:197;-1:-1:-1;;21822:197:265:o;22024:287::-;22153:3;22191:6;22185:13;22207:66;22266:6;22261:3;22254:4;22246:6;22242:17;22207:66;:::i;:::-;22289:16;;;;;22024:287;-1:-1:-1;;22024:287:265:o;22445:1948::-;23394:19;23389:3;23382:32;23364:3;23443:6;23437:13;23469:4;23482:73;23548:6;23543:2;23538:3;23534:12;23529:2;23521:6;23517:15;23482:73;:::i;:::-;23619:17;23614:2;23574:16;;;23606:11;;;23599:38;23662:13;;23684:74;23662:13;23736:11;;;23719:15;;;23684:74;:::i;:::-;23823:19;23777:17;;23810:11;;;23803:40;;;;23868:13;;23890:74;23868:13;23950:2;23942:11;;23925:15;;;23890:74;:::i;:::-;24029:17;24024:2;23983:17;;;;24016:11;;;24009:38;24072:13;;24094:74;24072:13;24154:2;24146:11;;24129:15;;;24094:74;:::i;:::-;24233:34;24228:2;24187:17;;;;24220:11;;;24213:55;-1:-1:-1;;;;24292:2:265;24284:11;;24277:26;24319:68;24349:37;24382:2;24374:11;;24366:6;24349:37;:::i;:::-;22393:12;22381:25;;22431:2;22422:12;;22316:124;24398:949;24746:4;24775:3;24805:2;24794:9;24787:21;24825:45;24866:2;24855:9;24851:18;24843:6;24825:45;:::i;:::-;-1:-1:-1;;;;;24967:15:265;;;24962:2;24947:18;;24940:43;25019:15;;;25014:2;24999:18;;24992:43;-1:-1:-1;;25071:15:265;;;25066:2;25051:18;;25044:43;25136:18;25124:31;;;;25118:3;25103:19;;25096:60;25193:15;;;;25187:3;25172:19;;25165:44;25240:3;25225:19;;25218:35;;;;25284:3;25269:19;;25262:35;;;;25328:3;25313:19;25306:35;;;;24817:53;24398:949;-1:-1:-1;24398:949:265:o;25352:136::-;25430:13;;25452:30;25430:13;25452:30;:::i;25493:738::-;25622:6;25630;25638;25646;25654;25707:3;25695:9;25686:7;25682:23;25678:33;25675:53;;;25724:1;25721;25714:12;25675:53;25756:9;25750:16;25775:31;25800:5;25775:31;:::i;:::-;25875:2;25860:18;;25854:25;25825:5;;-1:-1:-1;25888:33:265;25854:25;25888:33;:::i;:::-;25987:2;25972:18;;25966:25;26036:2;26021:18;;26015:25;25940:7;;-1:-1:-1;25966:25:265;-1:-1:-1;26049:33:265;26015:25;26049:33;:::i;:::-;26153:3;26138:19;;26132:26;26101:7;;-1:-1:-1;26167:32:265;26132:26;26167:32;:::i;:::-;26218:7;26208:17;;;25493:738;;;;;;;;:::o;26450:127::-;26511:10;26506:3;26502:20;26499:1;26492:31;26542:4;26539:1;26532:15;26566:4;26563:1;26556:15;26582:135;26621:3;26642:17;;;26639:43;;26662:18;;:::i;:::-;-1:-1:-1;26709:1:265;26698:13;;26582:135::o;26722:358::-;26822:6;26817:3;26810:19;26792:3;26852:66;26844:6;26841:78;26838:98;;;26932:1;26929;26922:12;26838:98;26968:6;26965:1;26961:14;27020:8;27013:5;27006:4;27001:3;26997:14;26984:45;27049:18;;;;27069:4;27045:29;;26722:358;-1:-1:-1;;;26722:358:265:o;27085:745::-;27440:6;27429:9;27422:25;27483:6;27478:2;27467:9;27463:18;27456:34;27540:6;27533:14;27526:22;27521:2;27510:9;27506:18;27499:50;27585:3;27580:2;27569:9;27565:18;27558:31;27403:4;27612:74;27681:3;27670:9;27666:19;27658:6;27650;27612:74;:::i;:::-;27735:9;27727:6;27723:22;27717:3;27706:9;27702:19;27695:51;27763:61;27817:6;27809;27801;27763:61;:::i;:::-;27755:69;27085:745;-1:-1:-1;;;;;;;;;;27085:745:265:o;27835:824::-;27918:5;27966:4;27954:9;27949:3;27945:19;27941:30;27938:50;;;27984:1;27981;27974:12;27938:50;28006:17;;:::i;:::-;27997:26;;28053:9;28047:16;28072:30;28094:7;28072:30;:::i;:::-;28111:22;;28178:2;28163:18;;28157:25;28191:30;28157:25;28191:30;:::i;:::-;28248:2;28237:14;;28230:31;28306:2;28291:18;;28285:25;28319:30;28285:25;28319:30;:::i;:::-;28376:2;28365:14;;28358:31;28434:2;28419:18;;28413:25;28447:33;28413:25;28447:33;:::i;:::-;28507:2;28496:14;;28489:31;28565:3;28550:19;;28544:26;28579:33;28544:26;28579:33;:::i;:::-;28639:3;28628:15;;28621:32;28632:5;27835:824;-1:-1:-1;;27835:824:265:o;28664:1275::-;28762:6;28815:3;28803:9;28794:7;28790:23;28786:33;28783:53;;;28832:1;28829;28822:12;28783:53;28858:22;;:::i;:::-;28903:74;28969:7;28958:9;28903:74;:::i;:::-;28896:5;28889:89;29012:50;29057:3;29046:9;29042:19;29012:50;:::i;:::-;29005:4;28998:5;28994:16;28987:76;29097:49;29141:3;29130:9;29126:19;29097:49;:::i;:::-;29090:4;29083:5;29079:16;29072:75;29181:47;29223:3;29212:9;29208:19;29181:47;:::i;:::-;29174:4;29167:5;29163:16;29156:73;29248:3;29285:49;29330:2;29319:9;29315:18;29285:49;:::i;:::-;29278:4;29271:5;29267:16;29260:75;29354:3;29390:48;29434:2;29423:9;29419:18;29390:48;:::i;:::-;29384:3;29377:5;29373:15;29366:73;29458:3;29494:46;29536:2;29525:9;29521:18;29494:46;:::i;:::-;29488:3;29481:5;29477:15;29470:71;29560:3;29617:2;29606:9;29602:18;29596:25;29590:3;29583:5;29579:15;29572:50;29675:6;29664:9;29660:22;29654:29;29649:2;29642:5;29638:14;29631:53;29737:3;29726:9;29722:19;29716:26;29711:2;29704:5;29700:14;29693:50;29775;29820:3;29809:9;29805:19;29775:50;:::i;:::-;29770:2;29763:5;29759:14;29752:74;29858:50;29903:3;29892:9;29888:19;29858:50;:::i;:::-;29842:14;;;29835:74;-1:-1:-1;29846:5:265;;28664:1275;-1:-1:-1;;;;;28664:1275:265:o;29944:331::-;30049:9;30060;30102:8;30090:10;30087:24;30084:44;;;30124:1;30121;30114:12;30084:44;30153:6;30143:8;30140:20;30137:40;;;30173:1;30170;30163:12;30137:40;-1:-1:-1;;30199:23:265;;;30244:25;;;;;-1:-1:-1;29944:331:265:o;30280:337::-;-1:-1:-1;;30401:19:265;;30488:11;;;;30519:2;30511:11;;30508:103;;;30581:2;30577:12;;;;30574:1;30570:20;30566:29;;;30558:38;30554:47;;;;30280:337;-1:-1:-1;;30280:337:265:o;32429:454::-;32654:6;32643:9;32636:25;32697:2;32692;32681:9;32677:18;32670:30;32617:4;32723:45;32764:2;32753:9;32749:18;32741:6;32723:45;:::i;:::-;32816:9;32808:6;32804:22;32799:2;32788:9;32784:18;32777:50;32844:33;32870:6;32862;32844:33;:::i;33795:148::-;33883:4;33862:12;;;33876;;;33858:31;;33901:13;;33898:39;;;33917:18;;:::i;34074:543::-;34176:2;34171:3;34168:11;34165:446;;;34212:1;34236:5;34233:1;34226:16;34280:4;34277:1;34267:18;34350:2;34338:10;34334:19;34331:1;34327:27;34321:4;34317:38;34386:4;34374:10;34371:20;34368:47;;;-1:-1:-1;34409:4:265;34368:47;34464:2;34459:3;34455:12;34452:1;34448:20;34442:4;34438:31;34428:41;;34519:82;34537:2;34530:5;34527:13;34519:82;;;34582:17;;;34563:1;34552:13;34519:82;;;34523:3;;;34074:543;;;:::o;34793:1345::-;34919:3;34913:10;34946:18;34938:6;34935:30;34932:56;;;34968:18;;:::i;:::-;34997:97;35087:6;35047:38;35079:4;35073:11;35047:38;:::i;:::-;35041:4;34997:97;:::i;:::-;35149:4;;35206:2;35195:14;;35223:1;35218:663;;;;35925:1;35942:6;35939:89;;;-1:-1:-1;35994:19:265;;;35988:26;35939:89;-1:-1:-1;;34750:1:265;34746:11;;;34742:24;34738:29;34728:40;34774:1;34770:11;;;34725:57;36041:81;;35188:944;;35218:663;34021:1;34014:14;;;34058:4;34045:18;;-1:-1:-1;;35254:20:265;;;35372:236;35386:7;35383:1;35380:14;35372:236;;;35475:19;;;35469:26;35454:42;;35567:27;;;;35535:1;35523:14;;;;35402:19;;35372:236;;;35376:3;35636:6;35627:7;35624:19;35621:201;;;35697:19;;;35691:26;-1:-1:-1;;35780:1:265;35776:14;;;35792:3;35772:24;35768:37;35764:42;35749:58;35734:74;;35621:201;-1:-1:-1;;;;;35868:1:265;35852:14;;;35848:22;35835:36;;-1:-1:-1;34793:1345:265:o;36143:715::-;36326:2;36315:9;36308:21;36371:6;36365:13;36360:2;36349:9;36345:18;36338:41;36433:2;36425:6;36421:15;36415:22;36410:2;36399:9;36395:18;36388:50;36492:2;36484:6;36480:15;36474:22;36469:2;36458:9;36454:18;36447:50;36289:4;36544:2;36536:6;36532:15;36526:22;36585:4;36579:3;36568:9;36564:19;36557:33;36613:52;36660:3;36649:9;36645:19;36631:12;36613:52;:::i;:::-;36599:66;;36714:3;36706:6;36702:16;36696:23;36789:2;36785:7;36773:9;36765:6;36761:22;36757:36;36750:4;36739:9;36735:20;36728:66;36811:41;36845:6;36829:14;36811:41;:::i;37173:264::-;37369:3;37354:19;;37382:49;37358:9;37413:6;-1:-1:-1;;;;;6641:2:265;6633:5;6627:12;6623:21;6618:3;6611:34;6706:2;6698:4;6691:5;6687:16;6681:23;6677:32;6670:4;6665:3;6661:14;6654:56;;6759:4;6752:5;6748:16;6742:23;6735:4;6730:3;6726:14;6719:47;6815:4;6808:5;6804:16;6798:23;6791:4;6786:3;6782:14;6775:47;6871:4;6864:5;6860:16;6854:23;6847:4;6842:3;6838:14;6831:47;6927:4;6920:5;6916:16;6910:23;6903:4;6898:3;6894:14;6887:47;6484:456;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ASSERTER_ROLE()": "bf14d4a9",
    "KPICounter()": "78802654",
    "amountPaid(address,uint256)": "b33ec618",
    "assertDataFor(bytes32,bytes32,address)": "93ee663b",
    "assertionConfig(bytes32)": "7b9a9c7f",
    "assertionData(bytes32)": "2a4e1904",
    "assertionDisputedCallback(bytes32)": "d448a4ec",
    "assertionLiveness()": "b75d4e24",
    "assertionPending()": "60a93176",
    "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
    "balanceOf(address)": "70a08231",
    "claimRewards()": "372500ab",
    "collectPaymentOrders()": "c0231ff6",
    "createKPI(bool,uint256[],uint256[])": "bc7d2a33",
    "defaultBond()": "8333cb06",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "deleteStuckAssertion(bytes32)": "e31ae421",
    "depositFeeFunds(uint256)": "64e6bbe5",
    "earned(address)": "008cc262",
    "estimateReward(uint256,uint256)": "7e5f43ff",
    "getAssertion(bytes32)": "88302884",
    "getAssertionConfig(bytes32)": "956ae17b",
    "getData(bytes32)": "54f6127f",
    "getKPI(uint256)": "772fd8da",
    "grantModuleRole(bytes32,address)": "6c67e807",
    "grantModuleRoleBatched(bytes32,address[])": "272bbd44",
    "identifier()": "7998a1c4",
    "init(address,(uint256,uint256,uint256,string,string),bytes)": "b66a870c",
    "isTrustedForwarder(address)": "572b6c05",
    "oo()": "8921a614",
    "orchestrator()": "b74795d9",
    "outstandingTokenAmount(address)": "2e84db5f",
    "paymentOrders()": "75fa0b76",
    "postAssertion(bytes32,uint256,address,uint256)": "074644e6",
    "registryOfKPIs(uint256)": "3ecd7972",
    "revokeModuleRole(bytes32,address)": "bcb61920",
    "revokeModuleRoleBatched(bytes32,address[])": "24e30270",
    "rewardRate()": "7b0a47ee",
    "rewardsEnd()": "a6d14d69",
    "setDefaultAssertionLiveness(uint64)": "81d09517",
    "setDefaultCurrencyAndBond(address,uint256)": "59be48f2",
    "setOptimisticOracle(address)": "bf5c3252",
    "setRewards(uint256,uint256)": "654e51e7",
    "stake(uint256)": "a694fc3a",
    "stakingToken()": "72f702f3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "title()": "4a79d50c",
    "totalSupply()": "18160ddd",
    "trustedForwarder()": "7da0a877",
    "unstake(uint256)": "2e17de78",
    "url()": "5600f04f",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"funcSig\",\"type\":\"string\"}],\"name\":\"Module_OrchestratorCallbackFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Module__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Module__ERC20PaymentClientBase__InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidPaymentOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__Invalidend\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidOrchestratorAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"Module__LM_PC_KPIRewarder_v1__AssertionNotStuck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__CannotStakeWhenAssertionPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPINumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"Module__LM_PC_KPIRewarder_v1__NonExistentAssertionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v1__UnresolvedAssertionExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidRewardRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v1__InvalidStakingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OnlyCallableByOrchestrator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OnlyCallableByPaymentClient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator_InsufficientFundsToPayForBond\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__CallerNotOO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__CurrencyBondTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidDefaultCurrency\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidDefaultLiveness\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidOOInstance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAsserted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAssertionResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DeletedStuckAssertion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeFundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"KPI_Id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalKPIRewards\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"trancheValues\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"trancheRewards\",\"type\":\"uint256[]\"}],\"name\":\"KPICreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parentOrchestrator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"patchVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IModule_v1.Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"ModuleInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentOrderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"}],\"name\":\"RewardRoundConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsEnd\",\"type\":\"uint256\"}],\"name\":\"RewardSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"StakingTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"earnedRewards\",\"type\":\"uint256\"}],\"name\":\"Updated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASSERTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KPICounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"amountPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertDataFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"distributed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectPaymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20PaymentClientBase_v1.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_continuous\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"_trancheValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_trancheRewards\",\"type\":\"uint256[]\"}],\"name\":\"createKPI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"deleteStuckAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFeeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"estimateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"internalType\":\"struct IOptimisticOracleIntegrator.DataAssertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"distributed\",\"type\":\"bool\"}],\"internalType\":\"struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"KPInum\",\"type\":\"uint256\"}],\"name\":\"getKPI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"trancheValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"trancheRewards\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ILM_PC_KPIRewarder_v1.KPI\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"grantModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"grantModuleRoleBatched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOrchestrator_v1\",\"name\":\"orchestrator_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"patchVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct IModule_v1.Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orchestrator\",\"outputs\":[{\"internalType\":\"contract IOrchestrator_v1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"outstandingTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20PaymentClientBase_v1.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetKPI\",\"type\":\"uint256\"}],\"name\":\"postAssertion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registryOfKPIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"revokeModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"revokeModuleRoleBatched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_newLiveness\",\"type\":\"uint64\"}],\"name\":\"setDefaultAssertionLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newBond\",\"type\":\"uint256\"}],\"name\":\"setDefaultCurrencyAndBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOO\",\"type\":\"address\"}],\"name\":\"setOptimisticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"url\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Inverter Network\",\"custom:security-contact\":\"security@inverter.network                          In case of any concerns or findings, please refer to our Security Policy                          at security.inverter.network or email us directly!\",\"details\":\"Extends {LM_PC_Staking_v1} and integrates with {OptimisticOracleIntegrator}          to enable KPI-based reward distribution within the staking manager.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"Module_OrchestratorCallbackFailed(string)\":[{\"params\":{\"funcSig\":\"The signature of the function called.\"}}],\"Module__CallerNotAuthorized(bytes32,address)\":[{\"params\":{\"caller\":\"The address that is required to have the role.\",\"role\":\"The role that is required.\"}}],\"Module__ERC20PaymentClientBase__InsufficientFunds(address)\":[{\"params\":{\"token\":\"The token in which the payment was made.\"}}],\"Module__InvalidAddress()\":[{\"details\":\"Invalid Address.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"DataAsserted(bytes32,bytes32,address,bytes32)\":{\"params\":{\"asserter\":\"The address of the asserter.\",\"assertionId\":\"The assertionId that was asserted.\",\"data\":\"The data that was asserted.\",\"dataId\":\"The dataId that was asserted.\"}},\"DataAssertionResolved(bool,bytes32,bytes32,address,bytes32)\":{\"params\":{\"assertedTruthfully\":\"Whether the assertion was resolved as true or false.\",\"asserter\":\"The address of the asserter.\",\"assertionId\":\"The assertionId that was asserted.\",\"data\":\"The data that was asserted.\",\"dataId\":\"The dataId that was asserted.\"}},\"FeeFundsDeposited(address,uint256)\":{\"params\":{\"amount\":\"The amount deposited.\",\"token\":\"The token used for the deposit.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"KPICreated(uint256,uint256,uint256,bool,uint256[],uint256[])\":{\"params\":{\"KPI_Id\":\"The id of the KPI.\",\"continuous\":\"Whether the KPI is continuous or not.\",\"numOfTranches\":\"The number of tranches in the KPI.\",\"totalKPIRewards\":\"The total rewards for the KPI.\",\"trancheRewards\":\"The rewards to be distributed at completion of each tranche.\",\"trancheValues\":\"The values at which each tranche ends.\"}},\"ModuleInitialized(address,(uint256,uint256,uint256,string,string))\":{\"params\":{\"metadata\":\"The metadata of the module.\",\"parentOrchestrator\":\"The address of the {Orchestrator_v1} the module is linked to.\"}},\"PaymentOrderAdded(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens the payment consists of.\",\"recipient\":\"The address that will receive the payment.\",\"token\":\"The token in which to pay.\"}},\"RewardRoundConfigured(bytes32,uint256,uint256,uint256)\":{\"params\":{\"KpiToUse\":\"The KPI to be used for distribution once the assertion confirms.\",\"assertedValue\":\"The value that was asserted.\",\"assertionId\":\"The id of the assertion.\",\"creationTime\":\"The timestamp the assertion was created.\"}},\"RewardSet(uint256,uint256,uint256,uint256)\":{\"params\":{\"duration\":\"The duration of the reward period.\",\"newRewardRate\":\"The new reward rate.\",\"newRewardsEnd\":\"The new timestamp of when the rewards will end.\",\"rewardAmount\":\"The amount of tokens to distribute.\"}},\"RewardsDistributed(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens earned.\",\"user\":\"The address of the user.\"}},\"Staked(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens staked.\",\"user\":\"The address of the user.\"}},\"StakingTokenSet(address)\":{\"params\":{\"token\":\"Address of token that can be staked.\"}},\"Unstaked(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens unstaked.\",\"user\":\"The address of the user.\"}},\"Updated(address,uint256,uint256,uint256)\":{\"params\":{\"earnedRewards\":\"How much a user earned up to point of state change.\",\"lastUpdate\":\"Timestamp of last state change.\",\"rewardValue\":\"Variable necessary to calculate how much rewards a staker is eligible for.\",\"triggerAddress\":\"Address of user if state change was triggered by a staking action. Else can be zero.\"}}},\"kind\":\"dev\",\"methods\":{\"amountPaid(address,uint256)\":{\"details\":\"Payment Client will reduce the total amount of tokens it will stock up by the given amount.This has to be called by a paymentProcessor.\",\"params\":{\"amount\":\"amount of tokens that have been paid out.\",\"token\":\"The token in which the payment was made.\"}},\"assertDataFor(bytes32,bytes32,address)\":{\"details\":\"Data can be asserted many times with the same combination of arguments, resulting in unique assertionIds.         This is because the block.timestamp is included in the claim. The consumer contract must         store the returned assertionId identifiers to able to get the information using getData.\",\"params\":{\"asserter\":\"The address doing the asserter. If zero defaults to _msgSender().\",\"data\":\"The data to assert.\",\"dataId\":\"The id of the data to assert.\"},\"returns\":{\"assertionId\":\"The id of the generated Assertion.\"}},\"assertionDisputedCallback(bytes32)\":{\"details\":\"This OptimisticOracleV3 callback function needs to be defined so the OOv3 doesn't revert when it tries\",\"params\":{\"assertionId\":\"The identifier of the assertion that was disputed.\"}},\"assertionResolvedCallback(bytes32,bool)\":{\"params\":{\"assertedTruthfully\":\"Whether the assertion was resolved as truthful or not.\",\"assertionId\":\"The identifier of the assertion that was resolved.\"}},\"balanceOf(address)\":{\"params\":{\"user\":\"The address of a user that staked.\"}},\"claimRewards()\":{\"details\":\"Reaps the rewards collected up to this point for the msg.Sender().\"},\"collectPaymentOrders()\":{\"details\":\"Marks the orders as completed for the client.\",\"returns\":{\"_0\":\"list of payment orders.\",\"_1\":\"list of token addresses.\",\"_2\":\"list of amounts.\"}},\"createKPI(bool,uint256[],uint256[])\":{\"params\":{\"_continuous\":\"Should the tranche rewards be distributed continuously or in steps.\",\"_trancheRewards\":\"The rewards to be distributed at completion of each tranche.\",\"_trancheValues\":\"The value at which the tranches end.\"},\"returns\":{\"_0\":\"The KPI id.\"}},\"deleteStuckAssertion(bytes32)\":{\"details\":\"This function is only callable by the Orchestrator Admin.\",\"params\":{\"assertionId\":\"The id of the assertion to delete.\"}},\"depositFeeFunds(uint256)\":{\"details\":\"Top up funds to pay the optimistic oracle fee\",\"params\":{\"amount\":\"The amount to deposit.\"}},\"earned(address)\":{\"params\":{\"user\":\"The address of a user that staked.\"},\"returns\":{\"_0\":\"The amount of tokens earned.\"}},\"estimateReward(uint256,uint256)\":{\"details\":\"This calculation uses the current reward rate and the current totalSupply to calculate the rewards.the estimated result could be 0 if the estimated rewards are not high enough.\",\"params\":{\"amount\":\"How much token are staked.\",\"duration\":\"How long the tokens will be staked.\"},\"returns\":{\"_0\":\"The estimated amount of tokens earned.\"}},\"getAssertion(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"DataAssertion The Assertion.\"}},\"getAssertionConfig(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"The Assertion Configuration.\"}},\"getData(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"bool Wether the assertion is resolved.\",\"_1\":\"bytes32 The Assertion Data.\"}},\"getKPI(uint256)\":{\"params\":{\"KPInum\":\"The number of the KPI to return.\"},\"returns\":{\"_0\":\"The KPI.\"}},\"grantModuleRole(bytes32,address)\":{\"params\":{\"role\":\"The role to grant.\",\"target\":\"The target address to grant the role to.\"}},\"grantModuleRoleBatched(bytes32,address[])\":{\"params\":{\"role\":\"The role to grant.\",\"targets\":\"The target addresses to grant the role to.\"}},\"identifier()\":{\"details\":\"The identifier is defined as the keccak256 hash of the module's         abi packed encoded major version, url and title.\",\"returns\":{\"_0\":\"The module's identifier.\"}},\"init(address,(uint256,uint256,uint256,string,string),bytes)\":{\"details\":\"CAN be overridden by downstream contract.MUST call `__Module_init()`.\",\"params\":{\"configData\":\"Variable config data for specific module                   implementations.\",\"metadata\":\"The module's metadata.\",\"orchestrator\":\"The module's {Orchestrator_v1} instance.\"}},\"isTrustedForwarder(address)\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions         As it currently stands we dont want to feed the forwarder address to each module individually and we decided to         move this to the orchestrator.\",\"params\":{\"forwarder\":\"The contract address to be verified.\"},\"returns\":{\"_0\":\"bool Is the given address the trusted forwarder.\"}},\"orchestrator()\":{\"returns\":{\"_0\":\"The module's {Orchestrator_1}.\"}},\"outstandingTokenAmount(address)\":{\"params\":{\"token\":\"The token in which to pay.\"},\"returns\":{\"_0\":\"total amount of token to pay.\"}},\"paymentOrders()\":{\"returns\":{\"_0\":\"list of payment orders.\"}},\"postAssertion(bytes32,uint256,address,uint256)\":{\"details\":\"about the asserter address: any address can be set as asserter, it will be expected to pay for the         bond on posting.         The bond tokens can also be deposited in the Module and used to pay for itself,         but ONLY if the bond token is different from the one being used for staking.         If the asserter is set to 0, whomever calls postAssertion will be paying the bond.\",\"params\":{\"assertedValue\":\"The target value that will be asserted and posted as data to the oracle.\",\"asserter\":\"The address of the asserter.\",\"dataId\":\"The dataId to be posted.\",\"targetKPI\":\"The KPI to be used for distribution once the assertion confirms.\"},\"returns\":{\"assertionId\":\"The assertionId received for the posted assertion.\"}},\"revokeModuleRole(bytes32,address)\":{\"params\":{\"role\":\"The role to revoke.\",\"target\":\"The target address to revoke the role from.\"}},\"revokeModuleRoleBatched(bytes32,address[])\":{\"params\":{\"role\":\"The role to revoke.\",\"targets\":\"The target addresses to revoke the role from.\"}},\"setDefaultAssertionLiveness(uint64)\":{\"params\":{\"_newLiveness\":\"The new liveness in seconds.\"}},\"setDefaultCurrencyAndBond(address,uint256)\":{\"params\":{\"_newBond\":\"The new bond amount.\",\"_newCurrency\":\"The address of the new default currency.\"}},\"setOptimisticOracle(address)\":{\"params\":{\"_newOO\":\"The address of the new OptimisticOracleV3 instance.\"}},\"setRewards(uint256,uint256)\":{\"details\":\"Equally distributes the reward amount over the given time period.\",\"params\":{\"amount\":\"How much token should be distributed.\",\"duration\":\"How much time it will take to distribute the token.\"}},\"stake(uint256)\":{\"details\":\"Should tokens already be staked, then the sending address will collect the rewards up until this point.Fee on transfer tokens are currently not supported.\",\"params\":{\"amount\":\"How much token should be staked.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"title()\":{\"returns\":{\"_0\":\"The module's title.\"}},\"trustedForwarder()\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions.         As it currently stands we dont want to feed the forwarder address to each module individually and we decided to         move this to the orchestrator.\",\"returns\":{\"_0\":\"address The trusted forwarder.\"}},\"unstake(uint256)\":{\"details\":\"this function will revert with a Over/Underflow error in case amount is higher than balance.\",\"params\":{\"amount\":\"How much token should be unstaked.\"}},\"url()\":{\"returns\":{\"_0\":\"The module's URL.\"}},\"version()\":{\"returns\":{\"_0\":\"The module's major version.\",\"_1\":\"The module's minor version.\",\"_2\":\"The module's patch version.\"}}},\"stateVariables\":{\"KPICounter\":{\"details\":\"The number of KPIs created.\"},\"__gap\":{\"details\":\"Storage gap for future upgrades.\"},\"assertionConfig\":{\"details\":\"Registry of Assertion Configurations assertionId -> RewardRoundConfiguration.\"},\"assertionPending\":{\"details\":\"For locking certain utilities when there are assertions open.\"},\"registryOfKPIs\":{\"details\":\"Registry of KPIsid -> KPI.\"}},\"title\":\"Inverter KPI Rewarder Module\",\"version\":1},\"userdoc\":{\"errors\":{\"Module_OrchestratorCallbackFailed(string)\":[{\"notice\":\"{Orchestrator_v1} callback triggered failed.\"}],\"Module__CallerNotAuthorized(bytes32,address)\":[{\"notice\":\"Function is only callable by authorized caller.\"}],\"Module__ERC20PaymentClientBase__ArrayLengthMismatch()\":[{\"notice\":\"Given arrays' length mismatch.\"}],\"Module__ERC20PaymentClientBase__CallerNotAuthorized()\":[{\"notice\":\"Function is only callable by authorized address.\"}],\"Module__ERC20PaymentClientBase__InsufficientFunds(address)\":[{\"notice\":\"Insufficient funds to fulfill the payment.\"}],\"Module__ERC20PaymentClientBase__InvalidAmount()\":[{\"notice\":\"Given amount invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidPaymentOrder()\":[{\"notice\":\"Given paymentOrder is invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidRecipient()\":[{\"notice\":\"Given recipient invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidToken()\":[{\"notice\":\"Given token invalid.\"}],\"Module__ERC20PaymentClientBase__Invalidend()\":[{\"notice\":\"Given end invalid.\"}],\"Module__ERC20PaymentClientBase__TokenTransferFailed()\":[{\"notice\":\"ERC20 token transfer failed.\"}],\"Module__InvalidMetadata()\":[{\"notice\":\"Given metadata invalid.\"}],\"Module__InvalidOrchestratorAddress()\":[{\"notice\":\"Given {Orchestrator_v1} address invalid.\"}],\"Module__LM_PC_KPIRewarder_v1__AssertionNotStuck(bytes32)\":[{\"notice\":\"The assertion that is being removed was not stuck.\"}],\"Module__LM_PC_KPIRewarder_v1__CannotStakeWhenAssertionPending()\":[{\"notice\":\"The user cannot stake while an assertion is unresolved.\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPINumber()\":[{\"notice\":\"The KPI number is invalid.\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues()\":[{\"notice\":\"The values for the tranches are not in ascending order.\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths()\":[{\"notice\":\"The number of tranches in the KPI does not match the number of rewards.\"}],\"Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber()\":[{\"notice\":\"The KPI beinge created has either no tranches or too many.\"}],\"Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond()\":[{\"notice\":\"The Token used paying the bond cannot be the same that is being staked.\"}],\"Module__LM_PC_KPIRewarder_v1__NonExistentAssertionId(bytes32)\":[{\"notice\":\"Callback received references non existent assertionId.\"}],\"Module__LM_PC_KPIRewarder_v1__UnresolvedAssertionExists()\":[{\"notice\":\"An assertion can only by posted if the preceding one is resolved.\"}],\"Module__LM_PC_Staking_v1__InvalidDuration()\":[{\"notice\":\"Given Duration is invalid.\"}],\"Module__LM_PC_Staking_v1__InvalidRewardRate()\":[{\"notice\":\"The calculated Reward rate is too low to be used.\"}],\"Module__LM_PC_Staking_v1__InvalidStakingToken()\":[{\"notice\":\"Given staking token address is invalid.\"}],\"Module__OnlyCallableByOrchestrator()\":[{\"notice\":\"Function is only callable by the {Orchestrator_v1}.\"}],\"Module__OnlyCallableByPaymentClient()\":[{\"notice\":\"Function is only callable by a {IERC20PaymentClientBase_v1}.\"}],\"Module__OptimisticOracleIntegrator_InsufficientFundsToPayForBond()\":[{\"notice\":\"Asserter holds insufficient funds to pay for bond.\"}],\"Module__OptimisticOracleIntegrator__CallerNotOO()\":[{\"notice\":\"Caller is not Optimistic Oracle instance.\"}],\"Module__OptimisticOracleIntegrator__CurrencyBondTooLow()\":[{\"notice\":\"Bond given for the specified currency is below minimum.\"}],\"Module__OptimisticOracleIntegrator__InvalidDefaultCurrency()\":[{\"notice\":\"Invalid default currency.\"}],\"Module__OptimisticOracleIntegrator__InvalidDefaultLiveness()\":[{\"notice\":\"Invalid default liveness.\"}],\"Module__OptimisticOracleIntegrator__InvalidOOInstance()\":[{\"notice\":\"Invalid Optimistic Oracle instance.\"}]},\"events\":{\"DataAsserted(bytes32,bytes32,address,bytes32)\":{\"notice\":\"Event emitted when data is asserted.\"},\"DataAssertionResolved(bool,bytes32,bytes32,address,bytes32)\":{\"notice\":\"Event emitted when dataAssetiong is resolved.\"},\"DeletedStuckAssertion(bytes32)\":{\"notice\":\"Event emitted when a stuck assertion gets deleted.\"},\"FeeFundsDeposited(address,uint256)\":{\"notice\":\"Event emitted when funds for paying the bonding fee are deposited into the contract.\"},\"KPICreated(uint256,uint256,uint256,bool,uint256[],uint256[])\":{\"notice\":\"Event emitted when a KPI is created.\"},\"ModuleInitialized(address,(uint256,uint256,uint256,string,string))\":{\"notice\":\"Module has been initialized.\"},\"PaymentOrderAdded(address,address,uint256)\":{\"notice\":\"Added a payment order.\"},\"RewardRoundConfigured(bytes32,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a reward round is configured.\"},\"RewardSet(uint256,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a reward is added.\"},\"RewardsDistributed(address,uint256)\":{\"notice\":\"Event emitted when a user receives Rewards.\"},\"Staked(address,uint256)\":{\"notice\":\"Event emitted when a user stakes an amount.\"},\"StakingTokenSet(address)\":{\"notice\":\"Event emitted when staking token is set.\"},\"Unstaked(address,uint256)\":{\"notice\":\"Event emitted when a user unstakes an amount.\"},\"Updated(address,uint256,uint256,uint256)\":{\"notice\":\"Event emitted for each major change of state.\"}},\"kind\":\"user\",\"methods\":{\"amountPaid(address,uint256)\":{\"notice\":\"Notifies the PaymentClient, that tokens have been paid out accordingly.\"},\"assertDataFor(bytes32,bytes32,address)\":{\"notice\":\"Asserts data for a specific dataId on behalf of an asserter address.\"},\"assertionDisputedCallback(bytes32)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is disputed.\"},\"assertionResolvedCallback(bytes32,bool)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is resolved.\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens a user staked in this contract.\"},\"claimRewards()\":{\"notice\":\"Collects the rewards that are earned up until now.\"},\"collectPaymentOrders()\":{\"notice\":\"Collects outstanding payment orders.\"},\"createKPI(bool,uint256[],uint256[])\":{\"notice\":\"Creates a KPI for the Rewarder.\"},\"deleteStuckAssertion(bytes32)\":{\"notice\":\"Deletes a stuck assertion.\"},\"depositFeeFunds(uint256)\":{\"notice\":\"Deposits funds into the contract so it can pay for the oracle bond and fee itself.\"},\"earned(address)\":{\"notice\":\"Returns the amount of tokens earned up until now by the current stake of a user.\"},\"estimateReward(uint256,uint256)\":{\"notice\":\"Returns a estimation of how much rewards will be earned with the current state of the staking contract.\"},\"getAssertion(bytes32)\":{\"notice\":\"For a given assertionId, returns the assserion itself.\"},\"getAssertionConfig(bytes32)\":{\"notice\":\"Returns the Assertion Configuration for a given assertionId.\"},\"getData(bytes32)\":{\"notice\":\"For a given assertionId, returns a boolean indicating whether the data is accessible         and the data itself.\"},\"getKPI(uint256)\":{\"notice\":\"Returns the KPI with the given number.\"},\"grantModuleRole(bytes32,address)\":{\"notice\":\"Grants a module role to a target address.\"},\"grantModuleRoleBatched(bytes32,address[])\":{\"notice\":\"Grants a module role to multiple target addresses.\"},\"identifier()\":{\"notice\":\"Returns the module's identifier.\"},\"init(address,(uint256,uint256,uint256,string,string),bytes)\":{\"notice\":\"The module's initializer function.\"},\"isTrustedForwarder(address)\":{\"notice\":\"Checks if the provided address is the trusted forwarder.\"},\"orchestrator()\":{\"notice\":\"Returns the module's {Orchestrator_v1} interface, {IOrchestrator_v1}.\"},\"outstandingTokenAmount(address)\":{\"notice\":\"Returns the total outstanding token payment amount.\"},\"paymentOrders()\":{\"notice\":\"Returns the list of outstanding payment orders.\"},\"postAssertion(bytes32,uint256,address,uint256)\":{\"notice\":\"Posts an assertion to the Optimistic Oracle, specifying the KPI to use and the asserted value.\"},\"revokeModuleRole(bytes32,address)\":{\"notice\":\"Revokes a module role from a target address.\"},\"revokeModuleRoleBatched(bytes32,address[])\":{\"notice\":\"Revokes a module role from multiple target addresses.\"},\"setDefaultAssertionLiveness(uint64)\":{\"notice\":\"Sets the default time assertions will be open for dispute.\"},\"setDefaultCurrencyAndBond(address,uint256)\":{\"notice\":\"Sets the default currency and amount for the bond.\"},\"setOptimisticOracle(address)\":{\"notice\":\"Sets the OptimisticOracleV3 instance where assertions will be published to.\"},\"setRewards(uint256,uint256)\":{\"notice\":\"Sets the rewards that are to be distributed.\"},\"stake(uint256)\":{\"notice\":\"Stake a specified amount of tokens to earn rewards.\"},\"title()\":{\"notice\":\"Returns the module's title.\"},\"trustedForwarder()\":{\"notice\":\"Returns the trusted forwarder.\"},\"unstake(uint256)\":{\"notice\":\"Unstake a specified amount of tokens and collect rewards.\"},\"url()\":{\"notice\":\"Returns the module's URL.\"},\"version()\":{\"notice\":\"Returns the module's version.\"}},\"notice\":\"Provides a mechanism for distributing rewards to stakers based          on Key Performance Indicators (KPIs).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/logicModule/LM_PC_KPIRewarder_v1.sol\":\"LM_PC_KPIRewarder_v1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":750},\"remappings\":[\":@aut/=src/modules/authorizer/\",\":@df/=lib/deterministic-factory/src/\",\":@ex/=src/external/\",\":@fm/=src/modules/fundingManager/\",\":@lm/=src/modules/logicModule/\",\":@lm_pc/=src/modules/logicModule/paymentClient/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@pp/=src/modules/paymentProcessor/\",\":@uma/=lib/uma-protocol/packages/core/contracts/\",\":deterministic-factory/=lib/deterministic-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/deterministic-factory/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":uma-protocol/=lib/uma-protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x14b59e8cd5720c9cd31616450874b462f575bb52b387df2a54dbd26f9a07adf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://082df479035347a88472f330b089b421d798e4bb016f36b46ed80182e188b9ac\",\"dweb:/ipfs/QmZMCdVxCB3Lb5bf98YSF4HZFNShDkyyFg9Mg1s9oeM5ov\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/uma-protocol/packages/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"src/external/fees/interfaces/IFeeManager_v1.sol\":{\"keccak256\":\"0x655d93b595c66254f5432c3142c114da5479c75d4d67b59f9e221d58bf04ae7e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://54f7a5771189d06997dddc37b53082d3d8b747bd7fcb5efbeb8b4ee921d3e705\",\"dweb:/ipfs/QmQQvoJsRQbSg6od3P1Z7f83gyKVBjoM4PsaEPRAVW2icQ\"]},\"src/external/governance/interfaces/IGovernor_v1.sol\":{\"keccak256\":\"0xed0154b2d4ef44e49db7085bce8d62da37b66aa673884ca1c6e738695073c448\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c1dfbabb342fb17c6c2212aee81588e14305152e65018780ae603d680c37494c\",\"dweb:/ipfs/QmeE1BPqF7GsD2hzuE2ckmNdz3ZVUQ2eN7WsDVMEWZpuW6\"]},\"src/external/interfaces/IERC2771Context.sol\":{\"keccak256\":\"0xdb0580aaaba4ae2c0d9e10412ff83f3c7efe99949e241a07ccfa1cb92a2ba0db\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://82fc191e17b3221d8965ed5da2560f29b1c25216be3515a73134da5761a6e421\",\"dweb:/ipfs/QmRUHmePb4mbtYnG69D2TX3Y7USfz97SCffFn9DR3jWruZ\"]},\"src/factories/interfaces/IModuleFactory_v1.sol\":{\"keccak256\":\"0x242182fa6fb04f642848a9b9ac7259df0109d7e6c872320f2f237d293c2e0b6d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a0e09c61a9c4d69f493e12c7c0f7376055a70cd8cde738ca64920706ad3495c9\",\"dweb:/ipfs/QmeQ1Pdtv5xkb37yXX8sGbUe7AGKEjGZar6H7jc5TxK3uf\"]},\"src/factories/interfaces/IOrchestratorFactory_v1.sol\":{\"keccak256\":\"0xfb9d598f8dae48593c457d36520414dd5f6ee5bbc2978c4413a561c03a8037b9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://677d9acc88f389fb3323b77bf0b0679a9461546d7c1dd30b7d44d3756dfe0d80\",\"dweb:/ipfs/QmW6CojPhFAu9WpmyJAVdNht5ZnF43Zu54zsVTcJzxuXYu\"]},\"src/modules/authorizer/IAuthorizer_v1.sol\":{\"keccak256\":\"0x07cda177f585d2dd94f54c4952e6dda485031ce4f68419eaf2f20a008d1a0888\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1b6434ad6f00da437a16e279cf3ac531d6d678df7978cb36e79a7011ff3f429e\",\"dweb:/ipfs/QmUuhJcpJfShLvhacrppPu4bKpjfXCvbvpCLNX6apwWGtW\"]},\"src/modules/base/IModule_v1.sol\":{\"keccak256\":\"0x25b693726deaca560b6d251473488cb7e613e660390f20729ff85f9b16061c2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://13dde2116ec823fb5c5852c0477d15cb4f9e5e73414b3a1694d56c46222a189a\",\"dweb:/ipfs/QmWspKVFWY5NFKMVsZAqHYBieZE6jmCt16nFRZg8F4WPpA\"]},\"src/modules/base/Module_v1.sol\":{\"keccak256\":\"0x3ad11bad71251f91e4ca01d45415e17d780bf1b9081885dbb94b7b0d9991949c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7cb6c1a044a35d1625a0c44341f4f039eb465b7389aae58c5cdbe94c3764527a\",\"dweb:/ipfs/QmSc4BoAZkmPNVLpYbRTwzNiZkTFr7hH8A33vG7pmLanFS\"]},\"src/modules/fundingManager/IFundingManager_v1.sol\":{\"keccak256\":\"0xd134329084248cb2b5fe04ea32af7fb481d29288dec52cb9ce8e03f56148d2c9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c796afe7e30e751165d9167692e2426b472ae0203d094a9afa28929e501abab7\",\"dweb:/ipfs/QmeUspckKVaK5vR2Jyo2MT2gBCiM7UoXA4o6NGS6SFi98D\"]},\"src/modules/lib/LibMetadata.sol\":{\"keccak256\":\"0x9a524b8697167b605c0b980b3e81688d448922ab38cd040f2b1c664946666c4a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5dd325f05f6812218a7f808af5afc1ec6cf95f1250c33d4dd1ad01ec4b041d50\",\"dweb:/ipfs/Qmem29JZSEpYLDqJn4cBxawGokbzo3taqHtb3UyyDvmB8G\"]},\"src/modules/logicModule/LM_PC_KPIRewarder_v1.sol\":{\"keccak256\":\"0xe7268dcbc98f6099a0fcab63c681b0c1153902a45e1cfbd46252b34a3aeb1e0a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7cd26c6945cf6a665b028c77ab7fef3e7f093367dcd4573355a3e5104d034114\",\"dweb:/ipfs/QmQtLjzdjXu7Q23P5fkJnBxG3zC9X5i5gMjVgzkDCMi56i\"]},\"src/modules/logicModule/LM_PC_Staking_v1.sol\":{\"keccak256\":\"0xfa3bf7aa5cc068b5522ad50ae23b0551dbfa53ee6ce591a9fb45311a66b7eb8c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://79857a399a5a426629ae1aad5597a01a1f803ec7efcb145e75ec7d6a7ebb455b\",\"dweb:/ipfs/QmeBpqvQN6qKoVnWF41eE6i26cVaNJXsCZKBeW2c5yKhsY\"]},\"src/modules/logicModule/abstracts/ERC20PaymentClientBase_v1.sol\":{\"keccak256\":\"0x3d23cc5bf2f6563b4ee8bebfc69543f9ef485b3c454cc7bfd3051487dd90d006\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://84f040146da2ae5b0f3438213c230c810eb368b019790169e899bdb0a277736f\",\"dweb:/ipfs/QmeVnekGFZ84Ab3X2NThkar3RpDRDHtHsXShrPyUHDpKax\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/IOptimisticOracleIntegrator.sol\":{\"keccak256\":\"0x440b316ad88141e6fadc3cb1505df9bd4d4fc998df472fd1fae612cc71ceb0af\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e87cae6ecaa56d1ee6b7544a29a2b0b3e2c8de044311ed964d638f6fbe34bbe3\",\"dweb:/ipfs/QmSzdJ3buR5nWFki77jZpchvZos25K1GY2VSx6FVPvv7s4\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/OptimisticOracleIntegrator.sol\":{\"keccak256\":\"0xcd3f5c011abfde4977beee9b583702f21be09e515bc40c86d128ea46630dc2db\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b8c1d6c884906312c5e9540066ddb65bc2bf4cab7013fb00a5f019553b00474\",\"dweb:/ipfs/QmWe28z6xQmDMZpnNRu1Xz6zYxZvN8Gkwib9gTjSunhARx\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/ClaimData.sol\":{\"keccak256\":\"0x15ff9d5c58afe8172fb6e0177fa4214169749811b7aa4b6b8295647aefc77e80\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://65d7a6e5fa55575b183b1ea0410d4fb2aee17eb2e1214be6f56810394839d060\",\"dweb:/ipfs/QmUkEea5rcn2vE3m1fJGFRHUJiSaHCZXYxQc5RqA8yguHe\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x74154dc8037b4f8b934e0df8d92a1110d571a00bdfc6bc485c3e1c5bf4bc9d02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9e3f5e3cd3a262da4442fc55f8499cc9de2b4d751152405ac82a5098db22b27e\",\"dweb:/ipfs/QmWuALHseY4LWHNfZRWeE25Fu3ZZukZWMR1s32ggoKArcB\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xa224d49e21e46e2548bff547bcabbb950849ca9705c9149651e273a1be907760\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ede70c9959f574b80d6fbc24bb3edab598c200b5402d8c2a7fc7f68193d1d7d\",\"dweb:/ipfs/QmVeQctwAzm9ACcKdxFs7kbuuUWtEzABen2GbakoecuYaf\"]},\"src/modules/logicModule/interfaces/IERC20PaymentClientBase_v1.sol\":{\"keccak256\":\"0x29f538a416c5a71a54eebef838b6c4dece020d3be178980d98b2334417ffc16b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6a24f4196f863ee2fb2c5dbe299efcd5b7c5ffaf65048cf5a14bb06245fb1cc3\",\"dweb:/ipfs/QmREdsJYZaQkhtDTJ5mbKZbdiMjSSmDsdWFSu2YPhVcLZQ\"]},\"src/modules/logicModule/interfaces/ILM_PC_KPIRewarder_v1.sol\":{\"keccak256\":\"0x9b07a1299b7b23d3999ba8018bd168e00e8ccab6b6e3e4eac3c765e032007ec9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://aa273f005578640efa959333154950c6752a7abcfa0a4c8f6dd66b89c31d8596\",\"dweb:/ipfs/Qme92cFFxMEHPCP8Dyd27enLzqHh94S6zLPYZzkuzEgRYz\"]},\"src/modules/logicModule/interfaces/ILM_PC_Staking_v1.sol\":{\"keccak256\":\"0xb24312d95b24c20b57361167783147cacf8c5e954f760241be24e7c804603561\",\"urls\":[\"bzz-raw://fec43e22f78316aeed6a1f7e52b518c81ff0756509065685245aa44064d81199\",\"dweb:/ipfs/QmdASZFDFTB5Q5dnhR9CMsYFftDUuFhzR8sNqZqsttR4vP\"]},\"src/modules/paymentProcessor/IPaymentProcessor_v1.sol\":{\"keccak256\":\"0xb0c2db0028d7de4c201b75449b6c959478f965a2d342c9880dad026ef9da8905\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://194f9317a8e2ebe26f8422d19cf0a89869b1867a48c63f06481dea6aeb4c347d\",\"dweb:/ipfs/QmRYhWwaZaYXBBzN9yLpXGjbP6whYanJJhM9jDjJ4ZCftK\"]},\"src/orchestrator/interfaces/IModuleManagerBase_v1.sol\":{\"keccak256\":\"0x2abd1abb278da305c6a47d11ef31ef7a7de2aebf017957b0013497de8e2aa2eb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5d49aac1e351f80bce5c27fb0934577d64551c25fcbad6dd172b6eee7b8bf57a\",\"dweb:/ipfs/QmRdR4Ut7gV9Zp295ciYnwYqjdXKxZAAegVhtsGpetiwsC\"]},\"src/orchestrator/interfaces/IOrchestrator_v1.sol\":{\"keccak256\":\"0xed08e392f5b321609173e95333e94f57bb83b42fda8a98c7af77e035d2d53c0f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://003498e95d4be3ea4f9eb13ec87c450eaf437f03a69d0d7c681e2f723240d2f9\",\"dweb:/ipfs/QmcTiDEK7UytSy8c2gHVpjMHoSqtf4CswmLP4LYeRn7aFb\"]},\"src/proxies/interfaces/IInverterBeacon_v1.sol\":{\"keccak256\":\"0x23cd7a4ada497ebd9834d521843673881427d563906662156e748366a6a03fb5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://49cbce7e794b38126494ee0c4a26f9807fc284e0e5c59ad8a1a229e60f196e66\",\"dweb:/ipfs/Qma3hZfASQ6Gaa4anDhTmhNA1HPiYSD6eJ9Gnn817rP8VJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "funcSig",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Module_OrchestratorCallbackFailed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module__CallerNotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__CallerNotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InsufficientFunds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidPaymentOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__Invalidend"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__TokenTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__InvalidMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__InvalidOrchestratorAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__AssertionNotStuck"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__CannotStakeWhenAssertionPending"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPINumber"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPITrancheValues"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidKPIValueLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__InvalidTrancheNumber"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__ModuleCannotUseStakingTokenAsBond"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__NonExistentAssertionId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v1__UnresolvedAssertionExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v1__InvalidDuration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v1__InvalidRewardRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v1__InvalidStakingToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OnlyCallableByOrchestrator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OnlyCallableByPaymentClient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator_InsufficientFundsToPayForBond"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__CallerNotOO"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__CurrencyBondTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidDefaultCurrency"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidDefaultLiveness"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidOOInstance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAsserted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAssertionResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DeletedStuckAssertion",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeFundsDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "KPI_Id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "numOfTranches",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalKPIRewards",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "continuous",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "trancheValues",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "trancheRewards",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "KPICreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "parentOrchestrator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IModule_v1.Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "majorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "patchVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "url",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PaymentOrderAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creationTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "assertedValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "KpiToUse",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardRoundConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardRate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsEnd",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakingTokenSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "triggerAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lastUpdate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "earnedRewards",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Updated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ASSERTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "KPICounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "amountPaid"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data_",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertDataFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionConfig",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assertedValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "KpiToUse",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "distributed",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionData",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "resolved",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionDisputedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionPending",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionResolvedCallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectPaymentOrders",
          "outputs": [
            {
              "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymentToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cliff",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_continuous",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "_trancheValues",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_trancheRewards",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createKPI",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteStuckAssertion"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFeeFunds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "earned",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "estimateReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertion",
          "outputs": [
            {
              "internalType": "struct IOptimisticOracleIntegrator.DataAssertion",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "dataId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "asserter",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "resolved",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertionConfig",
          "outputs": [
            {
              "internalType": "struct ILM_PC_KPIRewarder_v1.RewardRoundConfiguration",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creationTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assertedValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "KpiToUse",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "distributed",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "KPInum",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKPI",
          "outputs": [
            {
              "internalType": "struct ILM_PC_KPIRewarder_v1.KPI",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numOfTranches",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "continuous",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "trancheValues",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "trancheRewards",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantModuleRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantModuleRoleBatched"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IOrchestrator_v1",
              "name": "orchestrator_",
              "type": "address"
            },
            {
              "internalType": "struct IModule_v1.Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "majorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "patchVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "url",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "configData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "orchestrator",
          "outputs": [
            {
              "internalType": "contract IOrchestrator_v1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "outstandingTokenAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paymentOrders",
          "outputs": [
            {
              "internalType": "struct IERC20PaymentClientBase_v1.PaymentOrder[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymentToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cliff",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assertedValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetKPI",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postAssertion",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "registryOfKPIs",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "numOfTranches",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalRewards",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "continuous",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeModuleRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeModuleRoleBatched"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardsEnd",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_newLiveness",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultAssertionLiveness"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newCurrency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_newBond",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultCurrencyAndBond"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOO",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOptimisticOracle"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewards"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "title",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "url",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "amountPaid(address,uint256)": {
            "details": "Payment Client will reduce the total amount of tokens it will stock up by the given amount.This has to be called by a paymentProcessor.",
            "params": {
              "amount": "amount of tokens that have been paid out.",
              "token": "The token in which the payment was made."
            }
          },
          "assertDataFor(bytes32,bytes32,address)": {
            "details": "Data can be asserted many times with the same combination of arguments, resulting in unique assertionIds.         This is because the block.timestamp is included in the claim. The consumer contract must         store the returned assertionId identifiers to able to get the information using getData.",
            "params": {
              "asserter": "The address doing the asserter. If zero defaults to _msgSender().",
              "data": "The data to assert.",
              "dataId": "The id of the data to assert."
            },
            "returns": {
              "assertionId": "The id of the generated Assertion."
            }
          },
          "assertionDisputedCallback(bytes32)": {
            "details": "This OptimisticOracleV3 callback function needs to be defined so the OOv3 doesn't revert when it tries",
            "params": {
              "assertionId": "The identifier of the assertion that was disputed."
            }
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "params": {
              "assertedTruthfully": "Whether the assertion was resolved as truthful or not.",
              "assertionId": "The identifier of the assertion that was resolved."
            }
          },
          "balanceOf(address)": {
            "params": {
              "user": "The address of a user that staked."
            }
          },
          "claimRewards()": {
            "details": "Reaps the rewards collected up to this point for the msg.Sender()."
          },
          "collectPaymentOrders()": {
            "details": "Marks the orders as completed for the client.",
            "returns": {
              "_0": "list of payment orders.",
              "_1": "list of token addresses.",
              "_2": "list of amounts."
            }
          },
          "createKPI(bool,uint256[],uint256[])": {
            "params": {
              "_continuous": "Should the tranche rewards be distributed continuously or in steps.",
              "_trancheRewards": "The rewards to be distributed at completion of each tranche.",
              "_trancheValues": "The value at which the tranches end."
            },
            "returns": {
              "_0": "The KPI id."
            }
          },
          "deleteStuckAssertion(bytes32)": {
            "details": "This function is only callable by the Orchestrator Admin.",
            "params": {
              "assertionId": "The id of the assertion to delete."
            }
          },
          "depositFeeFunds(uint256)": {
            "details": "Top up funds to pay the optimistic oracle fee",
            "params": {
              "amount": "The amount to deposit."
            }
          },
          "earned(address)": {
            "params": {
              "user": "The address of a user that staked."
            },
            "returns": {
              "_0": "The amount of tokens earned."
            }
          },
          "estimateReward(uint256,uint256)": {
            "details": "This calculation uses the current reward rate and the current totalSupply to calculate the rewards.the estimated result could be 0 if the estimated rewards are not high enough.",
            "params": {
              "amount": "How much token are staked.",
              "duration": "How long the tokens will be staked."
            },
            "returns": {
              "_0": "The estimated amount of tokens earned."
            }
          },
          "getAssertion(bytes32)": {
            "params": {
              "assertionId": "The id of the Assertion to return."
            },
            "returns": {
              "_0": "DataAssertion The Assertion."
            }
          },
          "getAssertionConfig(bytes32)": {
            "params": {
              "assertionId": "The id of the Assertion to return."
            },
            "returns": {
              "_0": "The Assertion Configuration."
            }
          },
          "getData(bytes32)": {
            "params": {
              "assertionId": "The id of the Assertion to return."
            },
            "returns": {
              "_0": "bool Wether the assertion is resolved.",
              "_1": "bytes32 The Assertion Data."
            }
          },
          "getKPI(uint256)": {
            "params": {
              "KPInum": "The number of the KPI to return."
            },
            "returns": {
              "_0": "The KPI."
            }
          },
          "grantModuleRole(bytes32,address)": {
            "params": {
              "role": "The role to grant.",
              "target": "The target address to grant the role to."
            }
          },
          "grantModuleRoleBatched(bytes32,address[])": {
            "params": {
              "role": "The role to grant.",
              "targets": "The target addresses to grant the role to."
            }
          },
          "identifier()": {
            "details": "The identifier is defined as the keccak256 hash of the module's         abi packed encoded major version, url and title.",
            "returns": {
              "_0": "The module's identifier."
            }
          },
          "init(address,(uint256,uint256,uint256,string,string),bytes)": {
            "details": "CAN be overridden by downstream contract.MUST call `__Module_init()`.",
            "params": {
              "configData": "Variable config data for specific module                   implementations.",
              "metadata": "The module's metadata.",
              "orchestrator": "The module's {Orchestrator_v1} instance."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "We imitate here the EIP2771 Standard to enable metatransactions         As it currently stands we dont want to feed the forwarder address to each module individually and we decided to         move this to the orchestrator.",
            "params": {
              "forwarder": "The contract address to be verified."
            },
            "returns": {
              "_0": "bool Is the given address the trusted forwarder."
            }
          },
          "orchestrator()": {
            "returns": {
              "_0": "The module's {Orchestrator_1}."
            }
          },
          "outstandingTokenAmount(address)": {
            "params": {
              "token": "The token in which to pay."
            },
            "returns": {
              "_0": "total amount of token to pay."
            }
          },
          "paymentOrders()": {
            "returns": {
              "_0": "list of payment orders."
            }
          },
          "postAssertion(bytes32,uint256,address,uint256)": {
            "details": "about the asserter address: any address can be set as asserter, it will be expected to pay for the         bond on posting.         The bond tokens can also be deposited in the Module and used to pay for itself,         but ONLY if the bond token is different from the one being used for staking.         If the asserter is set to 0, whomever calls postAssertion will be paying the bond.",
            "params": {
              "assertedValue": "The target value that will be asserted and posted as data to the oracle.",
              "asserter": "The address of the asserter.",
              "dataId": "The dataId to be posted.",
              "targetKPI": "The KPI to be used for distribution once the assertion confirms."
            },
            "returns": {
              "assertionId": "The assertionId received for the posted assertion."
            }
          },
          "revokeModuleRole(bytes32,address)": {
            "params": {
              "role": "The role to revoke.",
              "target": "The target address to revoke the role from."
            }
          },
          "revokeModuleRoleBatched(bytes32,address[])": {
            "params": {
              "role": "The role to revoke.",
              "targets": "The target addresses to revoke the role from."
            }
          },
          "setDefaultAssertionLiveness(uint64)": {
            "params": {
              "_newLiveness": "The new liveness in seconds."
            }
          },
          "setDefaultCurrencyAndBond(address,uint256)": {
            "params": {
              "_newBond": "The new bond amount.",
              "_newCurrency": "The address of the new default currency."
            }
          },
          "setOptimisticOracle(address)": {
            "params": {
              "_newOO": "The address of the new OptimisticOracleV3 instance."
            }
          },
          "setRewards(uint256,uint256)": {
            "details": "Equally distributes the reward amount over the given time period.",
            "params": {
              "amount": "How much token should be distributed.",
              "duration": "How much time it will take to distribute the token."
            }
          },
          "stake(uint256)": {
            "details": "Should tokens already be staked, then the sending address will collect the rewards up until this point.Fee on transfer tokens are currently not supported.",
            "params": {
              "amount": "How much token should be staked."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "title()": {
            "returns": {
              "_0": "The module's title."
            }
          },
          "trustedForwarder()": {
            "details": "We imitate here the EIP2771 Standard to enable metatransactions.         As it currently stands we dont want to feed the forwarder address to each module individually and we decided to         move this to the orchestrator.",
            "returns": {
              "_0": "address The trusted forwarder."
            }
          },
          "unstake(uint256)": {
            "details": "this function will revert with a Over/Underflow error in case amount is higher than balance.",
            "params": {
              "amount": "How much token should be unstaked."
            }
          },
          "url()": {
            "returns": {
              "_0": "The module's URL."
            }
          },
          "version()": {
            "returns": {
              "_0": "The module's major version.",
              "_1": "The module's minor version.",
              "_2": "The module's patch version."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "amountPaid(address,uint256)": {
            "notice": "Notifies the PaymentClient, that tokens have been paid out accordingly."
          },
          "assertDataFor(bytes32,bytes32,address)": {
            "notice": "Asserts data for a specific dataId on behalf of an asserter address."
          },
          "assertionDisputedCallback(bytes32)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is disputed."
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is resolved."
          },
          "balanceOf(address)": {
            "notice": "Returns the amount of tokens a user staked in this contract."
          },
          "claimRewards()": {
            "notice": "Collects the rewards that are earned up until now."
          },
          "collectPaymentOrders()": {
            "notice": "Collects outstanding payment orders."
          },
          "createKPI(bool,uint256[],uint256[])": {
            "notice": "Creates a KPI for the Rewarder."
          },
          "deleteStuckAssertion(bytes32)": {
            "notice": "Deletes a stuck assertion."
          },
          "depositFeeFunds(uint256)": {
            "notice": "Deposits funds into the contract so it can pay for the oracle bond and fee itself."
          },
          "earned(address)": {
            "notice": "Returns the amount of tokens earned up until now by the current stake of a user."
          },
          "estimateReward(uint256,uint256)": {
            "notice": "Returns a estimation of how much rewards will be earned with the current state of the staking contract."
          },
          "getAssertion(bytes32)": {
            "notice": "For a given assertionId, returns the assserion itself."
          },
          "getAssertionConfig(bytes32)": {
            "notice": "Returns the Assertion Configuration for a given assertionId."
          },
          "getData(bytes32)": {
            "notice": "For a given assertionId, returns a boolean indicating whether the data is accessible         and the data itself."
          },
          "getKPI(uint256)": {
            "notice": "Returns the KPI with the given number."
          },
          "grantModuleRole(bytes32,address)": {
            "notice": "Grants a module role to a target address."
          },
          "grantModuleRoleBatched(bytes32,address[])": {
            "notice": "Grants a module role to multiple target addresses."
          },
          "identifier()": {
            "notice": "Returns the module's identifier."
          },
          "init(address,(uint256,uint256,uint256,string,string),bytes)": {
            "notice": "The module's initializer function."
          },
          "isTrustedForwarder(address)": {
            "notice": "Checks if the provided address is the trusted forwarder."
          },
          "orchestrator()": {
            "notice": "Returns the module's {Orchestrator_v1} interface, {IOrchestrator_v1}."
          },
          "outstandingTokenAmount(address)": {
            "notice": "Returns the total outstanding token payment amount."
          },
          "paymentOrders()": {
            "notice": "Returns the list of outstanding payment orders."
          },
          "postAssertion(bytes32,uint256,address,uint256)": {
            "notice": "Posts an assertion to the Optimistic Oracle, specifying the KPI to use and the asserted value."
          },
          "revokeModuleRole(bytes32,address)": {
            "notice": "Revokes a module role from a target address."
          },
          "revokeModuleRoleBatched(bytes32,address[])": {
            "notice": "Revokes a module role from multiple target addresses."
          },
          "setDefaultAssertionLiveness(uint64)": {
            "notice": "Sets the default time assertions will be open for dispute."
          },
          "setDefaultCurrencyAndBond(address,uint256)": {
            "notice": "Sets the default currency and amount for the bond."
          },
          "setOptimisticOracle(address)": {
            "notice": "Sets the OptimisticOracleV3 instance where assertions will be published to."
          },
          "setRewards(uint256,uint256)": {
            "notice": "Sets the rewards that are to be distributed."
          },
          "stake(uint256)": {
            "notice": "Stake a specified amount of tokens to earn rewards."
          },
          "title()": {
            "notice": "Returns the module's title."
          },
          "trustedForwarder()": {
            "notice": "Returns the trusted forwarder."
          },
          "unstake(uint256)": {
            "notice": "Unstake a specified amount of tokens and collect rewards."
          },
          "url()": {
            "notice": "Returns the module's URL."
          },
          "version()": {
            "notice": "Returns the module's version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aut/=src/modules/authorizer/",
        "@df/=lib/deterministic-factory/src/",
        "@ex/=src/external/",
        "@fm/=src/modules/fundingManager/",
        "@lm/=src/modules/logicModule/",
        "@lm_pc/=src/modules/logicModule/paymentClient/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "@pp/=src/modules/paymentProcessor/",
        "@uma/=lib/uma-protocol/packages/core/contracts/",
        "deterministic-factory/=lib/deterministic-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/deterministic-factory/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "uma-protocol/=lib/uma-protocol/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 750
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/logicModule/LM_PC_KPIRewarder_v1.sol": "LM_PC_KPIRewarder_v1"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x14b59e8cd5720c9cd31616450874b462f575bb52b387df2a54dbd26f9a07adf8",
        "urls": [
          "bzz-raw://082df479035347a88472f330b089b421d798e4bb016f36b46ed80182e188b9ac",
          "dweb:/ipfs/QmZMCdVxCB3Lb5bf98YSF4HZFNShDkyyFg9Mg1s9oeM5ov"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74",
        "urls": [
          "bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45",
          "dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8",
        "urls": [
          "bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45",
          "dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol": {
        "keccak256": "0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306",
        "urls": [
          "bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3",
          "dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/uma-protocol/packages/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/fees/interfaces/IFeeManager_v1.sol": {
        "keccak256": "0x655d93b595c66254f5432c3142c114da5479c75d4d67b59f9e221d58bf04ae7e",
        "urls": [
          "bzz-raw://54f7a5771189d06997dddc37b53082d3d8b747bd7fcb5efbeb8b4ee921d3e705",
          "dweb:/ipfs/QmQQvoJsRQbSg6od3P1Z7f83gyKVBjoM4PsaEPRAVW2icQ"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/external/governance/interfaces/IGovernor_v1.sol": {
        "keccak256": "0xed0154b2d4ef44e49db7085bce8d62da37b66aa673884ca1c6e738695073c448",
        "urls": [
          "bzz-raw://c1dfbabb342fb17c6c2212aee81588e14305152e65018780ae603d680c37494c",
          "dweb:/ipfs/QmeE1BPqF7GsD2hzuE2ckmNdz3ZVUQ2eN7WsDVMEWZpuW6"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/external/interfaces/IERC2771Context.sol": {
        "keccak256": "0xdb0580aaaba4ae2c0d9e10412ff83f3c7efe99949e241a07ccfa1cb92a2ba0db",
        "urls": [
          "bzz-raw://82fc191e17b3221d8965ed5da2560f29b1c25216be3515a73134da5761a6e421",
          "dweb:/ipfs/QmRUHmePb4mbtYnG69D2TX3Y7USfz97SCffFn9DR3jWruZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/factories/interfaces/IModuleFactory_v1.sol": {
        "keccak256": "0x242182fa6fb04f642848a9b9ac7259df0109d7e6c872320f2f237d293c2e0b6d",
        "urls": [
          "bzz-raw://a0e09c61a9c4d69f493e12c7c0f7376055a70cd8cde738ca64920706ad3495c9",
          "dweb:/ipfs/QmeQ1Pdtv5xkb37yXX8sGbUe7AGKEjGZar6H7jc5TxK3uf"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/factories/interfaces/IOrchestratorFactory_v1.sol": {
        "keccak256": "0xfb9d598f8dae48593c457d36520414dd5f6ee5bbc2978c4413a561c03a8037b9",
        "urls": [
          "bzz-raw://677d9acc88f389fb3323b77bf0b0679a9461546d7c1dd30b7d44d3756dfe0d80",
          "dweb:/ipfs/QmW6CojPhFAu9WpmyJAVdNht5ZnF43Zu54zsVTcJzxuXYu"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/authorizer/IAuthorizer_v1.sol": {
        "keccak256": "0x07cda177f585d2dd94f54c4952e6dda485031ce4f68419eaf2f20a008d1a0888",
        "urls": [
          "bzz-raw://1b6434ad6f00da437a16e279cf3ac531d6d678df7978cb36e79a7011ff3f429e",
          "dweb:/ipfs/QmUuhJcpJfShLvhacrppPu4bKpjfXCvbvpCLNX6apwWGtW"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/base/IModule_v1.sol": {
        "keccak256": "0x25b693726deaca560b6d251473488cb7e613e660390f20729ff85f9b16061c2c",
        "urls": [
          "bzz-raw://13dde2116ec823fb5c5852c0477d15cb4f9e5e73414b3a1694d56c46222a189a",
          "dweb:/ipfs/QmWspKVFWY5NFKMVsZAqHYBieZE6jmCt16nFRZg8F4WPpA"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/base/Module_v1.sol": {
        "keccak256": "0x3ad11bad71251f91e4ca01d45415e17d780bf1b9081885dbb94b7b0d9991949c",
        "urls": [
          "bzz-raw://7cb6c1a044a35d1625a0c44341f4f039eb465b7389aae58c5cdbe94c3764527a",
          "dweb:/ipfs/QmSc4BoAZkmPNVLpYbRTwzNiZkTFr7hH8A33vG7pmLanFS"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/fundingManager/IFundingManager_v1.sol": {
        "keccak256": "0xd134329084248cb2b5fe04ea32af7fb481d29288dec52cb9ce8e03f56148d2c9",
        "urls": [
          "bzz-raw://c796afe7e30e751165d9167692e2426b472ae0203d094a9afa28929e501abab7",
          "dweb:/ipfs/QmeUspckKVaK5vR2Jyo2MT2gBCiM7UoXA4o6NGS6SFi98D"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/lib/LibMetadata.sol": {
        "keccak256": "0x9a524b8697167b605c0b980b3e81688d448922ab38cd040f2b1c664946666c4a",
        "urls": [
          "bzz-raw://5dd325f05f6812218a7f808af5afc1ec6cf95f1250c33d4dd1ad01ec4b041d50",
          "dweb:/ipfs/Qmem29JZSEpYLDqJn4cBxawGokbzo3taqHtb3UyyDvmB8G"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/LM_PC_KPIRewarder_v1.sol": {
        "keccak256": "0xe7268dcbc98f6099a0fcab63c681b0c1153902a45e1cfbd46252b34a3aeb1e0a",
        "urls": [
          "bzz-raw://7cd26c6945cf6a665b028c77ab7fef3e7f093367dcd4573355a3e5104d034114",
          "dweb:/ipfs/QmQtLjzdjXu7Q23P5fkJnBxG3zC9X5i5gMjVgzkDCMi56i"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/LM_PC_Staking_v1.sol": {
        "keccak256": "0xfa3bf7aa5cc068b5522ad50ae23b0551dbfa53ee6ce591a9fb45311a66b7eb8c",
        "urls": [
          "bzz-raw://79857a399a5a426629ae1aad5597a01a1f803ec7efcb145e75ec7d6a7ebb455b",
          "dweb:/ipfs/QmeBpqvQN6qKoVnWF41eE6i26cVaNJXsCZKBeW2c5yKhsY"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/ERC20PaymentClientBase_v1.sol": {
        "keccak256": "0x3d23cc5bf2f6563b4ee8bebfc69543f9ef485b3c454cc7bfd3051487dd90d006",
        "urls": [
          "bzz-raw://84f040146da2ae5b0f3438213c230c810eb368b019790169e899bdb0a277736f",
          "dweb:/ipfs/QmeVnekGFZ84Ab3X2NThkar3RpDRDHtHsXShrPyUHDpKax"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/IOptimisticOracleIntegrator.sol": {
        "keccak256": "0x440b316ad88141e6fadc3cb1505df9bd4d4fc998df472fd1fae612cc71ceb0af",
        "urls": [
          "bzz-raw://e87cae6ecaa56d1ee6b7544a29a2b0b3e2c8de044311ed964d638f6fbe34bbe3",
          "dweb:/ipfs/QmSzdJ3buR5nWFki77jZpchvZos25K1GY2VSx6FVPvv7s4"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/OptimisticOracleIntegrator.sol": {
        "keccak256": "0xcd3f5c011abfde4977beee9b583702f21be09e515bc40c86d128ea46630dc2db",
        "urls": [
          "bzz-raw://4b8c1d6c884906312c5e9540066ddb65bc2bf4cab7013fb00a5f019553b00474",
          "dweb:/ipfs/QmWe28z6xQmDMZpnNRu1Xz6zYxZvN8Gkwib9gTjSunhARx"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/ClaimData.sol": {
        "keccak256": "0x15ff9d5c58afe8172fb6e0177fa4214169749811b7aa4b6b8295647aefc77e80",
        "urls": [
          "bzz-raw://65d7a6e5fa55575b183b1ea0410d4fb2aee17eb2e1214be6f56810394839d060",
          "dweb:/ipfs/QmUkEea5rcn2vE3m1fJGFRHUJiSaHCZXYxQc5RqA8yguHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x74154dc8037b4f8b934e0df8d92a1110d571a00bdfc6bc485c3e1c5bf4bc9d02",
        "urls": [
          "bzz-raw://9e3f5e3cd3a262da4442fc55f8499cc9de2b4d751152405ac82a5098db22b27e",
          "dweb:/ipfs/QmWuALHseY4LWHNfZRWeE25Fu3ZZukZWMR1s32ggoKArcB"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xa224d49e21e46e2548bff547bcabbb950849ca9705c9149651e273a1be907760",
        "urls": [
          "bzz-raw://7ede70c9959f574b80d6fbc24bb3edab598c200b5402d8c2a7fc7f68193d1d7d",
          "dweb:/ipfs/QmVeQctwAzm9ACcKdxFs7kbuuUWtEzABen2GbakoecuYaf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/IERC20PaymentClientBase_v1.sol": {
        "keccak256": "0x29f538a416c5a71a54eebef838b6c4dece020d3be178980d98b2334417ffc16b",
        "urls": [
          "bzz-raw://6a24f4196f863ee2fb2c5dbe299efcd5b7c5ffaf65048cf5a14bb06245fb1cc3",
          "dweb:/ipfs/QmREdsJYZaQkhtDTJ5mbKZbdiMjSSmDsdWFSu2YPhVcLZQ"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/ILM_PC_KPIRewarder_v1.sol": {
        "keccak256": "0x9b07a1299b7b23d3999ba8018bd168e00e8ccab6b6e3e4eac3c765e032007ec9",
        "urls": [
          "bzz-raw://aa273f005578640efa959333154950c6752a7abcfa0a4c8f6dd66b89c31d8596",
          "dweb:/ipfs/Qme92cFFxMEHPCP8Dyd27enLzqHh94S6zLPYZzkuzEgRYz"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/ILM_PC_Staking_v1.sol": {
        "keccak256": "0xb24312d95b24c20b57361167783147cacf8c5e954f760241be24e7c804603561",
        "urls": [
          "bzz-raw://fec43e22f78316aeed6a1f7e52b518c81ff0756509065685245aa44064d81199",
          "dweb:/ipfs/QmdASZFDFTB5Q5dnhR9CMsYFftDUuFhzR8sNqZqsttR4vP"
        ],
        "license": null
      },
      "src/modules/paymentProcessor/IPaymentProcessor_v1.sol": {
        "keccak256": "0xb0c2db0028d7de4c201b75449b6c959478f965a2d342c9880dad026ef9da8905",
        "urls": [
          "bzz-raw://194f9317a8e2ebe26f8422d19cf0a89869b1867a48c63f06481dea6aeb4c347d",
          "dweb:/ipfs/QmRYhWwaZaYXBBzN9yLpXGjbP6whYanJJhM9jDjJ4ZCftK"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/orchestrator/interfaces/IModuleManagerBase_v1.sol": {
        "keccak256": "0x2abd1abb278da305c6a47d11ef31ef7a7de2aebf017957b0013497de8e2aa2eb",
        "urls": [
          "bzz-raw://5d49aac1e351f80bce5c27fb0934577d64551c25fcbad6dd172b6eee7b8bf57a",
          "dweb:/ipfs/QmRdR4Ut7gV9Zp295ciYnwYqjdXKxZAAegVhtsGpetiwsC"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/orchestrator/interfaces/IOrchestrator_v1.sol": {
        "keccak256": "0xed08e392f5b321609173e95333e94f57bb83b42fda8a98c7af77e035d2d53c0f",
        "urls": [
          "bzz-raw://003498e95d4be3ea4f9eb13ec87c450eaf437f03a69d0d7c681e2f723240d2f9",
          "dweb:/ipfs/QmcTiDEK7UytSy8c2gHVpjMHoSqtf4CswmLP4LYeRn7aFb"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/proxies/interfaces/IInverterBeacon_v1.sol": {
        "keccak256": "0x23cd7a4ada497ebd9834d521843673881427d563906662156e748366a6a03fb5",
        "urls": [
          "bzz-raw://49cbce7e794b38126494ee0c4a26f9807fc284e0e5c59ad8a1a229e60f196e66",
          "dweb:/ipfs/Qma3hZfASQ6Gaa4anDhTmhNA1HPiYSD6eJ9Gnn817rP8VJ"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 134
}
