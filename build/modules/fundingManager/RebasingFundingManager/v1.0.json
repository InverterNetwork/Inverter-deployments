{
  "abi": [
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSupplyReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "funcSig",
          "type": "string"
        }
      ],
      "name": "Module_OrchestratorCallbackFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Module__CallerNotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__CannotCallInit2Again",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__FundingManager__CannotSelfDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__FundingManager__DepositCapReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__FundingManager__InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__InvalidMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__InvalidOrchestratorAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__NoDependencyOrMalformedDependencyData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__OnlyCallableByOrchestrator",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_for",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "parentOrchestrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "moduleTitle",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "majorVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minorVersion",
          "type": "uint256"
        }
      ],
      "name": "ModuleInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newScalar",
          "type": "uint256"
        }
      ],
      "name": "Rebase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferOrchestratorToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_for",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "grantModuleRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IOrchestrator",
          "name": "orchestrator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "majorVersion",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minorVersion",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            }
          ],
          "internalType": "struct IModule.Metadata",
          "name": "metadata",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "configData",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IOrchestrator",
          "name": "orchestrator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "configData",
          "type": "bytes"
        }
      ],
      "name": "init2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orchestrator",
      "outputs": [
        {
          "internalType": "contract IOrchestrator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "revokeModuleRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "scaledBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scaledTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAllFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferOrchestratorToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "url",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256)": "b6b55f25",
    "depositFor(address,uint256)": "2f4f21e2",
    "grantModuleRole(bytes32,address)": "6c67e807",
    "identifier()": "7998a1c4",
    "increaseAllowance(address,uint256)": "39509351",
    "init(address,(uint256,uint256,string,string),bytes)": "42dfe958",
    "init2(address,bytes)": "9bfdf766",
    "isTrustedForwarder(address)": "572b6c05",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "orchestrator()": "b74795d9",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "rebase()": "af14052c",
    "revokeModuleRole(bytes32,address)": "bcb61920",
    "scaledBalanceOf(address)": "1da24f3e",
    "scaledTotalSupply()": "b1bf962d",
    "symbol()": "95d89b41",
    "title()": "4a79d50c",
    "token()": "fc0c546a",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferAllFrom(address,address)": "84d4b410",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOrchestratorToken(address,uint256)": "759cc4b5",
    "url()": "5600f04f",
    "version()": "54fd4d50",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupplyReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"funcSig\",\"type\":\"string\"}],\"name\":\"Module_OrchestratorCallbackFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Module__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__CannotCallInit2Again\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__FundingManager__CannotSelfDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__FundingManager__DepositCapReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__FundingManager__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidOrchestratorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__NoDependencyOrMalformedDependencyData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OnlyCallableByOrchestrator\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parentOrchestrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"moduleTitle\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"}],\"name\":\"ModuleInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newScalar\",\"type\":\"uint256\"}],\"name\":\"Rebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferOrchestratorToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"grantModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOrchestrator\",\"name\":\"orchestrator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct IModule.Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOrchestrator\",\"name\":\"orchestrator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"init2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orchestrator\",\"outputs\":[{\"internalType\":\"contract IOrchestrator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"revokeModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAllFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferOrchestratorToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"url\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:moduletype\":\"fundingManager\",\"custom:version\":\"1.0\",\"errors\":{\"Module_OrchestratorCallbackFailed(string)\":[{\"params\":{\"funcSig\":\"The signature of the function called.\"}}],\"Module__FundingManager__InvalidAddress()\":[{\"details\":\"Invalid Address\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Deposit(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens deposited.\",\"_for\":\"The address that will receive the receipt tokens.\",\"_from\":\"The address depositing tokens.\"}},\"ModuleInitialized(address,string,uint256,uint256)\":{\"params\":{\"majorVersion\":\"The major version of the module.\",\"minorVersion\":\"The minor version of the module.\",\"moduleTitle\":\"The title of the module.\",\"parentOrchestrator\":\"The address of the orchestrator the module is linked to.\"}},\"Rebase(uint256,uint256)\":{\"params\":{\"epoch\":\"The number of rebases since inception.\",\"newScalar\":\"The new scalar.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"TransferOrchestratorToken(address,uint256)\":{\"params\":{\"_amount\":\"The amount of underlying tokens transfered.\",\"_to\":\"The address that will receive the underlying tokens.\"}},\"Withdrawal(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of underlying tokens withdrawn.\",\"_for\":\"The address that will receive the underlying tokens.\",\"_from\":\"The address supplying the receipt tokens.\"}}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"domainSeparator The EIP-712 domain separator hash.\"}},\"allowance(address,address)\":{\"custom:tags\":\"allowance:decimal\",\"details\":\"This amount changes when {approve} or {transferFrom} are called.\",\"params\":{\"owner\":\"The owner of the tokens\",\"spender\":\"The spender of the token allowance\"},\"returns\":{\"_0\":\"allowance The current allowance amout approved by the owner for the spender\"}},\"approve(address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that may be spent on behalf of the `spender`\",\"spender\":\"The spender of the token allowance\"},\"returns\":{\"_0\":\"success A boolean value indicating whether the operation succeeded.\"}},\"balanceOf(address)\":{\"custom:tags\":\"balance:decimal\",\"params\":{\"account\":\"The account whose balance is to be checked\"},\"returns\":{\"_0\":\"balance Returns the amount of tokens owned by the account.\"}},\"decimals()\":{\"returns\":{\"_0\":\"decimals The decimals of the token.\"}},\"decreaseAllowance(address,uint256)\":{\"custom:tags\":\"tokens:decimal\",\"params\":{\"spender\":\"The address of the spender.\",\"tokens\":\"The amount of tokens to decrease allowance by.\"},\"returns\":{\"_0\":\"success True if successful.\"}},\"deposit(uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being deposited.\"}},\"depositFor(address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being deposited.\",\"to\":\"The address that this deposit is credit towards.\"}},\"identifier()\":{\"details\":\"The identifier is defined as the keccak256 hash of the module's      abi packed encoded major version, url and title.\",\"returns\":{\"_0\":\"The module's identifier.\"}},\"increaseAllowance(address,uint256)\":{\"custom:tags\":\"tokens:decimal\",\"params\":{\"spender\":\"The address of the spender.\",\"tokens\":\"The amount of tokens to increase allowance by.\"},\"returns\":{\"_0\":\"success True if successful.\"}},\"init(address,(uint256,uint256,string,string),bytes)\":{\"details\":\"CAN be overriden by downstream contract.MUST call `__Module_init()`.\",\"params\":{\"configData\":\"Variable config data for specific module                   implementations.\",\"metadata\":\"The module's metadata.\",\"orchestrator\":\"The module's orchestrator instance.\"}},\"init2(address,bytes)\":{\"params\":{\"configData\":\"Variable config data for specific module                   implementations.\",\"orchestrator\":\"The module's orchestrator instance.\"}},\"isTrustedForwarder(address)\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator\",\"params\":{\"forwarder\":\"The contract address to be verified.\"},\"returns\":{\"_0\":\"bool Is the given address the trusted forwarder\"}},\"name()\":{\"returns\":{\"_0\":\"name The name of the token.\"}},\"nonces(address)\":{\"params\":{\"who\":\"The address to check the number of permits for.\"},\"returns\":{\"_0\":\"nonces The number of successful permits.\"}},\"orchestrator()\":{\"returns\":{\"_0\":\"The module's orchestrator.\"}},\"scaledBalanceOf(address)\":{\"custom:tags\":\"scaledBalance:decimals\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"scaledBalance The fixed balance of the specified address.\"}},\"scaledTotalSupply()\":{\"custom:tags\":\"scaledTotalSupply:decimals\",\"returns\":{\"_0\":\"scaledTotalSupply The total fixed supply.\"}},\"symbol()\":{\"returns\":{\"_0\":\"symbol The symbol of the token.\"}},\"title()\":{\"returns\":{\"_0\":\"The module's title.\"}},\"totalSupply()\":{\"custom:tags\":\"totalSupply:decimal\",\"returns\":{\"_0\":\"totalSupply The total amount of tokens.\"}},\"transfer(address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"to\":\"The target of the transfer\"},\"returns\":{\"_0\":\"success Returns a boolean value indicating whether the operation succeeded.\"}},\"transferAll(address)\":{\"params\":{\"to\":\"The address to transfer to.\"},\"returns\":{\"_0\":\"success True on success, false otherwise.\"}},\"transferAllFrom(address,address)\":{\"params\":{\"from\":\"The address to send tokens from.\",\"to\":\"The address to transfer to.\"}},\"transferFrom(address,address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"from\":\"The source of the transfer\",\"to\":\"The target of the transfer\"},\"returns\":{\"_0\":\"success Returns a boolean value indicating whether the operation succeeded.\"}},\"transferOrchestratorToken(address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being sent.\",\"to\":\"The destination address of the transfer.\"}},\"url()\":{\"returns\":{\"_0\":\"The module's URL.\"}},\"version()\":{\"returns\":{\"_0\":\"The module's major version.\",\"_1\":\"The module's minor version.\"}},\"withdraw(uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being withdrawn.\"}},\"withdrawTo(address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being withdrawn.\",\"to\":\"The address that the withdrawn tokens should be sent to.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount()\":[{\"notice\":\"Invalid token amount.\"}],\"InvalidRecipient()\":[{\"notice\":\"Invalid token recipient.\"}],\"MaxSupplyReached()\":[{\"notice\":\"Maximum supply reached.\"}],\"Module_OrchestratorCallbackFailed(string)\":[{\"notice\":\"Orchestrator callback triggered failed.\"}],\"Module__CallerNotAuthorized(bytes32,address)\":[{\"notice\":\"Function is only callable by authorized caller.\"}],\"Module__CannotCallInit2Again()\":[{\"notice\":\"init2 was called again for a module\"}],\"Module__FundingManager__CannotSelfDeposit()\":[{\"notice\":\"Function is only callable by authorized address.\"}],\"Module__FundingManager__DepositCapReached()\":[{\"notice\":\"There is a cap on deposits.\"}],\"Module__InvalidMetadata()\":[{\"notice\":\"Given metadata invalid.\"}],\"Module__InvalidOrchestratorAddress()\":[{\"notice\":\"Given orchestrator address invalid.\"}],\"Module__NoDependencyOrMalformedDependencyData()\":[{\"notice\":\"the dependency data passed to init2 was not in the correct format         or there was no dependency for the particular module\"}],\"Module__OnlyCallableByOrchestrator()\":[{\"notice\":\"Function is only callable by the orchestrator.\"}]},\"events\":{\"Deposit(address,address,uint256)\":{\"notice\":\"Event emitted when a deposit takes place.\"},\"ModuleInitialized(address,string,uint256,uint256)\":{\"notice\":\"Module has been initialized.\"},\"Rebase(uint256,uint256)\":{\"notice\":\"Event emitted when the balance scalar is updated.\"},\"TransferOrchestratorToken(address,uint256)\":{\"notice\":\"Event emitted when a transferal of orchestrator tokens takes place.\"},\"Withdrawal(address,address,uint256)\":{\"notice\":\"Event emitted when a withdrawal takes place.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the EIP-712 domain separator hash.\"},\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.\"},\"approve(address,uint256)\":{\"notice\":\"Sets a `amount` amount of tokens as the allowance of `spender` over the caller's tokens.\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"notice\":\"Returns the decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"Decreases the amount of tokens that msg.sender has allowed         to spender.\"},\"deposit(uint256)\":{\"notice\":\"Deposits an amount of the token.\"},\"depositFor(address,uint256)\":{\"notice\":\"Deposits an amount of the token for an adddress.\"},\"identifier()\":{\"notice\":\"Returns the module's identifier.\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Increases the amount of tokens that msg.sender has allowed         to spender.\"},\"init(address,(uint256,uint256,string,string),bytes)\":{\"notice\":\"The module's initializer function.\"},\"init2(address,bytes)\":{\"notice\":\"Second initialization function of the module to take care of dependencies.\"},\"isTrustedForwarder(address)\":{\"notice\":\"Checks if the provided address is the trusted forwarder\"},\"name()\":{\"notice\":\"Returns the name of the token.\"},\"nonces(address)\":{\"notice\":\"Returns the number of successful permits for an address.\"},\"orchestrator()\":{\"notice\":\"Returns the module's {IOrchestrator} orchestrator instance.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Sets the amount of tokens that owner has allowed to spender.\"},\"rebase()\":{\"notice\":\"Triggers the next rebase, if applicable.\"},\"scaledBalanceOf(address)\":{\"notice\":\"Returns the fixed balance of the specified address.\"},\"scaledTotalSupply()\":{\"notice\":\"Returns the total fixed supply.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token.\"},\"title()\":{\"notice\":\"Returns the module's title.\"},\"token()\":{\"notice\":\"Returns the IERC20 token of the funding manager.\"},\"totalSupply()\":{\"notice\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers a `amount` amount of tokens from the caller's account to `to`.\"},\"transferAll(address)\":{\"notice\":\"Transfer all of the sender's balance to a specified address.\"},\"transferAllFrom(address,address)\":{\"notice\":\"Transfer all balance tokens from one address to another.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves a `amount` amount of tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\"},\"transferOrchestratorToken(address,uint256)\":{\"notice\":\"Transfers the orchestrator token to a specific address.\"},\"url()\":{\"notice\":\"Returns the module's URL.\"},\"version()\":{\"notice\":\"Returns the module's version.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws an amount of the token.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraws an amount of the token to an address.\"}},\"notice\":\"A rebasing funding manager module\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/fundingManager/IRebasingFundingManager.sol\":\"IRebasingFundingManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/external/interfaces/IERC2771Context.sol\":{\"keccak256\":\"0xfcc88fc7329ac304efe8c41871d596f0c3fe8f70917214b3a087266bf19ee86b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://47159333bca960cfdf0bd4e9d5e114174cb047477b08ad4e40dce6f956c8980a\",\"dweb:/ipfs/QmbjnnNmXauGRjP1UcMxAYxzb5YXpveL7hQGtr1PHMH4jv\"]},\"src/modules/authorizer/IAuthorizer.sol\":{\"keccak256\":\"0xab7e0013303abca8db26bbceb87ec8a62c2247228d58eb77d7cc295b71f70cac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://32d3f7dfdbbd28aa8b858303fdc494b9779608215f89ce2f087c220063c21fd8\",\"dweb:/ipfs/QmV7mjWLPvB9Qwxz64MuDRz2d9VSNwXy3AbatPTpCgaGY8\"]},\"src/modules/base/IModule.sol\":{\"keccak256\":\"0xdea54b9959e18faaa8eec1ec4ee2b5473b17c48f6e26d8feab30ea8033cf166f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://afae8818684323362b4ea4bc1322040bcc29eef01aae5ebab125906485fd9c11\",\"dweb:/ipfs/QmZy8QyGAMQmpNmpthkkVp86F8qyEaYC9YsYiqfTp9GjKa\"]},\"src/modules/fundingManager/IFundingManager.sol\":{\"keccak256\":\"0xbcc2c04ede46129d669cd55cf41a7fbe62f0497d7db26014c154c3285c69e7b9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://eb921cdafef55ae807d45d84d53cb566cfc3a8558887f5852e8049fb4efe1551\",\"dweb:/ipfs/QmajLWRcETLesEHWtHEvTAsDA4vTw1gLXoRtA39jC6bh8C\"]},\"src/modules/fundingManager/IRebasingFundingManager.sol\":{\"keccak256\":\"0x13852f5662facf0a541b24f757e9a489631eedaaf87aeefb5ac97cf8a68e8e89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6507945230dc72906188a9f82739b1eee7c1d64f7754a42f5d0768a4e71c0d8c\",\"dweb:/ipfs/QmVoKWFbHfCPHPumHD9qMmt6FkkThHRf8ii1pSFLKHEfck\"]},\"src/modules/fundingManager/token/IERC20.sol\":{\"keccak256\":\"0xac6f8236e99a255d817c932bded9113c2a0be146f8003b2c096dc31026a0948f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39aa5f54f5c681887da09a49692f843bd3b1d679c8d09c639bd349528fc60e44\",\"dweb:/ipfs/QmbUrb8LWL79PbNG4t5EcMSy69wQG52rdgV37nD3ZJBbAk\"]},\"src/modules/fundingManager/token/IERC20Metadata.sol\":{\"keccak256\":\"0x16c7572a1a429e1289e4af21c64f6bee71e80412ea5376f826d63e851fc62ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a38e437e778487198d3417c0d2b2cb593b2d86ac10dcb35545ded4a7a02b10c\",\"dweb:/ipfs/QmXd672jiYEdUzoTSB42fXv5mn1PCDLQMVyY8judw76qWy\"]},\"src/modules/fundingManager/token/IElasticReceiptTokenBase.sol\":{\"keccak256\":\"0x7032dec3428df06b109e3336b9d21ee4e027ee8f971773f3824dcf20f7ed218f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://03f295cf07b5ade6eb894c1f30fc442603e5d0a4bcb907f163d22edd40b75276\",\"dweb:/ipfs/QmbFbQPpkw7SetZTCcd1vfj7ofgRG2H6aErh8yNjr5zuak\"]},\"src/modules/fundingManager/token/IRebasingERC20.sol\":{\"keccak256\":\"0x4c542bd32e40a5c76bb358b54114cc5f43667fd3ea422d148ec60a162253ccf1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d7509fc5f0780ae938ba1dd68122de194b77f51471a8ca422c6e91b5d6b4d7f9\",\"dweb:/ipfs/Qmac7B4qDX97fnMp1tyVV6QipcoydXSPQwn28CcRuP7kSu\"]},\"src/modules/logicModule/paymentClient/IERC20PaymentClient.sol\":{\"keccak256\":\"0x8eb2a5e323299b5ea6c0dee1805031b2e1af48fcfe48653802ac4658b49eed28\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://aa47981b5dfc0e18f4ff7b2e5a4e25a39d2d20702fc0c7ae114b07f7402c143e\",\"dweb:/ipfs/QmbtyYqQttpYKj744fZkHvy8u2Fff9t2jDrpTR3GchPcKp\"]},\"src/modules/paymentProcessor/IPaymentProcessor.sol\":{\"keccak256\":\"0x03db27327e16d429f3e906b604de641e126313e07704fddbd2bc39035b0b23a1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b620ed08ea5973c00e897f5e2d8cb9dfe2851f80cf37d7e4e0a7963091f6cdba\",\"dweb:/ipfs/Qmcw1c1qrd7KpHWRSiSLyiDkKx4x8cRZfvtcYU962DHLFH\"]},\"src/orchestrator/IOrchestrator.sol\":{\"keccak256\":\"0x20337a100298bd93d9f8c9d5f18474bb48247626938b70564e407d31c58e6f15\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cd45ab31994e5353545118d05e4379a56aa25cceda649d614e9553a59223e0f3\",\"dweb:/ipfs/QmbTZ743e8KZJhfVa2p4AUFDuT7S3CMxQVt4KfKZEKfFTX\"]},\"src/orchestrator/base/IModuleManager.sol\":{\"keccak256\":\"0x6b2ccb9edbf8610e57e52ed5ff0f629df098c1a44ba1374b4b5db7fa7aa33c97\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://442e8f808cac95cf9a49cf0de0da39ae2b9317a1b7a3b0b02e6e8473c6b695d2\",\"dweb:/ipfs/QmQuvG7MHj5Vkv6kBNvMUdf4erkRDzVp4q21F5A3DtoSdz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSupplyReached"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "funcSig",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Module_OrchestratorCallbackFailed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module__CallerNotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__CannotCallInit2Again"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__FundingManager__CannotSelfDeposit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__FundingManager__DepositCapReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__FundingManager__InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__InvalidMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__InvalidOrchestratorAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__NoDependencyOrMalformedDependencyData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OnlyCallableByOrchestrator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_for",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "parentOrchestrator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "moduleTitle",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "majorVersion",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minorVersion",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newScalar",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Rebase",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransferOrchestratorToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_for",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantModuleRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IOrchestrator",
              "name": "orchestrator",
              "type": "address"
            },
            {
              "internalType": "struct IModule.Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "majorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "url",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "configData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "contract IOrchestrator",
              "name": "orchestrator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "configData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init2"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "orchestrator",
          "outputs": [
            {
              "internalType": "contract IOrchestrator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rebase"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeModuleRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "scaledBalanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scaledTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "title",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAllFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOrchestratorToken"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "url",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "returns": {
              "_0": "domainSeparator The EIP-712 domain separator hash."
            }
          },
          "allowance(address,address)": {
            "custom:tags": "allowance:decimal",
            "details": "This amount changes when {approve} or {transferFrom} are called.",
            "params": {
              "owner": "The owner of the tokens",
              "spender": "The spender of the token allowance"
            },
            "returns": {
              "_0": "allowance The current allowance amout approved by the owner for the spender"
            }
          },
          "approve(address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that may be spent on behalf of the `spender`",
              "spender": "The spender of the token allowance"
            },
            "returns": {
              "_0": "success A boolean value indicating whether the operation succeeded."
            }
          },
          "balanceOf(address)": {
            "custom:tags": "balance:decimal",
            "params": {
              "account": "The account whose balance is to be checked"
            },
            "returns": {
              "_0": "balance Returns the amount of tokens owned by the account."
            }
          },
          "decimals()": {
            "returns": {
              "_0": "decimals The decimals of the token."
            }
          },
          "decreaseAllowance(address,uint256)": {
            "custom:tags": "tokens:decimal",
            "params": {
              "spender": "The address of the spender.",
              "tokens": "The amount of tokens to decrease allowance by."
            },
            "returns": {
              "_0": "success True if successful."
            }
          },
          "deposit(uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being deposited."
            }
          },
          "depositFor(address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being deposited.",
              "to": "The address that this deposit is credit towards."
            }
          },
          "identifier()": {
            "details": "The identifier is defined as the keccak256 hash of the module's      abi packed encoded major version, url and title.",
            "returns": {
              "_0": "The module's identifier."
            }
          },
          "increaseAllowance(address,uint256)": {
            "custom:tags": "tokens:decimal",
            "params": {
              "spender": "The address of the spender.",
              "tokens": "The amount of tokens to increase allowance by."
            },
            "returns": {
              "_0": "success True if successful."
            }
          },
          "init(address,(uint256,uint256,string,string),bytes)": {
            "details": "CAN be overriden by downstream contract.MUST call `__Module_init()`.",
            "params": {
              "configData": "Variable config data for specific module                   implementations.",
              "metadata": "The module's metadata.",
              "orchestrator": "The module's orchestrator instance."
            }
          },
          "init2(address,bytes)": {
            "params": {
              "configData": "Variable config data for specific module                   implementations.",
              "orchestrator": "The module's orchestrator instance."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "We imitate here the EIP2771 Standard to enable metatransactions As it currently stands we dont want to feed the forwarder address to each module individually and we decided to move this to the orchestrator",
            "params": {
              "forwarder": "The contract address to be verified."
            },
            "returns": {
              "_0": "bool Is the given address the trusted forwarder"
            }
          },
          "name()": {
            "returns": {
              "_0": "name The name of the token."
            }
          },
          "nonces(address)": {
            "params": {
              "who": "The address to check the number of permits for."
            },
            "returns": {
              "_0": "nonces The number of successful permits."
            }
          },
          "orchestrator()": {
            "returns": {
              "_0": "The module's orchestrator."
            }
          },
          "scaledBalanceOf(address)": {
            "custom:tags": "scaledBalance:decimals",
            "params": {
              "who": "The address to query."
            },
            "returns": {
              "_0": "scaledBalance The fixed balance of the specified address."
            }
          },
          "scaledTotalSupply()": {
            "custom:tags": "scaledTotalSupply:decimals",
            "returns": {
              "_0": "scaledTotalSupply The total fixed supply."
            }
          },
          "symbol()": {
            "returns": {
              "_0": "symbol The symbol of the token."
            }
          },
          "title()": {
            "returns": {
              "_0": "The module's title."
            }
          },
          "totalSupply()": {
            "custom:tags": "totalSupply:decimal",
            "returns": {
              "_0": "totalSupply The total amount of tokens."
            }
          },
          "transfer(address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount of tokens to be transferred",
              "to": "The target of the transfer"
            },
            "returns": {
              "_0": "success Returns a boolean value indicating whether the operation succeeded."
            }
          },
          "transferAll(address)": {
            "params": {
              "to": "The address to transfer to."
            },
            "returns": {
              "_0": "success True on success, false otherwise."
            }
          },
          "transferAllFrom(address,address)": {
            "params": {
              "from": "The address to send tokens from.",
              "to": "The address to transfer to."
            }
          },
          "transferFrom(address,address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount of tokens to be transferred",
              "from": "The source of the transfer",
              "to": "The target of the transfer"
            },
            "returns": {
              "_0": "success Returns a boolean value indicating whether the operation succeeded."
            }
          },
          "transferOrchestratorToken(address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being sent.",
              "to": "The destination address of the transfer."
            }
          },
          "url()": {
            "returns": {
              "_0": "The module's URL."
            }
          },
          "version()": {
            "returns": {
              "_0": "The module's major version.",
              "_1": "The module's minor version."
            }
          },
          "withdraw(uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being withdrawn."
            }
          },
          "withdrawTo(address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being withdrawn.",
              "to": "The address that the withdrawn tokens should be sent to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "notice": "Returns the EIP-712 domain separator hash."
          },
          "allowance(address,address)": {
            "notice": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default."
          },
          "approve(address,uint256)": {
            "notice": "Sets a `amount` amount of tokens as the allowance of `spender` over the caller's tokens."
          },
          "balanceOf(address)": {
            "notice": "Returns the amount of tokens owned by `account`."
          },
          "decimals()": {
            "notice": "Returns the decimals of the token."
          },
          "decreaseAllowance(address,uint256)": {
            "notice": "Decreases the amount of tokens that msg.sender has allowed         to spender."
          },
          "deposit(uint256)": {
            "notice": "Deposits an amount of the token."
          },
          "depositFor(address,uint256)": {
            "notice": "Deposits an amount of the token for an adddress."
          },
          "identifier()": {
            "notice": "Returns the module's identifier."
          },
          "increaseAllowance(address,uint256)": {
            "notice": "Increases the amount of tokens that msg.sender has allowed         to spender."
          },
          "init(address,(uint256,uint256,string,string),bytes)": {
            "notice": "The module's initializer function."
          },
          "init2(address,bytes)": {
            "notice": "Second initialization function of the module to take care of dependencies."
          },
          "isTrustedForwarder(address)": {
            "notice": "Checks if the provided address is the trusted forwarder"
          },
          "name()": {
            "notice": "Returns the name of the token."
          },
          "nonces(address)": {
            "notice": "Returns the number of successful permits for an address."
          },
          "orchestrator()": {
            "notice": "Returns the module's {IOrchestrator} orchestrator instance."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Sets the amount of tokens that owner has allowed to spender."
          },
          "rebase()": {
            "notice": "Triggers the next rebase, if applicable."
          },
          "scaledBalanceOf(address)": {
            "notice": "Returns the fixed balance of the specified address."
          },
          "scaledTotalSupply()": {
            "notice": "Returns the total fixed supply."
          },
          "symbol()": {
            "notice": "Returns the symbol of the token."
          },
          "title()": {
            "notice": "Returns the module's title."
          },
          "token()": {
            "notice": "Returns the IERC20 token of the funding manager."
          },
          "totalSupply()": {
            "notice": "Returns the amount of tokens in existence."
          },
          "transfer(address,uint256)": {
            "notice": "Transfers a `amount` amount of tokens from the caller's account to `to`."
          },
          "transferAll(address)": {
            "notice": "Transfer all of the sender's balance to a specified address."
          },
          "transferAllFrom(address,address)": {
            "notice": "Transfer all balance tokens from one address to another."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Moves a `amount` amount of tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance."
          },
          "transferOrchestratorToken(address,uint256)": {
            "notice": "Transfers the orchestrator token to a specific address."
          },
          "url()": {
            "notice": "Returns the module's URL."
          },
          "version()": {
            "notice": "Returns the module's version."
          },
          "withdraw(uint256)": {
            "notice": "Withdraws an amount of the token."
          },
          "withdrawTo(address,uint256)": {
            "notice": "Withdraws an amount of the token to an address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 5000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/fundingManager/IRebasingFundingManager.sol": "IRebasingFundingManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol": {
        "keccak256": "0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306",
        "urls": [
          "bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3",
          "dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "src/external/interfaces/IERC2771Context.sol": {
        "keccak256": "0xfcc88fc7329ac304efe8c41871d596f0c3fe8f70917214b3a087266bf19ee86b",
        "urls": [
          "bzz-raw://47159333bca960cfdf0bd4e9d5e114174cb047477b08ad4e40dce6f956c8980a",
          "dweb:/ipfs/QmbjnnNmXauGRjP1UcMxAYxzb5YXpveL7hQGtr1PHMH4jv"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/authorizer/IAuthorizer.sol": {
        "keccak256": "0xab7e0013303abca8db26bbceb87ec8a62c2247228d58eb77d7cc295b71f70cac",
        "urls": [
          "bzz-raw://32d3f7dfdbbd28aa8b858303fdc494b9779608215f89ce2f087c220063c21fd8",
          "dweb:/ipfs/QmV7mjWLPvB9Qwxz64MuDRz2d9VSNwXy3AbatPTpCgaGY8"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/base/IModule.sol": {
        "keccak256": "0xdea54b9959e18faaa8eec1ec4ee2b5473b17c48f6e26d8feab30ea8033cf166f",
        "urls": [
          "bzz-raw://afae8818684323362b4ea4bc1322040bcc29eef01aae5ebab125906485fd9c11",
          "dweb:/ipfs/QmZy8QyGAMQmpNmpthkkVp86F8qyEaYC9YsYiqfTp9GjKa"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/fundingManager/IFundingManager.sol": {
        "keccak256": "0xbcc2c04ede46129d669cd55cf41a7fbe62f0497d7db26014c154c3285c69e7b9",
        "urls": [
          "bzz-raw://eb921cdafef55ae807d45d84d53cb566cfc3a8558887f5852e8049fb4efe1551",
          "dweb:/ipfs/QmajLWRcETLesEHWtHEvTAsDA4vTw1gLXoRtA39jC6bh8C"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/fundingManager/IRebasingFundingManager.sol": {
        "keccak256": "0x13852f5662facf0a541b24f757e9a489631eedaaf87aeefb5ac97cf8a68e8e89",
        "urls": [
          "bzz-raw://6507945230dc72906188a9f82739b1eee7c1d64f7754a42f5d0768a4e71c0d8c",
          "dweb:/ipfs/QmVoKWFbHfCPHPumHD9qMmt6FkkThHRf8ii1pSFLKHEfck"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/fundingManager/token/IERC20.sol": {
        "keccak256": "0xac6f8236e99a255d817c932bded9113c2a0be146f8003b2c096dc31026a0948f",
        "urls": [
          "bzz-raw://39aa5f54f5c681887da09a49692f843bd3b1d679c8d09c639bd349528fc60e44",
          "dweb:/ipfs/QmbUrb8LWL79PbNG4t5EcMSy69wQG52rdgV37nD3ZJBbAk"
        ],
        "license": "MIT"
      },
      "src/modules/fundingManager/token/IERC20Metadata.sol": {
        "keccak256": "0x16c7572a1a429e1289e4af21c64f6bee71e80412ea5376f826d63e851fc62ad0",
        "urls": [
          "bzz-raw://5a38e437e778487198d3417c0d2b2cb593b2d86ac10dcb35545ded4a7a02b10c",
          "dweb:/ipfs/QmXd672jiYEdUzoTSB42fXv5mn1PCDLQMVyY8judw76qWy"
        ],
        "license": "MIT"
      },
      "src/modules/fundingManager/token/IElasticReceiptTokenBase.sol": {
        "keccak256": "0x7032dec3428df06b109e3336b9d21ee4e027ee8f971773f3824dcf20f7ed218f",
        "urls": [
          "bzz-raw://03f295cf07b5ade6eb894c1f30fc442603e5d0a4bcb907f163d22edd40b75276",
          "dweb:/ipfs/QmbFbQPpkw7SetZTCcd1vfj7ofgRG2H6aErh8yNjr5zuak"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/modules/fundingManager/token/IRebasingERC20.sol": {
        "keccak256": "0x4c542bd32e40a5c76bb358b54114cc5f43667fd3ea422d148ec60a162253ccf1",
        "urls": [
          "bzz-raw://d7509fc5f0780ae938ba1dd68122de194b77f51471a8ca422c6e91b5d6b4d7f9",
          "dweb:/ipfs/Qmac7B4qDX97fnMp1tyVV6QipcoydXSPQwn28CcRuP7kSu"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/modules/logicModule/paymentClient/IERC20PaymentClient.sol": {
        "keccak256": "0x8eb2a5e323299b5ea6c0dee1805031b2e1af48fcfe48653802ac4658b49eed28",
        "urls": [
          "bzz-raw://aa47981b5dfc0e18f4ff7b2e5a4e25a39d2d20702fc0c7ae114b07f7402c143e",
          "dweb:/ipfs/QmbtyYqQttpYKj744fZkHvy8u2Fff9t2jDrpTR3GchPcKp"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/paymentProcessor/IPaymentProcessor.sol": {
        "keccak256": "0x03db27327e16d429f3e906b604de641e126313e07704fddbd2bc39035b0b23a1",
        "urls": [
          "bzz-raw://b620ed08ea5973c00e897f5e2d8cb9dfe2851f80cf37d7e4e0a7963091f6cdba",
          "dweb:/ipfs/Qmcw1c1qrd7KpHWRSiSLyiDkKx4x8cRZfvtcYU962DHLFH"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/orchestrator/IOrchestrator.sol": {
        "keccak256": "0x20337a100298bd93d9f8c9d5f18474bb48247626938b70564e407d31c58e6f15",
        "urls": [
          "bzz-raw://cd45ab31994e5353545118d05e4379a56aa25cceda649d614e9553a59223e0f3",
          "dweb:/ipfs/QmbTZ743e8KZJhfVa2p4AUFDuT7S3CMxQVt4KfKZEKfFTX"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/orchestrator/base/IModuleManager.sol": {
        "keccak256": "0x6b2ccb9edbf8610e57e52ed5ff0f629df098c1a44ba1374b4b5db7fa7aa33c97",
        "urls": [
          "bzz-raw://442e8f808cac95cf9a49cf0de0da39ae2b9317a1b7a3b0b02e6e8473c6b695d2",
          "dweb:/ipfs/QmQuvG7MHj5Vkv6kBNvMUdf4erkRDzVp4q21F5A3DtoSdz"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/fundingManager/IRebasingFundingManager.sol",
    "id": 44449,
    "exportedSymbols": {
      "IElasticReceiptTokenBase": [
        51109
      ],
      "IFundingManager": [
        44404
      ],
      "IModule": [
        43781
      ],
      "IRebasingFundingManager": [
        44448
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1459:100",
    "nodes": [
      {
        "id": 44406,
        "nodeType": "PragmaDirective",
        "src": "42:23:100",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 44408,
        "nodeType": "ImportDirective",
        "src": "90:53:100",
        "nodes": [],
        "absolutePath": "src/modules/base/IModule.sol",
        "file": "src/modules/base/IModule.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44449,
        "sourceUnit": 43782,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44407,
              "name": "IModule",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43781,
              "src": "98:7:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44410,
        "nodeType": "ImportDirective",
        "src": "144:79:100",
        "nodes": [],
        "absolutePath": "src/modules/fundingManager/IFundingManager.sol",
        "file": "src/modules/fundingManager/IFundingManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44449,
        "sourceUnit": 44405,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44409,
              "name": "IFundingManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44404,
              "src": "152:15:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44412,
        "nodeType": "ImportDirective",
        "src": "224:107:100",
        "nodes": [],
        "absolutePath": "src/modules/fundingManager/token/IElasticReceiptTokenBase.sol",
        "file": "src/modules/fundingManager/token/IElasticReceiptTokenBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44449,
        "sourceUnit": 51110,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44411,
              "name": "IElasticReceiptTokenBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51109,
              "src": "232:24:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44448,
        "nodeType": "ContractDefinition",
        "src": "441:1059:100",
        "nodes": [
          {
            "id": 44425,
            "nodeType": "FunctionDefinition",
            "src": "690:39:100",
            "nodes": [],
            "documentation": {
              "id": 44420,
              "nodeType": "StructuredDocumentation",
              "src": "547:138:100",
              "text": "@notice Deposits an amount of the token.\n @param amount The amount that is being deposited.\n @custom:tags amount:decimal"
            },
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "699:7:100",
            "parameters": {
              "id": 44423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44422,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "712:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44425,
                  "src": "707:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44421,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "706:13:100"
            },
            "returnParameters": {
              "id": 44424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:0:100"
            },
            "scope": 44448,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44433,
            "nodeType": "FunctionDefinition",
            "src": "961:54:100",
            "nodes": [],
            "documentation": {
              "id": 44426,
              "nodeType": "StructuredDocumentation",
              "src": "735:221:100",
              "text": "@notice Deposits an amount of the token for an adddress.\n @param amount The amount that is being deposited.\n @param to The address that this deposit is credit towards.\n @custom:tags amount:decimal"
            },
            "functionSelector": "2f4f21e2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositFor",
            "nameLocation": "970:10:100",
            "parameters": {
              "id": 44431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44428,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "989:2:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44433,
                  "src": "981:10:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44430,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "998:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44433,
                  "src": "993:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44429,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "980:25:100"
            },
            "returnParameters": {
              "id": 44432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:100"
            },
            "scope": 44448,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44439,
            "nodeType": "FunctionDefinition",
            "src": "1165:40:100",
            "nodes": [],
            "documentation": {
              "id": 44434,
              "nodeType": "StructuredDocumentation",
              "src": "1021:139:100",
              "text": "@notice Withdraws an amount of the token.\n @param amount The amount that is being withdrawn.\n @custom:tags amount:decimal"
            },
            "functionSelector": "2e1a7d4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1174:8:100",
            "parameters": {
              "id": 44437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44436,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1188:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44439,
                  "src": "1183:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44435,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:13:100"
            },
            "returnParameters": {
              "id": 44438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1204:0:100"
            },
            "scope": 44448,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44447,
            "nodeType": "FunctionDefinition",
            "src": "1444:54:100",
            "nodes": [],
            "documentation": {
              "id": 44440,
              "nodeType": "StructuredDocumentation",
              "src": "1211:228:100",
              "text": "@notice Withdraws an amount of the token to an address.\n @param amount The amount that is being withdrawn.\n @param to The address that the withdrawn tokens should be sent to.\n @custom:tags amount:decimal"
            },
            "functionSelector": "205c2878",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTo",
            "nameLocation": "1453:10:100",
            "parameters": {
              "id": 44445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44442,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1472:2:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44447,
                  "src": "1464:10:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44444,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1481:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44447,
                  "src": "1476:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44443,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1463:25:100"
            },
            "returnParameters": {
              "id": 44446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:0:100"
            },
            "scope": 44448,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44414,
              "name": "IFundingManager",
              "nameLocations": [
                "482:15:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44404,
              "src": "482:15:100"
            },
            "id": 44415,
            "nodeType": "InheritanceSpecifier",
            "src": "482:15:100"
          },
          {
            "baseName": {
              "id": 44416,
              "name": "IElasticReceiptTokenBase",
              "nameLocations": [
                "503:24:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51109,
              "src": "503:24:100"
            },
            "id": 44417,
            "nodeType": "InheritanceSpecifier",
            "src": "503:24:100"
          },
          {
            "baseName": {
              "id": 44418,
              "name": "IModule",
              "nameLocations": [
                "533:7:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43781,
              "src": "533:7:100"
            },
            "id": 44419,
            "nodeType": "InheritanceSpecifier",
            "src": "533:7:100"
          }
        ],
        "canonicalName": "IRebasingFundingManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 44413,
          "nodeType": "StructuredDocumentation",
          "src": "333:108:100",
          "text": "@notice A rebasing funding manager module\n @custom:version 1.0\n @custom:moduletype fundingManager"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44448,
          43781,
          51109,
          51159,
          51033,
          51008,
          44404
        ],
        "name": "IRebasingFundingManager",
        "nameLocation": "451:23:100",
        "scope": 44449,
        "usedErrors": [
          43684,
          43687,
          43690,
          43693,
          43698,
          43701,
          43704,
          44357,
          44360,
          44363,
          51046,
          51049,
          51052
        ],
        "usedEvents": [
          43677,
          44372,
          44381,
          44388,
          50998,
          51007,
          51158
        ]
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 100
}