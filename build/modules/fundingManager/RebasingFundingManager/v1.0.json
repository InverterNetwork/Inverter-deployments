{
  "abi": [
    {
      "inputs": [],
      "name": "Module__FundingManager__CannotSelfDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__FundingManager__DepositCapReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__FundingManager__InvalidAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_for",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferOrchestratorToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_for",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferOrchestratorToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deposit(uint256)": "b6b55f25",
    "depositFor(address,uint256)": "2f4f21e2",
    "token()": "fc0c546a",
    "transferOrchestratorToken(address,uint256)": "759cc4b5",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Module__FundingManager__CannotSelfDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__FundingManager__DepositCapReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__FundingManager__InvalidAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferOrchestratorToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferOrchestratorToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:moduletype\":\"fundingManager\",\"custom:version\":\"1.0\",\"errors\":{\"Module__FundingManager__InvalidAddress()\":[{\"details\":\"Invalid Address\"}]},\"events\":{\"Deposit(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens deposited.\",\"_for\":\"The address that will receive the receipt tokens.\",\"_from\":\"The address depositing tokens.\"}},\"TransferOrchestratorToken(address,uint256)\":{\"params\":{\"_amount\":\"The amount of underlying tokens transfered.\",\"_to\":\"The address that will receive the underlying tokens.\"}},\"Withdrawal(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of underlying tokens withdrawn.\",\"_for\":\"The address that will receive the underlying tokens.\",\"_from\":\"The address supplying the receipt tokens.\"}}},\"kind\":\"dev\",\"methods\":{\"deposit(uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being deposited.\"}},\"depositFor(address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being deposited.\",\"to\":\"The address that this deposit is credit towards.\"}},\"transferOrchestratorToken(address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being sent.\",\"to\":\"The destination address of the transfer.\"}},\"withdraw(uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being withdrawn.\"}},\"withdrawTo(address,uint256)\":{\"custom:tags\":\"amount:decimal\",\"params\":{\"amount\":\"The amount that is being withdrawn.\",\"to\":\"The address that the withdrawn tokens should be sent to.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"Module__FundingManager__CannotSelfDeposit()\":[{\"notice\":\"Function is only callable by authorized address.\"}],\"Module__FundingManager__DepositCapReached()\":[{\"notice\":\"There is a cap on deposits.\"}]},\"events\":{\"Deposit(address,address,uint256)\":{\"notice\":\"Event emitted when a deposit takes place.\"},\"TransferOrchestratorToken(address,uint256)\":{\"notice\":\"Event emitted when a transferal of orchestrator tokens takes place.\"},\"Withdrawal(address,address,uint256)\":{\"notice\":\"Event emitted when a withdrawal takes place.\"}},\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Deposits an amount of the token.\"},\"depositFor(address,uint256)\":{\"notice\":\"Deposits an amount of the token for an adddress.\"},\"token()\":{\"notice\":\"Returns the IERC20 token of the funding manager.\"},\"transferOrchestratorToken(address,uint256)\":{\"notice\":\"Transfers the orchestrator token to a specific address.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws an amount of the token.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraws an amount of the token to an address.\"}},\"notice\":\"A rebasing funding manager module\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/fundingManager/IRebasingFundingManager.sol\":\"IRebasingFundingManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/modules/fundingManager/IFundingManager.sol\":{\"keccak256\":\"0xbcc2c04ede46129d669cd55cf41a7fbe62f0497d7db26014c154c3285c69e7b9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://eb921cdafef55ae807d45d84d53cb566cfc3a8558887f5852e8049fb4efe1551\",\"dweb:/ipfs/QmajLWRcETLesEHWtHEvTAsDA4vTw1gLXoRtA39jC6bh8C\"]},\"src/modules/fundingManager/IRebasingFundingManager.sol\":{\"keccak256\":\"0xa9017f638642e24bce1d9184957aa94a97241bc7eb6bbc05edbd7302bdec64c0\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5a51a3aaddabe3f244fc0c74a1db7911d2b563cc00d9bb032b9af231d4eace17\",\"dweb:/ipfs/QmXAgu9U5Cs7dCpH8fEUxp2nkazezifRHxYSfF2VpCz76S\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "Module__FundingManager__CannotSelfDeposit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__FundingManager__DepositCapReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__FundingManager__InvalidAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_for",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransferOrchestratorToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_for",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOrchestratorToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being deposited."
            }
          },
          "depositFor(address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being deposited.",
              "to": "The address that this deposit is credit towards."
            }
          },
          "transferOrchestratorToken(address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being sent.",
              "to": "The destination address of the transfer."
            }
          },
          "withdraw(uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being withdrawn."
            }
          },
          "withdrawTo(address,uint256)": {
            "custom:tags": "amount:decimal",
            "params": {
              "amount": "The amount that is being withdrawn.",
              "to": "The address that the withdrawn tokens should be sent to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(uint256)": {
            "notice": "Deposits an amount of the token."
          },
          "depositFor(address,uint256)": {
            "notice": "Deposits an amount of the token for an adddress."
          },
          "token()": {
            "notice": "Returns the IERC20 token of the funding manager."
          },
          "transferOrchestratorToken(address,uint256)": {
            "notice": "Transfers the orchestrator token to a specific address."
          },
          "withdraw(uint256)": {
            "notice": "Withdraws an amount of the token."
          },
          "withdrawTo(address,uint256)": {
            "notice": "Withdraws an amount of the token to an address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 5000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/fundingManager/IRebasingFundingManager.sol": "IRebasingFundingManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "src/modules/fundingManager/IFundingManager.sol": {
        "keccak256": "0xbcc2c04ede46129d669cd55cf41a7fbe62f0497d7db26014c154c3285c69e7b9",
        "urls": [
          "bzz-raw://eb921cdafef55ae807d45d84d53cb566cfc3a8558887f5852e8049fb4efe1551",
          "dweb:/ipfs/QmajLWRcETLesEHWtHEvTAsDA4vTw1gLXoRtA39jC6bh8C"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/fundingManager/IRebasingFundingManager.sol": {
        "keccak256": "0xa9017f638642e24bce1d9184957aa94a97241bc7eb6bbc05edbd7302bdec64c0",
        "urls": [
          "bzz-raw://5a51a3aaddabe3f244fc0c74a1db7911d2b563cc00d9bb032b9af231d4eace17",
          "dweb:/ipfs/QmXAgu9U5Cs7dCpH8fEUxp2nkazezifRHxYSfF2VpCz76S"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/fundingManager/IRebasingFundingManager.sol",
    "id": 44441,
    "exportedSymbols": {
      "IFundingManager": [
        44404
      ],
      "IRebasingFundingManager": [
        44440
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1251:100",
    "nodes": [
      {
        "id": 44406,
        "nodeType": "PragmaDirective",
        "src": "42:23:100",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 44408,
        "nodeType": "ImportDirective",
        "src": "90:79:100",
        "nodes": [],
        "absolutePath": "src/modules/fundingManager/IFundingManager.sol",
        "file": "src/modules/fundingManager/IFundingManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44441,
        "sourceUnit": 44405,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44407,
              "name": "IFundingManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44404,
              "src": "98:15:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44440,
        "nodeType": "ContractDefinition",
        "src": "279:1013:100",
        "nodes": [
          {
            "id": 44417,
            "nodeType": "FunctionDefinition",
            "src": "482:39:100",
            "nodes": [],
            "documentation": {
              "id": 44412,
              "nodeType": "StructuredDocumentation",
              "src": "339:138:100",
              "text": "@notice Deposits an amount of the token.\n @param amount The amount that is being deposited.\n @custom:tags amount:decimal"
            },
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "491:7:100",
            "parameters": {
              "id": 44415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44414,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "504:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44417,
                  "src": "499:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44413,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "498:13:100"
            },
            "returnParameters": {
              "id": 44416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:100"
            },
            "scope": 44440,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44425,
            "nodeType": "FunctionDefinition",
            "src": "753:54:100",
            "nodes": [],
            "documentation": {
              "id": 44418,
              "nodeType": "StructuredDocumentation",
              "src": "527:221:100",
              "text": "@notice Deposits an amount of the token for an adddress.\n @param amount The amount that is being deposited.\n @param to The address that this deposit is credit towards.\n @custom:tags amount:decimal"
            },
            "functionSelector": "2f4f21e2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositFor",
            "nameLocation": "762:10:100",
            "parameters": {
              "id": 44423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44420,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "781:2:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44425,
                  "src": "773:10:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44422,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "790:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44425,
                  "src": "785:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44421,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:25:100"
            },
            "returnParameters": {
              "id": 44424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "806:0:100"
            },
            "scope": 44440,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44431,
            "nodeType": "FunctionDefinition",
            "src": "957:40:100",
            "nodes": [],
            "documentation": {
              "id": 44426,
              "nodeType": "StructuredDocumentation",
              "src": "813:139:100",
              "text": "@notice Withdraws an amount of the token.\n @param amount The amount that is being withdrawn.\n @custom:tags amount:decimal"
            },
            "functionSelector": "2e1a7d4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "966:8:100",
            "parameters": {
              "id": 44429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44428,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "980:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44431,
                  "src": "975:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44427,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:13:100"
            },
            "returnParameters": {
              "id": 44430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:100"
            },
            "scope": 44440,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44439,
            "nodeType": "FunctionDefinition",
            "src": "1236:54:100",
            "nodes": [],
            "documentation": {
              "id": 44432,
              "nodeType": "StructuredDocumentation",
              "src": "1003:228:100",
              "text": "@notice Withdraws an amount of the token to an address.\n @param amount The amount that is being withdrawn.\n @param to The address that the withdrawn tokens should be sent to.\n @custom:tags amount:decimal"
            },
            "functionSelector": "205c2878",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTo",
            "nameLocation": "1245:10:100",
            "parameters": {
              "id": 44437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44434,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1264:2:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44439,
                  "src": "1256:10:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44436,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1273:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 44439,
                  "src": "1268:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44435,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1255:25:100"
            },
            "returnParameters": {
              "id": 44438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:0:100"
            },
            "scope": 44440,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44410,
              "name": "IFundingManager",
              "nameLocations": [
                "316:15:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44404,
              "src": "316:15:100"
            },
            "id": 44411,
            "nodeType": "InheritanceSpecifier",
            "src": "316:15:100"
          }
        ],
        "canonicalName": "IRebasingFundingManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 44409,
          "nodeType": "StructuredDocumentation",
          "src": "171:108:100",
          "text": "@notice A rebasing funding manager module\n @custom:version 1.0\n @custom:moduletype fundingManager"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44440,
          44404
        ],
        "name": "IRebasingFundingManager",
        "nameLocation": "289:23:100",
        "scope": 44441,
        "usedErrors": [
          44357,
          44360,
          44363
        ],
        "usedEvents": [
          44372,
          44381,
          44388
        ]
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 100
}