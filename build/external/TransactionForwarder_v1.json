{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createDigest",
      "inputs": [
        {
          "name": "req",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "digest",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        {
          "name": "fields",
          "type": "bytes1",
          "internalType": "bytes1"
        },
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "version",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "chainId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "verifyingContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "extensions",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "executeBatch",
      "inputs": [
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "refundReceiver",
          "type": "address",
          "internalType": "address payable"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "executeMulticall",
      "inputs": [
        {
          "name": "calls",
          "type": "tuple[]",
          "internalType": "struct ITransactionForwarder_v1.SingleCall[]",
          "components": [
            {
              "name": "target",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "allowFailure",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "results",
          "type": "tuple[]",
          "internalType": "struct ITransactionForwarder_v1.Result[]",
          "components": [
            {
              "name": "success",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "returnData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "nonces",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verify",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "EIP712DomainChanged",
      "inputs": [],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutedForwardRequest",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "success",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "CallFailed",
      "inputs": [
        {
          "name": "call",
          "type": "tuple",
          "internalType": "struct ITransactionForwarder_v1.SingleCall",
          "components": [
            {
              "name": "target",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "allowFailure",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderExpiredRequest",
      "inputs": [
        {
          "name": "deadline",
          "type": "uint48",
          "internalType": "uint48"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderInvalidSigner",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderMismatchedValue",
      "inputs": [
        {
          "name": "requestedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "msgValue",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771UntrustfulTarget",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "FailedInnerCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAccountNonce",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "currentNonce",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x6101606040523480156200001257600080fd5b5060405162001cd238038062001cd28339810160408190526200003591620001d0565b6040805180820190915260018152603160f81b6020820152819081906200005e8260006200010f565b610120526200006f8160016200010f565b61014052815160208084019190912060e052815190820120610100524660a052620000fd60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200043f9050565b60006020835110156200012f57620001278362000148565b905062000142565b816200013c848262000319565b5060ff90505b92915050565b600080829050601f815111156200017f578260405163305a27a960e01b8152600401620001769190620003e5565b60405180910390fd5b80516200018c826200041a565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001c7578181015183820152602001620001ad565b50506000910152565b600060208284031215620001e357600080fd5b81516001600160401b0380821115620001fb57600080fd5b818401915084601f8301126200021057600080fd5b81518181111562000225576200022562000194565b604051601f8201601f19908116603f0116810190838211818310171562000250576200025062000194565b816040528281528760208487010111156200026a57600080fd5b6200027d836020830160208801620001aa565b979650505050505050565b600181811c908216806200029d57607f821691505b602082108103620002be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000314576000816000526020600020601f850160051c81016020861015620002ef5750805b601f850160051c820191505b818110156200031057828155600101620002fb565b5050505b505050565b81516001600160401b0381111562000335576200033562000194565b6200034d8162000346845462000288565b84620002c4565b602080601f8311600181146200038557600084156200036c5750858301515b600019600386901b1c1916600185901b17855562000310565b600085815260208120601f198616915b82811015620003b65788860151825594840194600190910190840162000395565b5085821015620003d55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000825180602084015262000406816040850160208701620001aa565b601f01601f19169190910160400192915050565b80516020808301519190811015620002be5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516118386200049a600039600061078c0152600061075a01526000610e8e01526000610e6601526000610dc101526000610deb01526000610e1501526118386000f3fe6080604052600436106100705760003560e01c806384b0196e1161004e57806384b0196e1461011f57806397259d9c14610147578063ccf96b4a14610167578063df905caf1461017c57600080fd5b8063089168fe1461007557806319d8d38c146100ab5780637ecebe00146100db575b600080fd5b34801561008157600080fd5b506100956100903660046110e3565b61018f565b6040516100a29190611175565b60405180910390f35b3480156100b757600080fd5b506100cb6100c636600461120b565b6103d3565b60405190151581526020016100a2565b3480156100e757600080fd5b506101116100f6366004611272565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100a2565b34801561012b57600080fd5b50610134610405565b6040516100a2979695949392919061128f565b34801561015357600080fd5b50610111610162366004611426565b610467565b61017a6101753660046114fe565b610480565b005b61017a61018a36600461120b565b61059b565b6060818067ffffffffffffffff8111156101ab576101ab611344565b6040519080825280602002602001820160405280156101f157816020015b6040805180820190915260008152606060208201528152602001906001900390816101c95790505b50915036606060005b838110156103c95786868281811061021457610214611555565b9050602002810190610226919061156b565b925061023d6102386020850185611272565b610628565b6102975761024e6020840184611272565b6040517fd2650cd10000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201523060248201526044015b60405180910390fd5b6102a460408401846115a9565b336040516020016102b7939291906115f0565b60408051601f1981840301815291905291506000806102d96020860186611272565b6001600160a01b0316846040516102f09190611629565b6000604051808303816000865af19150503d806000811461032d576040519150601f19603f3d011682016040523d82523d6000602084013e610332565b606091505b5091509150811580156103525750610350604086016020870161164b565b155b1561038b57846040517f4def4a8c00000000000000000000000000000000000000000000000000000000815260040161028e9190611666565b60405180604001604052808315158152602001828152508784815181106103b4576103b4611555565b602090810291909101015250506001016101fa565b5050505092915050565b6000806000806103e2856106d3565b509250925092508280156103f35750815b80156103fc5750805b95945050505050565b600060608060008060006060610419610753565b610421610785565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b600061047a610475836107b2565b610894565b92915050565b6001600160a01b03811615600080805b85811015610540578686828181106104aa576104aa611555565b90506020028101906104bc9190611710565b6104ca906040013584611744565b925060006104fb8888848181106104e3576104e3611555565b90506020028101906104f59190611710565b866108dc565b9050806105375787878381811061051457610514611555565b90506020028101906105269190611710565b610534906040013584611744565b92505b50600101610490565b50348214610583576040517f70647f790000000000000000000000000000000000000000000000000000000081526004810183905234602482015260440161028e565b8015610593576105938482610ac5565b505050505050565b806040013534146105e457604080517f70647f7900000000000000000000000000000000000000000000000000000000815290820135600482015234602482015260440161028e565b6105ef8160016108dc565b610625576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b604051306024820152600090819060440160408051601f19818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f572b6c050000000000000000000000000000000000000000000000000000000017815282519293506000928392839290918391895afa92503d915060005190508280156106bd575060208210155b80156106c95750600081115b9695505050505050565b6000806000806000806106e587610b93565b90925090506106fd6102386040890160208a01611272565b4261070e60a08a0160808b01611765565b65ffffffffffff161015838015610742575061072d60208a018a611272565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b60606107807f00000000000000000000000000000000000000000000000000000000000000006000610d08565b905090565b60606107807f00000000000000000000000000000000000000000000000000000000000000006001610d08565b60007f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac826000015183602001518460400151856060015161080c87600001516001600160a01b031660009081526002602052604090205490565b608088015160a089015180516020918201206040516108779998979695949392019788526001600160a01b0396871660208901529490951660408701526060860192909252608085015260a084015265ffffffffffff9190911660c083015260e08201526101000190565b604051602081830303815290604052805190602001209050919050565b600061047a6108a1610db4565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b60008060008060006108ed876106d3565b935093509350935085156109ba57836109105761024e6040880160208901611272565b826109625761092560a0880160808901611765565b6040517f94eef58a00000000000000000000000000000000000000000000000000000000815265ffffffffffff909116600482015260240161028e565b816109ba57806109756020890189611272565b6040517fc845a0560000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529116602482015260440161028e565b8380156109c45750815b80156109cd5750825b156103c9576001600160a01b0381166000908152600260205260408120805460018101909155905060608801356000610a0c60408b0160208c01611272565b905060408a01356000610a2260a08d018d6115a9565b610a2f60208f018f611272565b604051602001610a41939291906115f0565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610a70818e610edf565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505050505092915050565b80471015610b01576040517fcd78605900000000000000000000000000000000000000000000000000000000815230600482015260240161028e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b4e576040519150601f19603f3d011682016040523d82523d6000602084013e610b53565b606091505b5050905080610b8e576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000808080610ce2610ba860c08701876115a9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cdc92507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610c10905060208a018a611272565b610c2060408b0160208c01611272565b60408b013560608c0135610c3a6100f660208f018f611272565b8d6080016020810190610c4d9190611765565b8e8060a00190610c5d91906115a9565b604051610c6b929190611780565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e08201526101008101919091526101200160405160208183030381529060405280519060200120610894565b90610efb565b5090925090506000816003811115610cfc57610cfc611790565b14959194509092505050565b606060ff8314610d2257610d1b83610f48565b905061047a565b818054610d2e906117a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5a906117a6565b8015610da75780601f10610d7c57610100808354040283529160200191610da7565b820191906000526020600020905b815481529060010190602001808311610d8a57829003601f168201915b5050505050905092915050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610e0d57507f000000000000000000000000000000000000000000000000000000000000000046145b15610e3757507f000000000000000000000000000000000000000000000000000000000000000090565b610780604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610eee603f60608301356117e0565b821015610ef757fe5b5050565b60008060008351604103610f355760208401516040850151606086015160001a610f2788828585610f87565b955095509550505050610f41565b50508151600091506002905b9250925092565b60606000610f5583611056565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610fc2575060009150600390508261104c565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611016573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166110425750600092506001915082905061104c565b9250600091508190505b9450945094915050565b600060ff8216601f81111561047a576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083601f8401126110a957600080fd5b50813567ffffffffffffffff8111156110c157600080fd5b6020830191508360208260051b85010111156110dc57600080fd5b9250929050565b600080602083850312156110f657600080fd5b823567ffffffffffffffff81111561110d57600080fd5b61111985828601611097565b90969095509350505050565b60005b83811015611140578181015183820152602001611128565b50506000910152565b60008151808452611161816020860160208601611125565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b838110156111fd578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001855281518051151584528701518784018790526111ea87850182611149565b958801959350509086019060010161119e565b509098975050505050505050565b60006020828403121561121d57600080fd5b813567ffffffffffffffff81111561123457600080fd5b820160e0818503121561124657600080fd5b9392505050565b6001600160a01b038116811461062557600080fd5b803561126d8161124d565b919050565b60006020828403121561128457600080fd5b81356112468161124d565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e060208401526112cc60e084018a611149565b83810360408501526112de818a611149565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561133257835183529284019291840191600101611316565b50909c9b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561137d5761137d611344565b60405290565b803565ffffffffffff8116811461126d57600080fd5b600082601f8301126113aa57600080fd5b813567ffffffffffffffff808211156113c5576113c5611344565b604051601f8301601f19908116603f011681019082821181831017156113ed576113ed611344565b8160405283815286602085880101111561140657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561143857600080fd5b813567ffffffffffffffff8082111561145057600080fd5b9083019060e0828603121561146457600080fd5b61146c61135a565b61147583611262565b815261148360208401611262565b602082015260408301356040820152606083013560608201526114a860808401611383565b608082015260a0830135828111156114bf57600080fd5b6114cb87828601611399565b60a08301525060c0830135828111156114e357600080fd5b6114ef87828601611399565b60c08301525095945050505050565b60008060006040848603121561151357600080fd5b833567ffffffffffffffff81111561152a57600080fd5b61153686828701611097565b909450925050602084013561154a8161124d565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261159f57600080fd5b9190910192915050565b6000808335601e198436030181126115c057600080fd5b83018035915067ffffffffffffffff8211156115db57600080fd5b6020019150368190038213156110dc57600080fd5b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b6000825161159f818460208701611125565b8035801515811461126d57600080fd5b60006020828403121561165d57600080fd5b6112468261163b565b60208152600082356116778161124d565b6001600160a01b0381166020840152506116936020840161163b565b151560408301526040830135601e198436030181126116b157600080fd5b830160208101903567ffffffffffffffff8111156116ce57600080fd5b8036038213156116dd57600080fd5b606080850152806080850152808260a0860137600060a0828601015260a0601f19601f8301168501019250505092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261159f57600080fd5b8082018082111561047a57634e487b7160e01b600052601160045260246000fd5b60006020828403121561177757600080fd5b61124682611383565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806117ba57607f821691505b6020821081036117da57634e487b7160e01b600052602260045260246000fd5b50919050565b6000826117fd57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ca76a88254b86e95fa0ccd2d8a98f797f805db6e4265e92e96810d536d034bc864736f6c63430008170033",
    "sourceMap": "1102:4395:102:-:0;;;1331:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:61;;;;;;;;;;;;-1:-1:-1;;;3328:431:61;;;;1380:4:102;;;;3401:45:61;1380:4:102;-1:-1:-1;3401:30:61;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4142:25:267;4183:18;;;4176:34;;;;4226:18;;;4219:34;4255:13:61;4269:18:267;;;4262:34;4278:4:61;4312:19:267;;;4305:61;4168:7:61;;4114:19:267;;4204:80:61;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:61;3725:27;;-1:-1:-1;1102:4395:102;;-1:-1:-1;1102:4395:102;2914:340:57;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;:20::i;:::-;3077:27;;;;3033:215;3161:5;3135:46;3176:5;3161;3135:46;:::i;:::-;-1:-1:-1;1390:66:57;;-1:-1:-1;3033:215:57;2914:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:57;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:57:o;14:127:267:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:267;370:16;;363:27;146:250::o;401:897::-;481:6;534:2;522:9;513:7;509:23;505:32;502:52;;;550:1;547;540:12;502:52;577:16;;-1:-1:-1;;;;;642:14:267;;;639:34;;;669:1;666;659:12;639:34;707:6;696:9;692:22;682:32;;752:7;745:4;741:2;737:13;733:27;723:55;;774:1;771;764:12;723:55;803:2;797:9;825:2;821;818:10;815:36;;;831:18;;:::i;:::-;906:2;900:9;874:2;960:13;;-1:-1:-1;;956:22:267;;;980:2;952:31;948:40;936:53;;;1004:18;;;1024:22;;;1001:46;998:72;;;1050:18;;:::i;:::-;1090:10;1086:2;1079:22;1125:2;1117:6;1110:18;1165:7;1160:2;1155;1151;1147:11;1143:20;1140:33;1137:53;;;1186:1;1183;1176:12;1137:53;1199:68;1264:2;1259;1251:6;1247:15;1242:2;1238;1234:11;1199:68;:::i;:::-;1286:6;401:897;-1:-1:-1;;;;;;;401:897:267:o;1303:380::-;1382:1;1378:12;;;;1425;;;1446:61;;1500:4;1492:6;1488:17;1478:27;;1446:61;1553:2;1545:6;1542:14;1522:18;1519:38;1516:161;;1599:10;1594:3;1590:20;1587:1;1580:31;1634:4;1631:1;1624:15;1662:4;1659:1;1652:15;1516:161;;1303:380;;;:::o;1814:543::-;1916:2;1911:3;1908:11;1905:446;;;1952:1;1976:5;1973:1;1966:16;2020:4;2017:1;2007:18;2090:2;2078:10;2074:19;2071:1;2067:27;2061:4;2057:38;2126:4;2114:10;2111:20;2108:47;;;-1:-1:-1;2149:4:267;2108:47;2204:2;2199:3;2195:12;2192:1;2188:20;2182:4;2178:31;2168:41;;2259:82;2277:2;2270:5;2267:13;2259:82;;;2322:17;;;2303:1;2292:13;2259:82;;;2263:3;;;1905:446;1814:543;;;:::o;2533:1345::-;2653:10;;-1:-1:-1;;;;;2675:30:267;;2672:56;;;2708:18;;:::i;:::-;2737:97;2827:6;2787:38;2819:4;2813:11;2787:38;:::i;:::-;2781:4;2737:97;:::i;:::-;2889:4;;2946:2;2935:14;;2963:1;2958:663;;;;3665:1;3682:6;3679:89;;;-1:-1:-1;3734:19:267;;;3728:26;3679:89;-1:-1:-1;;2490:1:267;2486:11;;;2482:24;2478:29;2468:40;2514:1;2510:11;;;2465:57;3781:81;;2928:944;;2958:663;1761:1;1754:14;;;1798:4;1785:18;;-1:-1:-1;;2994:20:267;;;3112:236;3126:7;3123:1;3120:14;3112:236;;;3215:19;;;3209:26;3194:42;;3307:27;;;;3275:1;3263:14;;;;3142:19;;3112:236;;;3116:3;3376:6;3367:7;3364:19;3361:201;;;3437:19;;;3431:26;-1:-1:-1;;3520:1:267;3516:14;;;3532:3;3512:24;3508:37;3504:42;3489:58;3474:74;;3361:201;-1:-1:-1;;;;;3608:1:267;3592:14;;;3588:22;3575:36;;-1:-1:-1;2533:1345:267:o;4377:396::-;4526:2;4515:9;4508:21;4489:4;4558:6;4552:13;4601:6;4596:2;4585:9;4581:18;4574:34;4617:79;4689:6;4684:2;4673:9;4669:18;4664:2;4656:6;4652:15;4617:79;:::i;:::-;4757:2;4736:15;-1:-1:-1;;4732:29:267;4717:45;;;;4764:2;4713:54;;4377:396;-1:-1:-1;;4377:396:267:o;4778:297::-;4896:12;;4943:4;4932:16;;;4926:23;;4896:12;4961:16;;4958:111;;;-1:-1:-1;;5035:4:267;5031:17;;;;5028:1;5024:25;5020:38;5009:50;;4778:297;-1:-1:-1;4778:297:267:o;:::-;1102:4395:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100705760003560e01c806384b0196e1161004e57806384b0196e1461011f57806397259d9c14610147578063ccf96b4a14610167578063df905caf1461017c57600080fd5b8063089168fe1461007557806319d8d38c146100ab5780637ecebe00146100db575b600080fd5b34801561008157600080fd5b506100956100903660046110e3565b61018f565b6040516100a29190611175565b60405180910390f35b3480156100b757600080fd5b506100cb6100c636600461120b565b6103d3565b60405190151581526020016100a2565b3480156100e757600080fd5b506101116100f6366004611272565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100a2565b34801561012b57600080fd5b50610134610405565b6040516100a2979695949392919061128f565b34801561015357600080fd5b50610111610162366004611426565b610467565b61017a6101753660046114fe565b610480565b005b61017a61018a36600461120b565b61059b565b6060818067ffffffffffffffff8111156101ab576101ab611344565b6040519080825280602002602001820160405280156101f157816020015b6040805180820190915260008152606060208201528152602001906001900390816101c95790505b50915036606060005b838110156103c95786868281811061021457610214611555565b9050602002810190610226919061156b565b925061023d6102386020850185611272565b610628565b6102975761024e6020840184611272565b6040517fd2650cd10000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201523060248201526044015b60405180910390fd5b6102a460408401846115a9565b336040516020016102b7939291906115f0565b60408051601f1981840301815291905291506000806102d96020860186611272565b6001600160a01b0316846040516102f09190611629565b6000604051808303816000865af19150503d806000811461032d576040519150601f19603f3d011682016040523d82523d6000602084013e610332565b606091505b5091509150811580156103525750610350604086016020870161164b565b155b1561038b57846040517f4def4a8c00000000000000000000000000000000000000000000000000000000815260040161028e9190611666565b60405180604001604052808315158152602001828152508784815181106103b4576103b4611555565b602090810291909101015250506001016101fa565b5050505092915050565b6000806000806103e2856106d3565b509250925092508280156103f35750815b80156103fc5750805b95945050505050565b600060608060008060006060610419610753565b610421610785565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b600061047a610475836107b2565b610894565b92915050565b6001600160a01b03811615600080805b85811015610540578686828181106104aa576104aa611555565b90506020028101906104bc9190611710565b6104ca906040013584611744565b925060006104fb8888848181106104e3576104e3611555565b90506020028101906104f59190611710565b866108dc565b9050806105375787878381811061051457610514611555565b90506020028101906105269190611710565b610534906040013584611744565b92505b50600101610490565b50348214610583576040517f70647f790000000000000000000000000000000000000000000000000000000081526004810183905234602482015260440161028e565b8015610593576105938482610ac5565b505050505050565b806040013534146105e457604080517f70647f7900000000000000000000000000000000000000000000000000000000815290820135600482015234602482015260440161028e565b6105ef8160016108dc565b610625576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b604051306024820152600090819060440160408051601f19818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f572b6c050000000000000000000000000000000000000000000000000000000017815282519293506000928392839290918391895afa92503d915060005190508280156106bd575060208210155b80156106c95750600081115b9695505050505050565b6000806000806000806106e587610b93565b90925090506106fd6102386040890160208a01611272565b4261070e60a08a0160808b01611765565b65ffffffffffff161015838015610742575061072d60208a018a611272565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b60606107807f00000000000000000000000000000000000000000000000000000000000000006000610d08565b905090565b60606107807f00000000000000000000000000000000000000000000000000000000000000006001610d08565b60007f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac826000015183602001518460400151856060015161080c87600001516001600160a01b031660009081526002602052604090205490565b608088015160a089015180516020918201206040516108779998979695949392019788526001600160a01b0396871660208901529490951660408701526060860192909252608085015260a084015265ffffffffffff9190911660c083015260e08201526101000190565b604051602081830303815290604052805190602001209050919050565b600061047a6108a1610db4565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b60008060008060006108ed876106d3565b935093509350935085156109ba57836109105761024e6040880160208901611272565b826109625761092560a0880160808901611765565b6040517f94eef58a00000000000000000000000000000000000000000000000000000000815265ffffffffffff909116600482015260240161028e565b816109ba57806109756020890189611272565b6040517fc845a0560000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529116602482015260440161028e565b8380156109c45750815b80156109cd5750825b156103c9576001600160a01b0381166000908152600260205260408120805460018101909155905060608801356000610a0c60408b0160208c01611272565b905060408a01356000610a2260a08d018d6115a9565b610a2f60208f018f611272565b604051602001610a41939291906115f0565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610a70818e610edf565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505050505092915050565b80471015610b01576040517fcd78605900000000000000000000000000000000000000000000000000000000815230600482015260240161028e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b4e576040519150601f19603f3d011682016040523d82523d6000602084013e610b53565b606091505b5050905080610b8e576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000808080610ce2610ba860c08701876115a9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cdc92507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610c10905060208a018a611272565b610c2060408b0160208c01611272565b60408b013560608c0135610c3a6100f660208f018f611272565b8d6080016020810190610c4d9190611765565b8e8060a00190610c5d91906115a9565b604051610c6b929190611780565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e08201526101008101919091526101200160405160208183030381529060405280519060200120610894565b90610efb565b5090925090506000816003811115610cfc57610cfc611790565b14959194509092505050565b606060ff8314610d2257610d1b83610f48565b905061047a565b818054610d2e906117a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5a906117a6565b8015610da75780601f10610d7c57610100808354040283529160200191610da7565b820191906000526020600020905b815481529060010190602001808311610d8a57829003601f168201915b5050505050905092915050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610e0d57507f000000000000000000000000000000000000000000000000000000000000000046145b15610e3757507f000000000000000000000000000000000000000000000000000000000000000090565b610780604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610eee603f60608301356117e0565b821015610ef757fe5b5050565b60008060008351604103610f355760208401516040850151606086015160001a610f2788828585610f87565b955095509550505050610f41565b50508151600091506002905b9250925092565b60606000610f5583611056565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610fc2575060009150600390508261104c565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611016573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166110425750600092506001915082905061104c565b9250600091508190505b9450945094915050565b600060ff8216601f81111561047a576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083601f8401126110a957600080fd5b50813567ffffffffffffffff8111156110c157600080fd5b6020830191508360208260051b85010111156110dc57600080fd5b9250929050565b600080602083850312156110f657600080fd5b823567ffffffffffffffff81111561110d57600080fd5b61111985828601611097565b90969095509350505050565b60005b83811015611140578181015183820152602001611128565b50506000910152565b60008151808452611161816020860160208601611125565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b838110156111fd578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001855281518051151584528701518784018790526111ea87850182611149565b958801959350509086019060010161119e565b509098975050505050505050565b60006020828403121561121d57600080fd5b813567ffffffffffffffff81111561123457600080fd5b820160e0818503121561124657600080fd5b9392505050565b6001600160a01b038116811461062557600080fd5b803561126d8161124d565b919050565b60006020828403121561128457600080fd5b81356112468161124d565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e060208401526112cc60e084018a611149565b83810360408501526112de818a611149565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561133257835183529284019291840191600101611316565b50909c9b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561137d5761137d611344565b60405290565b803565ffffffffffff8116811461126d57600080fd5b600082601f8301126113aa57600080fd5b813567ffffffffffffffff808211156113c5576113c5611344565b604051601f8301601f19908116603f011681019082821181831017156113ed576113ed611344565b8160405283815286602085880101111561140657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561143857600080fd5b813567ffffffffffffffff8082111561145057600080fd5b9083019060e0828603121561146457600080fd5b61146c61135a565b61147583611262565b815261148360208401611262565b602082015260408301356040820152606083013560608201526114a860808401611383565b608082015260a0830135828111156114bf57600080fd5b6114cb87828601611399565b60a08301525060c0830135828111156114e357600080fd5b6114ef87828601611399565b60c08301525095945050505050565b60008060006040848603121561151357600080fd5b833567ffffffffffffffff81111561152a57600080fd5b61153686828701611097565b909450925050602084013561154a8161124d565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261159f57600080fd5b9190910192915050565b6000808335601e198436030181126115c057600080fd5b83018035915067ffffffffffffffff8211156115db57600080fd5b6020019150368190038213156110dc57600080fd5b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b6000825161159f818460208701611125565b8035801515811461126d57600080fd5b60006020828403121561165d57600080fd5b6112468261163b565b60208152600082356116778161124d565b6001600160a01b0381166020840152506116936020840161163b565b151560408301526040830135601e198436030181126116b157600080fd5b830160208101903567ffffffffffffffff8111156116ce57600080fd5b8036038213156116dd57600080fd5b606080850152806080850152808260a0860137600060a0828601015260a0601f19601f8301168501019250505092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261159f57600080fd5b8082018082111561047a57634e487b7160e01b600052601160045260246000fd5b60006020828403121561177757600080fd5b61124682611383565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806117ba57607f821691505b6020821081036117da57634e487b7160e01b600052602260045260246000fd5b50919050565b6000826117fd57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ca76a88254b86e95fa0ccd2d8a98f797f805db6e4265e92e96810d536d034bc864736f6c63430008170033",
    "sourceMap": "1102:4395:102:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:1168;;;;;;;;;;-1:-1:-1;2150:1168:102;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4845:244:35;;;;;;;;;;-1:-1:-1;4845:244:35;;;;;:::i;:::-;;:::i;:::-;;;3161:14:267;;3154:22;3136:41;;3124:2;3109:18;4845:244:35;2996:187:267;538:107:55;;;;;;;;;;-1:-1:-1;538:107:55;;;;;:::i;:::-;-1:-1:-1;;;;;624:14:55;598:7;624:14;;;:7;:14;;;;;;;538:107;;;;3884:25:267;;;3872:2;3857:18;538:107:55;3738:177:267;5144:557:61;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1809:181:102:-;;;;;;;;;;-1:-1:-1;1809:181:102;;;;;:::i;:::-;;:::i;7519:1264:35:-;;;;;;:::i;:::-;;:::i;:::-;;5605:513;;;;;;:::i;:::-;;:::i;2150:1168:102:-;2239:23;2292:5;;2324:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2324:20:102;;;;;;;;;;;;;;;;2314:30;;2355:25;2390:17;2462:6;2457:855;2478:6;2474:1;:10;2457:855;;;2513:5;;2519:1;2513:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2505:16;-1:-1:-1;2604:33:102;2624:12;;;;2505:16;2624:12;:::i;:::-;2604:19;:33::i;:::-;2599:132;;2688:12;;;;:5;:12;:::i;:::-;2664:52;;;;;-1:-1:-1;;;;;9418:15:267;;;2664:52:102;;;9400:34:267;2710:4:102;9450:18:267;;;9443:43;9312:18;;2664:52:102;;;;;;;;2599:132;2903:14;;;;:5;:14;:::i;:::-;735:10:54;2886:46:102;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2886:46:102;;;;;;;;;;-1:-1:-1;2974:12:102;;3015;2886:46;3015:12;;:5;:12;:::i;:::-;-1:-1:-1;;;;;3015:17:102;3033:4;3015:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:65;;;;3123:7;3122:8;:31;;;;-1:-1:-1;3135:18:102;;;;;;;;:::i;:::-;3134:19;3122:31;3118:94;;;3191:5;3180:17;;;;;;;;;;;:::i;3118:94::-;3274:27;;;;;;;;3281:7;3274:27;;;;;;3290:10;3274:27;;;3261:7;3269:1;3261:10;;;;;;;;:::i;:::-;;;;;;;;;;:40;-1:-1:-1;;2486:3:102;;2457:855;;;;2268:1050;;;2150:1168;;;;:::o;4845:244:35:-;4927:4;4944:23;4969:11;4982:16;5004:18;5014:7;5004:9;:18::i;:::-;4943:79;;;;;;;5039:18;:28;;;;;5061:6;5039:28;:43;;;;;5071:11;5039:43;5032:50;4845:244;-1:-1:-1;;;;;4845:244:35:o;5144:557:61:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;5482:212;;;;-1:-1:-1;5482:212:61;;-1:-1:-1;5590:13:61;;-1:-1:-1;5625:4:61;;-1:-1:-1;5652:1:61;-1:-1:-1;5668:16:61;-1:-1:-1;5482:212:61;-1:-1:-1;5144:557:61:o;1809:181:102:-;1909:14;1946:37;1963:19;1978:3;1963:14;:19::i;:::-;1946:16;:37::i;:::-;1939:44;1809:181;-1:-1:-1;;1809:181:102:o;7519:1264:35:-;-1:-1:-1;;;;;7682:28:35;;;7668:11;;;7782:251;7798:19;;;7782:251;;;7855:8;;7864:1;7855:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7838:34;;7855:17;;;7838:34;;:::i;:::-;;;7886:12;7901:29;7910:8;;7919:1;7910:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7923:6;7901:8;:29::i;:::-;7886:44;;7949:7;7944:79;;7991:8;;8000:1;7991:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7976:32;;7991:17;;;7976:32;;:::i;:::-;;;7944:79;-1:-1:-1;7819:3:35;;7782:251;;;;8186:9;8169:13;:26;8165:121;;8218:57;;;;;;;;13266:25:267;;;8265:9:35;13307:18:267;;;13300:34;13239:18;;8218:57:35;13092:248:267;8165:121:35;8453:16;;8449:328;;8720:46;8738:14;8754:11;8720:17;:46::i;:::-;7658:1125;;;7519:1264;;;:::o;5605:513::-;5911:7;:13;;;5898:9;:26;5894:121;;5979:13;5947:57;;;;;5979:13;;;;5947:57;;;13266:25:267;5994:9:35;13307:18:267;;;13300:34;13239:18;;5947:57:35;13092:248:267;5894:121:35;6030:23;6039:7;6048:4;6030:8;:23::i;:::-;6025:87;;6076:25;;;;;;;;;;;;;;6025:87;5605:513;:::o;4230:1265:102:-;4354:66;;4413:4;4354:66;;;13491:74:267;4297:4:102;;;;13464:18:267;;4354:66:102;;;-1:-1:-1;;4354:66:102;;;;;;;;;;;;;;;;;;;;;5247:20;;4354:66;;-1:-1:-1;;;;;;;4354:66:102;;-1:-1:-1;;5173:6:102;5146:5;5114:220;5087:247;;5361:16;5347:30;;5411:1;5405:8;5390:23;;5440:7;:29;;;;;5465:4;5451:10;:18;;5440:29;:48;;;;;5487:1;5473:11;:15;5440:48;5433:55;4230:1265;-1:-1:-1;;;;;;4230:1265:102:o;8967:457:35:-;9068:23;9093:11;9106:16;9124:14;9151:12;9165:17;9186:37;9215:7;9186:28;:37::i;:::-;9150:73;;-1:-1:-1;9150:73:35;-1:-1:-1;9255:30:35;9274:10;;;;;;;;:::i;9255:30::-;9319:15;9299:16;;;;;;;;:::i;:::-;:35;;;;9348:7;:36;;;;-1:-1:-1;9372:12:35;;;;:7;:12;:::i;:::-;-1:-1:-1;;;;;9359:25:35;:9;-1:-1:-1;;;;;9359:25:35;;9348:36;9234:183;;-1:-1:-1;9234:183:35;-1:-1:-1;9234:183:35;-1:-1:-1;9398:9:35;-1:-1:-1;;8967:457:35;;;;;:::o;6021:126:61:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;3422:459:102:-;3541:7;3070:141:35;3665:3:102;:8;;;3691:3;:6;;;3715:3;:9;;;3742:3;:7;;;3767:16;3774:3;:8;;;-1:-1:-1;;;;;624:14:55;598:7;624:14;;;:7;:14;;;;;;;538:107;3767:16:102;3801:12;;;;3841:8;;;;3831:19;;;;;;;3594:270;;;;;;;;;;3801:12;3594:270;14106:25:267;;;-1:-1:-1;;;;;14228:15:267;;;14223:2;14208:18;;14201:43;14280:15;;;;14275:2;14260:18;;14253:43;14327:2;14312:18;;14305:34;;;;14370:3;14355:19;;14348:35;14414:3;14399:19;;14392:35;14476:14;14464:27;;;;14458:3;14443:19;;14436:56;14523:3;14508:19;;14501:35;14093:3;14078:19;;13765:777;3594:270:102;;;;;;;;;;;;;3571:303;;;;;;3564:310;;3422:459;;;:::o;4917:176:61:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3555:4:62;3549:11;3585:10;3573:23;;3625:4;3616:14;;3609:39;;;;3677:4;3668:14;;3661:34;3733:4;3718:20;;;3353:401;11009:1643:35;11138:12;11163:23;11188:11;11201:16;11219:14;11237:18;11247:7;11237:9;:18::i;:::-;11162:93;;;;;;;;11453:19;11449:402;;;11493:18;11488:115;;11562:10;;;;;;;;:::i;11488:115::-;11622:6;11617:101;;11686:16;;;;;;;;:::i;:::-;11655:48;;;;;14721:14:267;14709:27;;;11655:48:35;;;14691:46:267;14664:18;;11655:48:35;14547:196:267;11617:101:35;11737:11;11732:109;;11805:6;11813:12;;;;:7;:12;:::i;:::-;11775:51;;;;;-1:-1:-1;;;;;9418:15:267;;;11775:51:35;;;9400:34:267;9470:15;;9450:18;;;9443:43;9312:18;;11775:51:35;9165:327:267;11732:109:35;11938:18;:33;;;;;11960:11;11938:33;:43;;;;;11975:6;11938:43;11934:712;;;-1:-1:-1;;;;;1121:14:55;;12082:20:35;1121:14:55;;;:7;:14;;;;;:16;;;;;;;;12082:40:35;-1:-1:-1;12154:11:35;;;;12137:14;12192:10;;;;;;;;:::i;:::-;12179:23;-1:-1:-1;12232:13:35;;;;12216;12296:12;;;;12232:7;12296:12;:::i;:::-;12310;;;;:7;:12;:::i;:::-;12279:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12259:64;;12338:15;12463:1;12460;12453:4;12447:11;12440:4;12434;12430:15;12423:5;12419:2;12411:6;12406:59;12395:70;;12493:5;12482:16;;12526:36;12545:7;12554;12526:18;:36::i;:::-;12582:53;;;14916:25:267;;;14984:14;;14977:22;14972:2;14957:18;;14950:50;-1:-1:-1;;;;;12582:53:35;;;;;14889:18:267;12582:53:35;;;;;;;11983:663;;;;;;11152:1500;;;;11009:1643;;;;:::o;1531:331:53:-;1640:6;1616:21;:30;1612:109;;;1669:41;;;;;1704:4;1669:41;;;13491:74:267;13464:18;;1669:41:53;13345:226:267;1612:109:53;1732:12;1750:9;-1:-1:-1;;;;;1750:14:53;1772:6;1750:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;9716:709:35:-;9836:4;;;;9909:445;10336:17;;;;:7;:17;:::i;:::-;9909:445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9909:415:35;;-1:-1:-1;3070:141:35;;-1:-1:-1;10045:12:35;;-1:-1:-1;10045:12:35;;;:7;:12;:::i;:::-;10079:10;;;;;;;;:::i;:::-;10111:13;;;;10146:11;;;;10179:20;10186:12;;;;10111:7;10186:12;:::i;10179:20::-;10221:7;:16;;;;;;;;;;:::i;:::-;10269:7;:12;;;;;;;;:::i;:::-;10259:23;;;;;;;:::i;:::-;;;;;;;;;;9966:334;;;14106:25:267;;;;-1:-1:-1;;;;;14228:15:267;;;14208:18;;;14201:43;14280:15;;;;14260:18;;;14253:43;14312:18;;;14305:34;;;;14355:19;;;14348:35;14399:19;;;14392:35;14476:14;14464:27;14443:19;;;14436:56;14508:19;;;14501:35;;;;14078:19;;9966:334:35;;;;;;;;;;;;9939:375;;;;;;9909:16;:415::i;:::-;:426;;:445::i;:::-;-1:-1:-1;9861:493:35;;-1:-1:-1;9861:493:35;-1:-1:-1;10380:26:35;10373:3;:33;;;;;;;;:::i;:::-;;;10408:9;;-1:-1:-1;9716:709:35;;-1:-1:-1;;;9716:709:35:o;3385:267:57:-;3479:13;1390:66;3508:46;;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;:::o;3845:262:61:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:61;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:61;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;16666:25:267;4226:11:61;16707:18:267;;;16700:34;;;;4239:14:61;16750:18:267;;;16743:34;4255:13:61;16793:18:267;;;16786:34;4278:4:61;16836:19:267;;;16829:84;4168:7:61;;16638:19:267;;4204:80:61;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;14599:2198:35;16351:16;16365:2;16351:11;;;;:16;:::i;:::-;16341:7;:26;16337:454;;;16758:9;16337:454;14599:2198;;:::o;2129:766:60:-;2210:7;2219:12;2233:7;2256:9;:16;2276:2;2256:22;2252:637;;2592:4;2577:20;;2571:27;2641:4;2626:20;;2620:27;2698:4;2683:20;;2677:27;2294:9;2669:36;2739:25;2750:4;2669:36;2571:27;2620;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;-1:-1:-1;;2860:16:60;;2811:1;;-1:-1:-1;2815:35:60;;2252:637;2129:766;;;;;:::o;2078:405:57:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:57;;2300:14;;;;;;;;;-1:-1:-1;;;2390:16:57;;;-1:-1:-1;2435:4:57;2426:14;;2419:28;;;;-1:-1:-1;2390:16:57;2078:405::o;5140:1530:60:-;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:60;;-1:-1:-1;6301:30:60;;-1:-1:-1;6333:1:60;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;17151:25:267;;;17224:4;17212:17;;17192:18;;;17185:45;;;;17246:18;;;17239:34;;;17289:18;;;17282:34;;;6457:24:60;;17123:19:267;;6457:24:60;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:60;;-1:-1:-1;;6457:24:60;;;-1:-1:-1;;;;;;;6495:20:60;;6491:113;;-1:-1:-1;6547:1:60;;-1:-1:-1;6551:29:60;;-1:-1:-1;6547:1:60;;-1:-1:-1;6531:62:60;;6491:113;6622:6;-1:-1:-1;6630:20:60;;-1:-1:-1;6630:20:60;;-1:-1:-1;5140:1530:60;;;;;;;;;:::o;2555:245:57:-;2616:7;2688:4;2652:40;;2715:2;2706:11;;2702:69;;;2740:20;;;;;;;;;;;;;;14:386:267;96:8;106:6;160:3;153:4;145:6;141:17;137:27;127:55;;178:1;175;168:12;127:55;-1:-1:-1;201:20:267;;244:18;233:30;;230:50;;;276:1;273;266:12;230:50;313:4;305:6;301:17;289:29;;373:3;366:4;356:6;353:1;349:14;341:6;337:27;333:38;330:47;327:67;;;390:1;387;380:12;327:67;14:386;;;;;:::o;405:487::-;522:6;530;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;639:9;626:23;672:18;664:6;661:30;658:50;;;704:1;701;694:12;658:50;743:89;824:7;815:6;804:9;800:22;743:89;:::i;:::-;851:8;;717:115;;-1:-1:-1;405:487:267;-1:-1:-1;;;;405:487:267:o;897:250::-;982:1;992:113;1006:6;1003:1;1000:13;992:113;;;1082:11;;;1076:18;1063:11;;;1056:39;1028:2;1021:10;992:113;;;-1:-1:-1;;1139:1:267;1121:16;;1114:27;897:250::o;1152:329::-;1193:3;1231:5;1225:12;1258:6;1253:3;1246:19;1274:76;1343:6;1336:4;1331:3;1327:14;1320:4;1313:5;1309:16;1274:76;:::i;:::-;1395:2;1383:15;-1:-1:-1;;1379:88:267;1370:98;;;;1470:4;1366:109;;1152:329;-1:-1:-1;;1152:329:267:o;1486:1101::-;1678:4;1707:2;1747;1736:9;1732:18;1777:2;1766:9;1759:21;1800:6;1835;1829:13;1866:6;1858;1851:22;1892:2;1882:12;;1925:2;1914:9;1910:18;1903:25;;1987:2;1977:6;1974:1;1970:14;1959:9;1955:30;1951:39;2025:2;2017:6;2013:15;2046:1;2056:502;2070:6;2067:1;2064:13;2056:502;;;2135:22;;;2159:66;2131:95;2119:108;;2250:13;;2305:9;;2298:17;2291:25;2276:41;;2356:11;;2350:18;2388:15;;;2381:27;;;2431:47;2462:15;;;2350:18;2431:47;:::i;:::-;2536:12;;;;2421:57;-1:-1:-1;;2501:15:267;;;;2092:1;2085:9;2056:502;;;-1:-1:-1;2575:6:267;;1486:1101;-1:-1:-1;;;;;;;;1486:1101:267:o;2592:399::-;2690:6;2743:2;2731:9;2722:7;2718:23;2714:32;2711:52;;;2759:1;2756;2749:12;2711:52;2799:9;2786:23;2832:18;2824:6;2821:30;2818:50;;;2864:1;2861;2854:12;2818:50;2887:22;;2943:3;2925:16;;;2921:26;2918:46;;;2960:1;2957;2950:12;2918:46;2983:2;2592:399;-1:-1:-1;;;2592:399:267:o;3188:154::-;-1:-1:-1;;;;;3267:5:267;3263:54;3256:5;3253:65;3243:93;;3332:1;3329;3322:12;3347:134;3415:20;;3444:31;3415:20;3444:31;:::i;:::-;3347:134;;;:::o;3486:247::-;3545:6;3598:2;3586:9;3577:7;3573:23;3569:32;3566:52;;;3614:1;3611;3604:12;3566:52;3653:9;3640:23;3672:31;3697:5;3672:31;:::i;3920:1333::-;4317:66;4309:6;4305:79;4294:9;4287:98;4268:4;4404:2;4442:3;4437:2;4426:9;4422:18;4415:31;4469:45;4509:3;4498:9;4494:19;4486:6;4469:45;:::i;:::-;4562:9;4554:6;4550:22;4545:2;4534:9;4530:18;4523:50;4596:32;4621:6;4613;4596:32;:::i;:::-;4659:2;4644:18;;4637:34;;;-1:-1:-1;;;;;4708:55:267;;4702:3;4687:19;;4680:84;4795:3;4780:19;;4773:35;;;4845:22;;;4839:3;4824:19;;4817:51;4917:13;;4939:22;;;4989:2;5015:15;;;;-1:-1:-1;4977:15:267;;;;-1:-1:-1;5058:169:267;5072:6;5069:1;5066:13;5058:169;;;5133:13;;5121:26;;5202:15;;;;5167:12;;;;5094:1;5087:9;5058:169;;;-1:-1:-1;5244:3:267;;3920:1333;-1:-1:-1;;;;;;;;;;;;3920:1333:267:o;5258:184::-;-1:-1:-1;;;5307:1:267;5300:88;5407:4;5404:1;5397:15;5431:4;5428:1;5421:15;5447:248;5514:2;5508:9;5556:4;5544:17;;5591:18;5576:34;;5612:22;;;5573:62;5570:88;;;5638:18;;:::i;:::-;5674:2;5667:22;5447:248;:::o;5700:167::-;5767:20;;5827:14;5816:26;;5806:37;;5796:65;;5857:1;5854;5847:12;5872:777;5914:5;5967:3;5960:4;5952:6;5948:17;5944:27;5934:55;;5985:1;5982;5975:12;5934:55;6021:6;6008:20;6047:18;6084:2;6080;6077:10;6074:36;;;6090:18;;:::i;:::-;6224:2;6218:9;6286:4;6278:13;;-1:-1:-1;;6274:22:267;;;6298:2;6270:31;6266:40;6254:53;;;6322:18;;;6342:22;;;6319:46;6316:72;;;6368:18;;:::i;:::-;6408:10;6404:2;6397:22;6443:2;6435:6;6428:18;6489:3;6482:4;6477:2;6469:6;6465:15;6461:26;6458:35;6455:55;;;6506:1;6503;6496:12;6455:55;6570:2;6563:4;6555:6;6551:17;6544:4;6536:6;6532:17;6519:54;6617:1;6610:4;6605:2;6597:6;6593:15;6589:26;6582:37;6637:6;6628:15;;;;;;5872:777;;;;:::o;6654:1100::-;6750:6;6803:2;6791:9;6782:7;6778:23;6774:32;6771:52;;;6819:1;6816;6809:12;6771:52;6859:9;6846:23;6888:18;6929:2;6921:6;6918:14;6915:34;;;6945:1;6942;6935:12;6915:34;6968:22;;;;7024:4;7006:16;;;7002:27;6999:47;;;7042:1;7039;7032:12;6999:47;7068:17;;:::i;:::-;7108:22;7127:2;7108:22;:::i;:::-;7101:5;7094:37;7163:31;7190:2;7186;7182:11;7163:31;:::i;:::-;7158:2;7151:5;7147:14;7140:55;7248:2;7244;7240:11;7227:25;7222:2;7215:5;7211:14;7204:49;7306:2;7302;7298:11;7285:25;7280:2;7273:5;7269:14;7262:49;7344:31;7370:3;7366:2;7362:12;7344:31;:::i;:::-;7338:3;7331:5;7327:15;7320:56;7422:3;7418:2;7414:12;7401:26;7452:2;7442:8;7439:16;7436:36;;;7468:1;7465;7458:12;7436:36;7505:44;7541:7;7530:8;7526:2;7522:17;7505:44;:::i;:::-;7499:3;7492:5;7488:15;7481:69;;7596:3;7592:2;7588:12;7575:26;7626:2;7616:8;7613:16;7610:36;;;7642:1;7639;7632:12;7610:36;7679:44;7715:7;7704:8;7700:2;7696:17;7679:44;:::i;:::-;7673:3;7662:15;;7655:69;-1:-1:-1;7666:5:267;6654:1100;-1:-1:-1;;;;;6654:1100:267:o;7941:638::-;8083:6;8091;8099;8152:2;8140:9;8131:7;8127:23;8123:32;8120:52;;;8168:1;8165;8158:12;8120:52;8208:9;8195:23;8241:18;8233:6;8230:30;8227:50;;;8273:1;8270;8263:12;8227:50;8312:89;8393:7;8384:6;8373:9;8369:22;8312:89;:::i;:::-;8420:8;;-1:-1:-1;8286:115:267;-1:-1:-1;;8505:2:267;8490:18;;8477:32;8518:31;8477:32;8518:31;:::i;:::-;8568:5;8558:15;;;7941:638;;;;;:::o;8584:184::-;-1:-1:-1;;;8633:1:267;8626:88;8733:4;8730:1;8723:15;8757:4;8754:1;8747:15;8773:387;8870:4;8928:11;8915:25;9018:66;9007:8;8991:14;8987:29;8983:102;8963:18;8959:127;8949:155;;9100:1;9097;9090:12;8949:155;9121:33;;;;;8773:387;-1:-1:-1;;8773:387:267:o;9497:580::-;9574:4;9580:6;9640:11;9627:25;-1:-1:-1;;9719:8:267;9703:14;9699:29;9695:102;9675:18;9671:127;9661:155;;9812:1;9809;9802:12;9661:155;9839:33;;9891:20;;;-1:-1:-1;9934:18:267;9923:30;;9920:50;;;9966:1;9963;9956:12;9920:50;9999:4;9987:17;;-1:-1:-1;10030:14:267;10026:27;;;10016:38;;10013:58;;;10067:1;10064;10057:12;10082:395;10293:6;10285;10280:3;10267:33;10363:2;10359:15;;;;10376:66;10355:88;10319:16;;10344:100;;;10468:2;10460:11;;10082:395;-1:-1:-1;10082:395:267:o;10482:287::-;10611:3;10649:6;10643:13;10665:66;10724:6;10719:3;10712:4;10704:6;10700:17;10665:66;:::i;10774:160::-;10839:20;;10895:13;;10888:21;10878:32;;10868:60;;10924:1;10921;10914:12;10939:180;10995:6;11048:2;11036:9;11027:7;11023:23;11019:32;11016:52;;;11064:1;11061;11054:12;11016:52;11087:26;11103:9;11087:26;:::i;11124:1279::-;11313:2;11302:9;11295:21;11276:4;11351:6;11338:20;11367:31;11392:5;11367:31;:::i;:::-;-1:-1:-1;;;;;11438:5:267;11434:54;11429:2;11418:9;11414:18;11407:82;;11539:32;11567:2;11559:6;11555:15;11539:32;:::i;:::-;11532:40;11525:48;11520:2;11509:9;11505:18;11498:76;11634:2;11626:6;11622:15;11609:29;-1:-1:-1;;11705:6:267;11689:14;11685:27;11681:100;11661:18;11657:125;11647:153;;11796:1;11793;11786:12;11647:153;11824:31;;11936:2;11923:16;;;11878:21;11962:18;11951:30;;11948:50;;;11994:1;11991;11984:12;11948:50;12043:6;12027:14;12023:27;12014:7;12010:41;12007:61;;;12064:1;12061;12054:12;12007:61;12106:4;12099;12088:9;12084:20;12077:34;12148:6;12142:3;12131:9;12127:19;12120:35;12207:6;12198:7;12192:3;12181:9;12177:19;12164:50;12264:1;12258:3;12249:6;12238:9;12234:22;12230:32;12223:43;12393:3;-1:-1:-1;;12318:2:267;12310:6;12306:15;12302:88;12291:9;12287:104;12283:114;12275:122;;;;11124:1279;;;;:::o;12408:395::-;12513:4;12571:11;12558:25;12661:66;12650:8;12634:14;12630:29;12626:102;12606:18;12602:127;12592:155;;12743:1;12740;12733:12;12808:279;12873:9;;;12894:10;;;12891:190;;;-1:-1:-1;;;12934:1:267;12927:88;13038:4;13035:1;13028:15;13066:4;13063:1;13056:15;13576:184;13634:6;13687:2;13675:9;13666:7;13662:23;13658:32;13655:52;;;13703:1;13700;13693:12;13655:52;13726:28;13744:9;13726:28;:::i;15221:271::-;15404:6;15396;15391:3;15378:33;15360:3;15430:16;;15455:13;;;15430:16;15221:271;-1:-1:-1;15221:271:267:o;15497:184::-;-1:-1:-1;;;15546:1:267;15539:88;15646:4;15643:1;15636:15;15670:4;15667:1;15660:15;15686:437;15765:1;15761:12;;;;15808;;;15829:61;;15883:4;15875:6;15871:17;15861:27;;15829:61;15936:2;15928:6;15925:14;15905:18;15902:38;15899:218;;-1:-1:-1;;;15970:1:267;15963:88;16074:4;16071:1;16064:15;16102:4;16099:1;16092:15;15899:218;;15686:437;;;:::o;16128:274::-;16168:1;16194;16184:189;;-1:-1:-1;;;16226:1:267;16219:88;16330:4;16327:1;16320:15;16358:4;16355:1;16348:15;16184:189;-1:-1:-1;16387:9:267;;16128:274::o",
    "linkReferences": {},
    "immutableReferences": {
      "35970": [
        {
          "start": 3605,
          "length": 32
        }
      ],
      "35972": [
        {
          "start": 3563,
          "length": 32
        }
      ],
      "35974": [
        {
          "start": 3521,
          "length": 32
        }
      ],
      "35976": [
        {
          "start": 3686,
          "length": 32
        }
      ],
      "35978": [
        {
          "start": 3726,
          "length": 32
        }
      ],
      "35981": [
        {
          "start": 1882,
          "length": 32
        }
      ],
      "35984": [
        {
          "start": 1932,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": "97259d9c",
    "eip712Domain()": "84b0196e",
    "execute((address,address,uint256,uint256,uint48,bytes,bytes))": "df905caf",
    "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": "ccf96b4a",
    "executeMulticall((address,bool,bytes)[])": "089168fe",
    "nonces(address)": "7ecebe00",
    "verify((address,address,uint256,uint256,uint48,bytes,bytes))": "19d8d38c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder_v1.SingleCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"CallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"createDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder_v1.SingleCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"executeMulticall\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder_v1.Result[]\",\"name\":\"results\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Inverter Network\",\"details\":\"Integrates {ERC2771Forwarder} and Context to manage and relay meta transactions.          It handles nonce management, signature verification, and ensures only trusted calls          are forwarded.\",\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"createDigest((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"The signature field of the given ForwardRequestData can be empty\",\"params\":{\"req\":\"The ForwardRequest you want to get the digest from\"},\"returns\":{\"digest\":\"The digest needed to create a signature for the request\"}},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"executeMulticall((address,bool,bytes)[])\":{\"params\":{\"calls\":\"Array of call structs that should be executed in the multicall\"},\"returns\":{\"results\":\"The return data of the calls that were executed\"}},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"}},\"title\":\"Meta-Transaction & Multicall Forwarder\",\"version\":1},\"userdoc\":{\"errors\":{\"CallFailed((address,bool,bytes))\":[{\"notice\":\"The request `from` doesn't match with the recovered `signer`.\"}]},\"kind\":\"user\",\"methods\":{\"createDigest((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"notice\":\"Creates a digest for the given ForwardRequestData\"},\"executeMulticall((address,bool,bytes)[])\":{\"notice\":\"Enables the execution of multiple calls in a single transaction\"}},\"notice\":\"This contract enables users to interact with smart contracts indirectly through          a trusted forwarder. It supports meta transactions, allowing transactions to be          sent by one party but signed and paid for by another. It also handles batch          transactions (multi-call), facilitating complex, multi-step interactions within a single          transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/forwarder/TransactionForwarder_v1.sol\":\"TransactionForwarder_v1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[\":@aut/=src/modules/authorizer/\",\":@ex/=src/external/\",\":@fm/=src/modules/fundingManager/\",\":@lm/=src/modules/logicModule/\",\":@lm_pc/=src/modules/logicModule/paymentClient/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@pp/=src/modules/paymentProcessor/\",\":@uma/=lib/protocol/packages/core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f\",\"dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK\"]},\"lib/openzeppelin-contracts/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314\",\"dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/external/forwarder/ITransactionForwarder_v1.sol\":{\"keccak256\":\"0x079d0bb7e4dea2b11a41953ae9d9f909bfd727293f82114d4c9016c3aa4e4719\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://af3546be6eea92f524056766685f94a80a61010d0be34ec29945505e2977ab1e\",\"dweb:/ipfs/QmbeUQyhU8jYxC5mD1oxMKB9JHR9Uc8z1ARQfBup51Bart\"]},\"src/external/forwarder/TransactionForwarder_v1.sol\":{\"keccak256\":\"0x07e1d3e829b79ef5f8ec3e120fb40836f0ba5e71418b7d5ce135a675c9f948fe\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b7c69e77c40d30214f48e8297e3257986e35fcc55ca042c7c87e030738991d56\",\"dweb:/ipfs/Qmafwzmom8nberqZbfiU1iLTxjNGm8M5CwWPtQ94yNnkAf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "struct ITransactionForwarder_v1.SingleCall",
              "name": "call",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "type": "error",
          "name": "CallFailed"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "deadline",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderExpiredRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderInvalidSigner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestedValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderMismatchedValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2771UntrustfulTarget"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "currentNonce",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidAccountNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutedForwardRequest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "createDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "digest",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [
            {
              "internalType": "struct ITransactionForwarder_v1.SingleCall[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeMulticall",
          "outputs": [
            {
              "internalType": "struct ITransactionForwarder_v1.Result[]",
              "name": "results",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "The signature field of the given ForwardRequestData can be empty",
            "params": {
              "req": "The ForwardRequest you want to get the digest from"
            },
            "returns": {
              "digest": "The digest needed to create a signature for the request"
            }
          },
          "eip712Domain()": {
            "details": "See {IERC-5267}."
          },
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}."
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "details": "Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting."
          },
          "executeMulticall((address,bool,bytes)[])": {
            "params": {
              "calls": "Array of call structs that should be executed in the multicall"
            },
            "returns": {
              "results": "The return data of the calls that were executed"
            }
          },
          "nonces(address)": {
            "details": "Returns the next unused nonce for an address."
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "notice": "Creates a digest for the given ForwardRequestData"
          },
          "executeMulticall((address,bool,bytes)[])": {
            "notice": "Enables the execution of multiple calls in a single transaction"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aut/=src/modules/authorizer/",
        "@ex/=src/external/",
        "@fm/=src/modules/fundingManager/",
        "@lm/=src/modules/logicModule/",
        "@lm_pc/=src/modules/logicModule/paymentClient/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "@pp/=src/modules/paymentProcessor/",
        "@uma/=lib/protocol/packages/core/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "protocol/=lib/protocol/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 2000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/external/forwarder/TransactionForwarder_v1.sol": "TransactionForwarder_v1"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
        "urls": [
          "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
          "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol": {
        "keccak256": "0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6",
        "urls": [
          "bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f",
          "dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/metatx/ERC2771Forwarder.sol": {
        "keccak256": "0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2",
        "urls": [
          "bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314",
          "dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
        "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
        "urls": [
          "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
          "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6",
        "urls": [
          "bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c",
          "dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf",
        "urls": [
          "bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c",
          "dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0",
        "urls": [
          "bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21",
          "dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
        "keccak256": "0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435",
        "urls": [
          "bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c",
          "dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "src/external/forwarder/ITransactionForwarder_v1.sol": {
        "keccak256": "0x079d0bb7e4dea2b11a41953ae9d9f909bfd727293f82114d4c9016c3aa4e4719",
        "urls": [
          "bzz-raw://af3546be6eea92f524056766685f94a80a61010d0be34ec29945505e2977ab1e",
          "dweb:/ipfs/QmbeUQyhU8jYxC5mD1oxMKB9JHR9Uc8z1ARQfBup51Bart"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/external/forwarder/TransactionForwarder_v1.sol": {
        "keccak256": "0x07e1d3e829b79ef5f8ec3e120fb40836f0ba5e71418b7d5ce135a675c9f948fe",
        "urls": [
          "bzz-raw://b7c69e77c40d30214f48e8297e3257986e35fcc55ca042c7c87e030738991d56",
          "dweb:/ipfs/Qmafwzmom8nberqZbfiU1iLTxjNGm8M5CwWPtQ94yNnkAf"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 102
}
