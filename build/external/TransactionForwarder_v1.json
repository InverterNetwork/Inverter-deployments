{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createDigest",
      "inputs": [
        {
          "name": "req",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "digest",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        {
          "name": "fields",
          "type": "bytes1",
          "internalType": "bytes1"
        },
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "version",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "chainId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "verifyingContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "extensions",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "executeBatch",
      "inputs": [
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "refundReceiver",
          "type": "address",
          "internalType": "address payable"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "executeMulticall",
      "inputs": [
        {
          "name": "calls",
          "type": "tuple[]",
          "internalType": "struct ITransactionForwarder_v1.SingleCall[]",
          "components": [
            {
              "name": "target",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "allowFailure",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "results",
          "type": "tuple[]",
          "internalType": "struct ITransactionForwarder_v1.Result[]",
          "components": [
            {
              "name": "success",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "returnData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "nonces",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verify",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "EIP712DomainChanged",
      "inputs": [],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutedForwardRequest",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "success",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "CallFailed",
      "inputs": [
        {
          "name": "call",
          "type": "tuple",
          "internalType": "struct ITransactionForwarder_v1.SingleCall",
          "components": [
            {
              "name": "target",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "allowFailure",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderExpiredRequest",
      "inputs": [
        {
          "name": "deadline",
          "type": "uint48",
          "internalType": "uint48"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderInvalidSigner",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderMismatchedValue",
      "inputs": [
        {
          "name": "requestedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "msgValue",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771UntrustfulTarget",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "FailedInnerCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAccountNonce",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "currentNonce",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x6101606040523480156200001257600080fd5b5060408051808201825260208082527f496e766572746572205472616e73616374696f6e466f727761726465725f763181830152825180840190935260018352603160f81b908301529081906200006b8260006200011a565b610120526200007c8160016200011a565b61014052815160208084019190912060e052815190820120610100524660a0526200010a60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525062000388565b60006020835110156200013a57620001328362000153565b90506200014d565b8162000147848262000246565b5060ff90505b92915050565b600080829050601f815111156200018a578260405163305a27a960e01b815260040162000181919062000312565b60405180910390fd5b8051620001978262000363565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001ca57607f821691505b602082108103620001eb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000241576000816000526020600020601f850160051c810160208610156200021c5750805b601f850160051c820191505b818110156200023d5782815560010162000228565b5050505b505050565b81516001600160401b038111156200026257620002626200019f565b6200027a81620002738454620001b5565b84620001f1565b602080601f831160018114620002b25760008415620002995750858301515b600019600386901b1c1916600185901b1785556200023d565b600085815260208120601f198616915b82811015620002e357888601518255948401946001909101908401620002c2565b5085821015620003025787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b81811015620003425785810183015185820160400152820162000324565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620001eb5760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051611665620003e360003960006106da015260006106a801526000610d5d01526000610d3501526000610c9001526000610cba01526000610ce401526116656000f3fe6080604052600436106100705760003560e01c806384b0196e1161004e57806384b0196e1461011f57806397259d9c14610147578063ccf96b4a14610167578063df905caf1461017c57600080fd5b8063089168fe1461007557806319d8d38c146100ab5780637ecebe00146100db575b600080fd5b34801561008157600080fd5b50610095610090366004610f99565b61018f565b6040516100a2919061102b565b60405180910390f35b3480156100b757600080fd5b506100cb6100c63660046110a3565b6103a1565b60405190151581526020016100a2565b3480156100e757600080fd5b506101116100f636600461110a565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100a2565b34801561012b57600080fd5b506101346103d3565b6040516100a29796959493929190611127565b34801561015357600080fd5b506101116101623660046112a2565b610419565b61017a61017536600461137a565b610432565b005b61017a61018a3660046110a3565b610534565b6060818067ffffffffffffffff8111156101ab576101ab6111c0565b6040519080825280602002602001820160405280156101f157816020015b6040805180820190915260008152606060208201528152602001906001900390816101c95790505b50915036606060005b8381101561039757868682818110610214576102146113d1565b905060200281019061022691906113e7565b925061023d610238602085018561110a565b61058f565b61027e5761024e602084018461110a565b60405163d2650cd160e01b81526001600160a01b0390911660048201523060248201526044015b60405180910390fd5b61028b6040840184611407565b3360405160200161029e9392919061144e565b60408051601f1981840301815291905291506000806102c0602086018661110a565b6001600160a01b0316846040516102d79190611474565b6000604051808303816000865af19150503d8060008114610314576040519150601f19603f3d011682016040523d82523d6000602084013e610319565b606091505b50915091508115801561033957506103376040860160208701611496565b155b15610359578460405163137bd2a360e21b815260040161027591906114b1565b6040518060400160405280831515815260200182815250878481518110610382576103826113d1565b602090810291909101015250506001016101fa565b5050505092915050565b6000806000806103b085610621565b509250925092508280156103c15750815b80156103ca5750805b95945050505050565b6000606080600080600060606103e76106a1565b6103ef6106d3565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b600061042c61042783610700565b6107e2565b92915050565b6001600160a01b03811615600080805b858110156104f25786868281811061045c5761045c6113d1565b905060200281019061046e919061155b565b61047c906040013584611571565b925060006104ad888884818110610495576104956113d1565b90506020028101906104a7919061155b565b8661080f565b9050806104e9578787838181106104c6576104c66113d1565b90506020028101906104d8919061155b565b6104e6906040013584611571565b92505b50600101610442565b5034821461051c576040516370647f7960e01b815260048101839052346024820152604401610275565b801561052c5761052c84826109c6565b505050505050565b8060400135341461056457604080516370647f7960e01b8152908201356004820152346024820152604401610275565b61056f81600161080f565b61058c57604051630a12f52160e11b815260040160405180910390fd5b50565b604051306024820152600090819060440160408051601f19818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663572b6c0560e01b17815282519293506000928392839290918391895afa92503d9150600051905082801561060b575060208210155b80156106175750600081115b9695505050505050565b60008060008060008061063387610a62565b909250905061064b6102386040890160208a0161110a565b4261065c60a08a0160808b01611592565b65ffffffffffff161015838015610690575061067b60208a018a61110a565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b60606106ce7f00000000000000000000000000000000000000000000000000000000000000006000610bd7565b905090565b60606106ce7f00000000000000000000000000000000000000000000000000000000000000006001610bd7565b60007f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac826000015183602001518460400151856060015161075a87600001516001600160a01b031660009081526002602052604090205490565b608088015160a089015180516020918201206040516107c59998979695949392019788526001600160a01b0396871660208901529490951660408701526060860192909252608085015260a084015265ffffffffffff9190911660c083015260e08201526101000190565b604051602081830303815290604052805190602001209050919050565b600061042c6107ef610c83565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080600061082087610621565b935093509350935085156108bb57836108435761024e604088016020890161110a565b8261087c5761085860a0880160808901611592565b604051634a777ac560e11b815265ffffffffffff9091166004820152602401610275565b816108bb578061088f602089018961110a565b604051636422d02b60e11b81526001600160a01b03928316600482015291166024820152604401610275565b8380156108c55750815b80156108ce5750825b15610397576001600160a01b038116600090815260026020526040812080546001810190915590506060880135600061090d60408b0160208c0161110a565b905060408a0135600061092360a08d018d611407565b61093060208f018f61110a565b6040516020016109429392919061144e565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610971818e610dae565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505050505092915050565b804710156109e95760405163cd78605960e01b8152306004820152602401610275565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a36576040519150601f19603f3d011682016040523d82523d6000602084013e610a3b565b606091505b5050905080610a5d57604051630a12f52160e11b815260040160405180910390fd5b505050565b6000808080610bb1610a7760c0870187611407565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bab92507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610adf905060208a018a61110a565b610aef60408b0160208c0161110a565b60408b013560608c0135610b096100f660208f018f61110a565b8d6080016020810190610b1c9190611592565b8e8060a00190610b2c9190611407565b604051610b3a9291906115ad565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e082015261010081019190915261012001604051602081830303815290604052805190602001206107e2565b90610dca565b5090925090506000816003811115610bcb57610bcb6115bd565b14959194509092505050565b606060ff8314610bf157610bea83610e17565b905061042c565b818054610bfd906115d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610c29906115d3565b8015610c765780601f10610c4b57610100808354040283529160200191610c76565b820191906000526020600020905b815481529060010190602001808311610c5957829003601f168201915b5050505050905092915050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610cdc57507f000000000000000000000000000000000000000000000000000000000000000046145b15610d0657507f000000000000000000000000000000000000000000000000000000000000000090565b6106ce604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610dbd603f606083013561160d565b821015610dc657fe5b5050565b60008060008351604103610e045760208401516040850151606086015160001a610df688828585610e56565b955095509550505050610e10565b50508151600091506002905b9250925092565b60606000610e2483610f25565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610e915750600091506003905082610f1b565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610ee5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f1157506000925060019150829050610f1b565b9250600091508190505b9450945094915050565b600060ff8216601f81111561042c57604051632cd44ac360e21b815260040160405180910390fd5b60008083601f840112610f5f57600080fd5b50813567ffffffffffffffff811115610f7757600080fd5b6020830191508360208260051b8501011115610f9257600080fd5b9250929050565b60008060208385031215610fac57600080fd5b823567ffffffffffffffff811115610fc357600080fd5b610fcf85828601610f4d565b90969095509350505050565b60005b83811015610ff6578181015183820152602001610fde565b50506000910152565b60008151808452611017816020860160208601610fdb565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b8381101561109557888303603f19018552815180511515845287015187840187905261108287850182610fff565b9588019593505090860190600101611054565b509098975050505050505050565b6000602082840312156110b557600080fd5b813567ffffffffffffffff8111156110cc57600080fd5b820160e081850312156110de57600080fd5b9392505050565b6001600160a01b038116811461058c57600080fd5b8035611105816110e5565b919050565b60006020828403121561111c57600080fd5b81356110de816110e5565b60ff60f81b881681526000602060e0602084015261114860e084018a610fff565b838103604085015261115a818a610fff565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b818110156111ae57835183529284019291840191600101611192565b50909c9b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156111f9576111f96111c0565b60405290565b803565ffffffffffff8116811461110557600080fd5b600082601f83011261122657600080fd5b813567ffffffffffffffff80821115611241576112416111c0565b604051601f8301601f19908116603f01168101908282118183101715611269576112696111c0565b8160405283815286602085880101111561128257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156112b457600080fd5b813567ffffffffffffffff808211156112cc57600080fd5b9083019060e082860312156112e057600080fd5b6112e86111d6565b6112f1836110fa565b81526112ff602084016110fa565b60208201526040830135604082015260608301356060820152611324608084016111ff565b608082015260a08301358281111561133b57600080fd5b61134787828601611215565b60a08301525060c08301358281111561135f57600080fd5b61136b87828601611215565b60c08301525095945050505050565b60008060006040848603121561138f57600080fd5b833567ffffffffffffffff8111156113a657600080fd5b6113b286828701610f4d565b90945092505060208401356113c6816110e5565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126113fd57600080fd5b9190910192915050565b6000808335601e1984360301811261141e57600080fd5b83018035915067ffffffffffffffff82111561143957600080fd5b602001915036819003821315610f9257600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b600082516113fd818460208701610fdb565b8035801515811461110557600080fd5b6000602082840312156114a857600080fd5b6110de82611486565b60208152600082356114c2816110e5565b6001600160a01b0381166020840152506114de60208401611486565b151560408301526040830135601e198436030181126114fc57600080fd5b830160208101903567ffffffffffffffff81111561151957600080fd5b80360382131561152857600080fd5b606080850152806080850152808260a0860137600060a0828601015260a0601f19601f8301168501019250505092915050565b6000823560de198336030181126113fd57600080fd5b8082018082111561042c57634e487b7160e01b600052601160045260246000fd5b6000602082840312156115a457600080fd5b6110de826111ff565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806115e757607f821691505b60208210810361160757634e487b7160e01b600052602260045260246000fd5b50919050565b60008261162a57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220df245d94ef0321ad4dd699e3e87a58be71d3fddf71fe51fd44e2f54fe14285de64736f6c63430008170033",
    "sourceMap": "1363:4232:84:-:0;;;1642:69;;;;;;;;;-1:-1:-1;4315:52:38;;;;;;;;;;;;;;;;;3328:431:65;;;;;;;;;;;-1:-1:-1;;;3328:431:65;;;;4315:52:38;;;3401:45:65;4315:52:38;-1:-1:-1;3401:30:65;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;2985:25:265;3026:18;;;3019:34;;;;3069:18;;;3062:34;4255:13:65;3112:18:265;;;3105:34;4278:4:65;3155:19:265;;;3148:61;4168:7:65;;2957:19:265;;4204:80:65;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:65;3725:27;;-1:-1:-1;1363:4232:84;;2914:340:61;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;:20::i;:::-;3077:27;;;;3033:215;3161:5;3135:46;3176:5;3161;3135:46;:::i;:::-;-1:-1:-1;1390:66:61;;-1:-1:-1;3033:215:61;2914:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:61;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:61:o;14:127:265:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:265;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:265;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:265;;;2571:26;2522:89;-1:-1:-1;;1333:1:265;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:265;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:265;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:265;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:265:o;3220:548::-;3332:4;3361:2;3390;3379:9;3372:21;3422:6;3416:13;3465:6;3460:2;3449:9;3445:18;3438:34;3490:1;3500:140;3514:6;3511:1;3508:13;3500:140;;;3609:14;;;3605:23;;3599:30;3575:17;;;3594:2;3571:26;3564:66;3529:10;;3500:140;;;3504:3;3689:1;3684:2;3675:6;3664:9;3660:22;3656:31;3649:42;3759:2;3752;3748:7;3743:2;3735:6;3731:15;3727:29;3716:9;3712:45;3708:54;3700:62;;;;3220:548;;;;:::o;3773:297::-;3891:12;;3938:4;3927:16;;;3921:23;;3891:12;3956:16;;3953:111;;;-1:-1:-1;;4030:4:265;4026:17;;;;4023:1;4019:25;4015:38;4004:50;;3773:297;-1:-1:-1;3773:297:265:o;:::-;1363:4232:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100705760003560e01c806384b0196e1161004e57806384b0196e1461011f57806397259d9c14610147578063ccf96b4a14610167578063df905caf1461017c57600080fd5b8063089168fe1461007557806319d8d38c146100ab5780637ecebe00146100db575b600080fd5b34801561008157600080fd5b50610095610090366004610f99565b61018f565b6040516100a2919061102b565b60405180910390f35b3480156100b757600080fd5b506100cb6100c63660046110a3565b6103a1565b60405190151581526020016100a2565b3480156100e757600080fd5b506101116100f636600461110a565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100a2565b34801561012b57600080fd5b506101346103d3565b6040516100a29796959493929190611127565b34801561015357600080fd5b506101116101623660046112a2565b610419565b61017a61017536600461137a565b610432565b005b61017a61018a3660046110a3565b610534565b6060818067ffffffffffffffff8111156101ab576101ab6111c0565b6040519080825280602002602001820160405280156101f157816020015b6040805180820190915260008152606060208201528152602001906001900390816101c95790505b50915036606060005b8381101561039757868682818110610214576102146113d1565b905060200281019061022691906113e7565b925061023d610238602085018561110a565b61058f565b61027e5761024e602084018461110a565b60405163d2650cd160e01b81526001600160a01b0390911660048201523060248201526044015b60405180910390fd5b61028b6040840184611407565b3360405160200161029e9392919061144e565b60408051601f1981840301815291905291506000806102c0602086018661110a565b6001600160a01b0316846040516102d79190611474565b6000604051808303816000865af19150503d8060008114610314576040519150601f19603f3d011682016040523d82523d6000602084013e610319565b606091505b50915091508115801561033957506103376040860160208701611496565b155b15610359578460405163137bd2a360e21b815260040161027591906114b1565b6040518060400160405280831515815260200182815250878481518110610382576103826113d1565b602090810291909101015250506001016101fa565b5050505092915050565b6000806000806103b085610621565b509250925092508280156103c15750815b80156103ca5750805b95945050505050565b6000606080600080600060606103e76106a1565b6103ef6106d3565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b600061042c61042783610700565b6107e2565b92915050565b6001600160a01b03811615600080805b858110156104f25786868281811061045c5761045c6113d1565b905060200281019061046e919061155b565b61047c906040013584611571565b925060006104ad888884818110610495576104956113d1565b90506020028101906104a7919061155b565b8661080f565b9050806104e9578787838181106104c6576104c66113d1565b90506020028101906104d8919061155b565b6104e6906040013584611571565b92505b50600101610442565b5034821461051c576040516370647f7960e01b815260048101839052346024820152604401610275565b801561052c5761052c84826109c6565b505050505050565b8060400135341461056457604080516370647f7960e01b8152908201356004820152346024820152604401610275565b61056f81600161080f565b61058c57604051630a12f52160e11b815260040160405180910390fd5b50565b604051306024820152600090819060440160408051601f19818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663572b6c0560e01b17815282519293506000928392839290918391895afa92503d9150600051905082801561060b575060208210155b80156106175750600081115b9695505050505050565b60008060008060008061063387610a62565b909250905061064b6102386040890160208a0161110a565b4261065c60a08a0160808b01611592565b65ffffffffffff161015838015610690575061067b60208a018a61110a565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b60606106ce7f00000000000000000000000000000000000000000000000000000000000000006000610bd7565b905090565b60606106ce7f00000000000000000000000000000000000000000000000000000000000000006001610bd7565b60007f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac826000015183602001518460400151856060015161075a87600001516001600160a01b031660009081526002602052604090205490565b608088015160a089015180516020918201206040516107c59998979695949392019788526001600160a01b0396871660208901529490951660408701526060860192909252608085015260a084015265ffffffffffff9190911660c083015260e08201526101000190565b604051602081830303815290604052805190602001209050919050565b600061042c6107ef610c83565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080600061082087610621565b935093509350935085156108bb57836108435761024e604088016020890161110a565b8261087c5761085860a0880160808901611592565b604051634a777ac560e11b815265ffffffffffff9091166004820152602401610275565b816108bb578061088f602089018961110a565b604051636422d02b60e11b81526001600160a01b03928316600482015291166024820152604401610275565b8380156108c55750815b80156108ce5750825b15610397576001600160a01b038116600090815260026020526040812080546001810190915590506060880135600061090d60408b0160208c0161110a565b905060408a0135600061092360a08d018d611407565b61093060208f018f61110a565b6040516020016109429392919061144e565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610971818e610dae565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505050505092915050565b804710156109e95760405163cd78605960e01b8152306004820152602401610275565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a36576040519150601f19603f3d011682016040523d82523d6000602084013e610a3b565b606091505b5050905080610a5d57604051630a12f52160e11b815260040160405180910390fd5b505050565b6000808080610bb1610a7760c0870187611407565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bab92507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610adf905060208a018a61110a565b610aef60408b0160208c0161110a565b60408b013560608c0135610b096100f660208f018f61110a565b8d6080016020810190610b1c9190611592565b8e8060a00190610b2c9190611407565b604051610b3a9291906115ad565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e082015261010081019190915261012001604051602081830303815290604052805190602001206107e2565b90610dca565b5090925090506000816003811115610bcb57610bcb6115bd565b14959194509092505050565b606060ff8314610bf157610bea83610e17565b905061042c565b818054610bfd906115d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610c29906115d3565b8015610c765780601f10610c4b57610100808354040283529160200191610c76565b820191906000526020600020905b815481529060010190602001808311610c5957829003601f168201915b5050505050905092915050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610cdc57507f000000000000000000000000000000000000000000000000000000000000000046145b15610d0657507f000000000000000000000000000000000000000000000000000000000000000090565b6106ce604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610dbd603f606083013561160d565b821015610dc657fe5b5050565b60008060008351604103610e045760208401516040850151606086015160001a610df688828585610e56565b955095509550505050610e10565b50508151600091506002905b9250925092565b60606000610e2483610f25565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610e915750600091506003905082610f1b565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610ee5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f1157506000925060019150829050610f1b565b9250600091508190505b9450945094915050565b600060ff8216601f81111561042c57604051632cd44ac360e21b815260040160405180910390fd5b60008083601f840112610f5f57600080fd5b50813567ffffffffffffffff811115610f7757600080fd5b6020830191508360208260051b8501011115610f9257600080fd5b9250929050565b60008060208385031215610fac57600080fd5b823567ffffffffffffffff811115610fc357600080fd5b610fcf85828601610f4d565b90969095509350505050565b60005b83811015610ff6578181015183820152602001610fde565b50506000910152565b60008151808452611017816020860160208601610fdb565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b8381101561109557888303603f19018552815180511515845287015187840187905261108287850182610fff565b9588019593505090860190600101611054565b509098975050505050505050565b6000602082840312156110b557600080fd5b813567ffffffffffffffff8111156110cc57600080fd5b820160e081850312156110de57600080fd5b9392505050565b6001600160a01b038116811461058c57600080fd5b8035611105816110e5565b919050565b60006020828403121561111c57600080fd5b81356110de816110e5565b60ff60f81b881681526000602060e0602084015261114860e084018a610fff565b838103604085015261115a818a610fff565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b818110156111ae57835183529284019291840191600101611192565b50909c9b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156111f9576111f96111c0565b60405290565b803565ffffffffffff8116811461110557600080fd5b600082601f83011261122657600080fd5b813567ffffffffffffffff80821115611241576112416111c0565b604051601f8301601f19908116603f01168101908282118183101715611269576112696111c0565b8160405283815286602085880101111561128257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156112b457600080fd5b813567ffffffffffffffff808211156112cc57600080fd5b9083019060e082860312156112e057600080fd5b6112e86111d6565b6112f1836110fa565b81526112ff602084016110fa565b60208201526040830135604082015260608301356060820152611324608084016111ff565b608082015260a08301358281111561133b57600080fd5b61134787828601611215565b60a08301525060c08301358281111561135f57600080fd5b61136b87828601611215565b60c08301525095945050505050565b60008060006040848603121561138f57600080fd5b833567ffffffffffffffff8111156113a657600080fd5b6113b286828701610f4d565b90945092505060208401356113c6816110e5565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126113fd57600080fd5b9190910192915050565b6000808335601e1984360301811261141e57600080fd5b83018035915067ffffffffffffffff82111561143957600080fd5b602001915036819003821315610f9257600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b600082516113fd818460208701610fdb565b8035801515811461110557600080fd5b6000602082840312156114a857600080fd5b6110de82611486565b60208152600082356114c2816110e5565b6001600160a01b0381166020840152506114de60208401611486565b151560408301526040830135601e198436030181126114fc57600080fd5b830160208101903567ffffffffffffffff81111561151957600080fd5b80360382131561152857600080fd5b606080850152806080850152808260a0860137600060a0828601015260a0601f19601f8301168501019250505092915050565b6000823560de198336030181126113fd57600080fd5b8082018082111561042c57634e487b7160e01b600052601160045260246000fd5b6000602082840312156115a457600080fd5b6110de826111ff565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806115e757607f821691505b60208210810361160757634e487b7160e01b600052602260045260246000fd5b50919050565b60008261162a57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220df245d94ef0321ad4dd699e3e87a58be71d3fddf71fe51fd44e2f54fe14285de64736f6c63430008170033",
    "sourceMap": "1363:4232:84:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:1177;;;;;;;;;;-1:-1:-1;2225:1177:84;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4845:244:38;;;;;;;;;;-1:-1:-1;4845:244:38;;;;;:::i;:::-;;:::i;:::-;;;3043:14:265;;3036:22;3018:41;;3006:2;2991:18;4845:244:38;2878:187:265;538:107:60;;;;;;;;;;-1:-1:-1;538:107:60;;;;;:::i;:::-;-1:-1:-1;;;;;624:14:60;598:7;624:14;;;:7;:14;;;;;;;538:107;;;;3766:25:265;;;3754:2;3739:18;538:107:60;3620:177:265;5144:557:65;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1884:181:84:-;;;;;;;;;;-1:-1:-1;1884:181:84;;;;;:::i;:::-;;:::i;7519:1264:38:-;;;;;;:::i;:::-;;:::i;:::-;;5605:513;;;;;;:::i;:::-;;:::i;2225:1177:84:-;2314:23;2367:5;;2399:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2399:20:84;;;;;;;;;;;;;;;;2389:30;;2430:25;2465:17;2538:6;2533:863;2554:6;2550:1;:10;2533:863;;;2589:5;;2595:1;2589:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2581:16;-1:-1:-1;2681:33:84;2701:12;;;;2581:16;2701:12;:::i;:::-;2681:19;:33::i;:::-;2676:132;;2765:12;;;;:5;:12;:::i;:::-;2741:52;;-1:-1:-1;;;2741:52:84;;-1:-1:-1;;;;;9015:15:265;;;2741:52:84;;;8997:34:265;2787:4:84;9047:18:265;;;9040:43;8909:18;;2741:52:84;;;;;;;;2676:132;2984:14;;;;:5;:14;:::i;:::-;735:10:58;2967:46:84;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2967:46:84;;;;;;;;;;-1:-1:-1;3056:12:84;;3097;2967:46;3097:12;;:5;:12;:::i;:::-;-1:-1:-1;;;;;3097:17:84;3115:4;3097:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3055:65;;;;3206:7;3205:8;:31;;;;-1:-1:-1;3218:18:84;;;;;;;;:::i;:::-;3217:19;3205:31;3201:94;;;3274:5;3263:17;;-1:-1:-1;;;3263:17:84;;;;;;;;:::i;3201:94::-;3358:27;;;;;;;;3365:7;3358:27;;;;;;3374:10;3358:27;;;3345:7;3353:1;3345:10;;;;;;;;:::i;:::-;;;;;;;;;;:40;-1:-1:-1;;2562:3:84;;2533:863;;;;2343:1059;;;2225:1177;;;;:::o;4845:244:38:-;4927:4;4944:23;4969:11;4982:16;5004:18;5014:7;5004:9;:18::i;:::-;4943:79;;;;;;;5039:18;:28;;;;;5061:6;5039:28;:43;;;;;5071:11;5039:43;5032:50;4845:244;-1:-1:-1;;;;;4845:244:38:o;5144:557:65:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:65;;;-1:-1:-1;5482:212:65;;-1:-1:-1;5590:13:65;;-1:-1:-1;5625:4:65;;-1:-1:-1;5652:1:65;-1:-1:-1;5668:16:65;-1:-1:-1;5482:212:65;-1:-1:-1;5144:557:65:o;1884:181:84:-;1984:14;2021:37;2038:19;2053:3;2038:14;:19::i;:::-;2021:16;:37::i;:::-;2014:44;1884:181;-1:-1:-1;;1884:181:84:o;7519:1264:38:-;-1:-1:-1;;;;;7682:28:38;;;7668:11;;;7782:251;7798:19;;;7782:251;;;7855:8;;7864:1;7855:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7838:34;;7855:17;;;7838:34;;:::i;:::-;;;7886:12;7901:29;7910:8;;7919:1;7910:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7923:6;7901:8;:29::i;:::-;7886:44;;7949:7;7944:79;;7991:8;;8000:1;7991:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7976:32;;7991:17;;;7976:32;;:::i;:::-;;;7944:79;-1:-1:-1;7819:3:38;;7782:251;;;;8186:9;8169:13;:26;8165:121;;8218:57;;-1:-1:-1;;;8218:57:38;;;;;12536:25:265;;;8265:9:38;12577:18:265;;;12570:34;12509:18;;8218:57:38;12362:248:265;8165:121:38;8453:16;;8449:328;;8720:46;8738:14;8754:11;8720:17;:46::i;:::-;7658:1125;;;7519:1264;;;:::o;5605:513::-;5911:7;:13;;;5898:9;:26;5894:121;;5979:13;5947:57;;-1:-1:-1;;;5947:57:38;;5979:13;;;;5947:57;;;12536:25:265;5994:9:38;12577:18:265;;;12570:34;12509:18;;5947:57:38;12362:248:265;5894:121:38;6030:23;6039:7;6048:4;6030:8;:23::i;:::-;6025:87;;6076:25;;-1:-1:-1;;;6076:25:38;;;;;;;;;;;6025:87;5605:513;:::o;4328:1265:84:-;4452:66;;4511:4;4452:66;;;12761:74:265;4395:4:84;;;;12734:18:265;;4452:66:84;;;-1:-1:-1;;4452:66:84;;;;;;;;;;;;;;;;;-1:-1:-1;;;4452:66:84;;;5345:20;;4452:66;;-1:-1:-1;;;;;;;4452:66:84;;-1:-1:-1;;5271:6:84;5244:5;5212:220;5185:247;;5459:16;5445:30;;5509:1;5503:8;5488:23;;5538:7;:29;;;;;5563:4;5549:10;:18;;5538:29;:48;;;;;5585:1;5571:11;:15;5538:48;5531:55;4328:1265;-1:-1:-1;;;;;;4328:1265:84:o;8967:457:38:-;9068:23;9093:11;9106:16;9124:14;9151:12;9165:17;9186:37;9215:7;9186:28;:37::i;:::-;9150:73;;-1:-1:-1;9150:73:38;-1:-1:-1;9255:30:38;9274:10;;;;;;;;:::i;9255:30::-;9319:15;9299:16;;;;;;;;:::i;:::-;:35;;;;9348:7;:36;;;;-1:-1:-1;9372:12:38;;;;:7;:12;:::i;:::-;-1:-1:-1;;;;;9359:25:38;:9;-1:-1:-1;;;;;9359:25:38;;9348:36;9234:183;;-1:-1:-1;9234:183:38;-1:-1:-1;9234:183:38;-1:-1:-1;9398:9:38;-1:-1:-1;;8967:457:38;;;;;:::o;6021:126:65:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;3729:459:84:-;3848:7;3070:141:38;3972:3:84;:8;;;3998:3;:6;;;4022:3;:9;;;4049:3;:7;;;4074:16;4081:3;:8;;;-1:-1:-1;;;;;624:14:60;598:7;624:14;;;:7;:14;;;;;;;538:107;4074:16:84;4108:12;;;;4148:8;;;;4138:19;;;;;;;3901:270;;;;;;;;;;4108:12;3901:270;13376:25:265;;;-1:-1:-1;;;;;13498:15:265;;;13493:2;13478:18;;13471:43;13550:15;;;;13545:2;13530:18;;13523:43;13597:2;13582:18;;13575:34;;;;13640:3;13625:19;;13618:35;13684:3;13669:19;;13662:35;13746:14;13734:27;;;;13728:3;13713:19;;13706:56;13793:3;13778:19;;13771:35;13363:3;13348:19;;13035:777;3901:270:84;;;;;;;;;;;;;3878:303;;;;;;3871:310;;3729:459;;;:::o;4917:176:65:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3555:4:66;3549:11;-1:-1:-1;;;3573:23:66;;3625:4;3616:14;;3609:39;;;;3677:4;3668:14;;3661:34;3733:4;3718:20;;;3353:401;11009:1643:38;11138:12;11163:23;11188:11;11201:16;11219:14;11237:18;11247:7;11237:9;:18::i;:::-;11162:93;;;;;;;;11453:19;11449:402;;;11493:18;11488:115;;11562:10;;;;;;;;:::i;11488:115::-;11622:6;11617:101;;11686:16;;;;;;;;:::i;:::-;11655:48;;-1:-1:-1;;;11655:48:38;;13991:14:265;13979:27;;;11655:48:38;;;13961:46:265;13934:18;;11655:48:38;13817:196:265;11617:101:38;11737:11;11732:109;;11805:6;11813:12;;;;:7;:12;:::i;:::-;11775:51;;-1:-1:-1;;;11775:51:38;;-1:-1:-1;;;;;9015:15:265;;;11775:51:38;;;8997:34:265;9067:15;;9047:18;;;9040:43;8909:18;;11775:51:38;8762:327:265;11732:109:38;11938:18;:33;;;;;11960:11;11938:33;:43;;;;;11975:6;11938:43;11934:712;;;-1:-1:-1;;;;;1121:14:60;;12082:20:38;1121:14:60;;;:7;:14;;;;;:16;;;;;;;;12082:40:38;-1:-1:-1;12154:11:38;;;;12137:14;12192:10;;;;;;;;:::i;:::-;12179:23;-1:-1:-1;12232:13:38;;;;12216;12296:12;;;;12232:7;12296:12;:::i;:::-;12310;;;;:7;:12;:::i;:::-;12279:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12259:64;;12338:15;12463:1;12460;12453:4;12447:11;12440:4;12434;12430:15;12423:5;12419:2;12411:6;12406:59;12395:70;;12493:5;12482:16;;12526:36;12545:7;12554;12526:18;:36::i;:::-;12582:53;;;14186:25:265;;;14254:14;;14247:22;14242:2;14227:18;;14220:50;-1:-1:-1;;;;;12582:53:38;;;;;14159:18:265;12582:53:38;;;;;;;11983:663;;;;;;11152:1500;;;;11009:1643;;;;:::o;1531:331:57:-;1640:6;1616:21;:30;1612:109;;;1669:41;;-1:-1:-1;;;1669:41:57;;1704:4;1669:41;;;12761:74:265;12734:18;;1669:41:57;12615:226:265;1612:109:57;1732:12;1750:9;-1:-1:-1;;;;;1750:14:57;1772:6;1750:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;-1:-1:-1;;;1828:17:57;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;9716:709:38:-;9836:4;;;;9909:445;10336:17;;;;:7;:17;:::i;:::-;9909:445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9909:415:38;;-1:-1:-1;3070:141:38;;-1:-1:-1;10045:12:38;;-1:-1:-1;10045:12:38;;;:7;:12;:::i;:::-;10079:10;;;;;;;;:::i;:::-;10111:13;;;;10146:11;;;;10179:20;10186:12;;;;10111:7;10186:12;:::i;10179:20::-;10221:7;:16;;;;;;;;;;:::i;:::-;10269:7;:12;;;;;;;;:::i;:::-;10259:23;;;;;;;:::i;:::-;;;;;;;;;;9966:334;;;13376:25:265;;;;-1:-1:-1;;;;;13498:15:265;;;13478:18;;;13471:43;13550:15;;;;13530:18;;;13523:43;13582:18;;;13575:34;;;;13625:19;;;13618:35;13669:19;;;13662:35;13746:14;13734:27;13713:19;;;13706:56;13778:19;;;13771:35;;;;13348:19;;9966:334:38;;;;;;;;;;;;9939:375;;;;;;9909:16;:415::i;:::-;:426;;:445::i;:::-;-1:-1:-1;9861:493:38;;-1:-1:-1;9861:493:38;-1:-1:-1;10380:26:38;10373:3;:33;;;;;;;;:::i;:::-;;;10408:9;;-1:-1:-1;9716:709:38;;-1:-1:-1;;;9716:709:38:o;3385:267:61:-;3479:13;1390:66;3508:46;;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;:::o;3845:262:65:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:65;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:65;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;15765:25:265;4226:11:65;15806:18:265;;;15799:34;;;;4239:14:65;15849:18:265;;;15842:34;4255:13:65;15892:18:265;;;15885:34;4278:4:65;15935:19:265;;;15928:84;4168:7:65;;15737:19:265;;4204:80:65;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;14599:2198:38;16351:16;16365:2;16351:11;;;;:16;:::i;:::-;16341:7;:26;16337:454;;;16758:9;16337:454;14599:2198;;:::o;2129:766:64:-;2210:7;2219:12;2233:7;2256:9;:16;2276:2;2256:22;2252:637;;2592:4;2577:20;;2571:27;2641:4;2626:20;;2620:27;2698:4;2683:20;;2677:27;2294:9;2669:36;2739:25;2750:4;2669:36;2571:27;2620;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;-1:-1:-1;;2860:16:64;;2811:1;;-1:-1:-1;2815:35:64;;2252:637;2129:766;;;;;:::o;2078:405:61:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:61;;2300:14;;;;;;;;;-1:-1:-1;;;2390:16:61;;;-1:-1:-1;2435:4:61;2426:14;;2419:28;;;;-1:-1:-1;2390:16:61;2078:405::o;5140:1530:64:-;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:64;;-1:-1:-1;6301:30:64;;-1:-1:-1;6333:1:64;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;16250:25:265;;;16323:4;16311:17;;16291:18;;;16284:45;;;;16345:18;;;16338:34;;;16388:18;;;16381:34;;;6457:24:64;;16222:19:265;;6457:24:64;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:64;;-1:-1:-1;;6457:24:64;;;-1:-1:-1;;;;;;;6495:20:64;;6491:113;;-1:-1:-1;6547:1:64;;-1:-1:-1;6551:29:64;;-1:-1:-1;6547:1:64;;-1:-1:-1;6531:62:64;;6491:113;6622:6;-1:-1:-1;6630:20:64;;-1:-1:-1;6630:20:64;;-1:-1:-1;5140:1530:64;;;;;;;;;:::o;2555:245:61:-;2616:7;2688:4;2652:40;;2715:2;2706:11;;2702:69;;;2740:20;;-1:-1:-1;;;2740:20:61;;;;;;;;;;;14:386:265;96:8;106:6;160:3;153:4;145:6;141:17;137:27;127:55;;178:1;175;168:12;127:55;-1:-1:-1;201:20:265;;244:18;233:30;;230:50;;;276:1;273;266:12;230:50;313:4;305:6;301:17;289:29;;373:3;366:4;356:6;353:1;349:14;341:6;337:27;333:38;330:47;327:67;;;390:1;387;380:12;327:67;14:386;;;;;:::o;405:487::-;522:6;530;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;639:9;626:23;672:18;664:6;661:30;658:50;;;704:1;701;694:12;658:50;743:89;824:7;815:6;804:9;800:22;743:89;:::i;:::-;851:8;;717:115;;-1:-1:-1;405:487:265;-1:-1:-1;;;;405:487:265:o;897:250::-;982:1;992:113;1006:6;1003:1;1000:13;992:113;;;1082:11;;;1076:18;1063:11;;;1056:39;1028:2;1021:10;992:113;;;-1:-1:-1;;1139:1:265;1121:16;;1114:27;897:250::o;1152:270::-;1193:3;1231:5;1225:12;1258:6;1253:3;1246:19;1274:76;1343:6;1336:4;1331:3;1327:14;1320:4;1313:5;1309:16;1274:76;:::i;:::-;1404:2;1383:15;-1:-1:-1;;1379:29:265;1370:39;;;;1411:4;1366:50;;1152:270;-1:-1:-1;;1152:270:265:o;1427:1042::-;1619:4;1648:2;1688;1677:9;1673:18;1718:2;1707:9;1700:21;1741:6;1776;1770:13;1807:6;1799;1792:22;1833:2;1823:12;;1866:2;1855:9;1851:18;1844:25;;1928:2;1918:6;1915:1;1911:14;1900:9;1896:30;1892:39;1966:2;1958:6;1954:15;1987:1;1997:443;2011:6;2008:1;2005:13;1997:443;;;2076:22;;;-1:-1:-1;;2072:36:265;2060:49;;2132:13;;2187:9;;2180:17;2173:25;2158:41;;2238:11;;2232:18;2270:15;;;2263:27;;;2313:47;2344:15;;;2232:18;2313:47;:::i;:::-;2418:12;;;;2303:57;-1:-1:-1;;2383:15:265;;;;2033:1;2026:9;1997:443;;;-1:-1:-1;2457:6:265;;1427:1042;-1:-1:-1;;;;;;;;1427:1042:265:o;2474:399::-;2572:6;2625:2;2613:9;2604:7;2600:23;2596:32;2593:52;;;2641:1;2638;2631:12;2593:52;2681:9;2668:23;2714:18;2706:6;2703:30;2700:50;;;2746:1;2743;2736:12;2700:50;2769:22;;2825:3;2807:16;;;2803:26;2800:46;;;2842:1;2839;2832:12;2800:46;2865:2;2474:399;-1:-1:-1;;;2474:399:265:o;3070:154::-;-1:-1:-1;;;;;3149:5:265;3145:54;3138:5;3135:65;3125:93;;3214:1;3211;3204:12;3229:134;3297:20;;3326:31;3297:20;3326:31;:::i;:::-;3229:134;;;:::o;3368:247::-;3427:6;3480:2;3468:9;3459:7;3455:23;3451:32;3448:52;;;3496:1;3493;3486:12;3448:52;3535:9;3522:23;3554:31;3579:5;3554:31;:::i;3802:1280::-;4208:3;4203;4199:13;4191:6;4187:26;4176:9;4169:45;4150:4;4233:2;4271:3;4266:2;4255:9;4251:18;4244:31;4298:45;4338:3;4327:9;4323:19;4315:6;4298:45;:::i;:::-;4391:9;4383:6;4379:22;4374:2;4363:9;4359:18;4352:50;4425:32;4450:6;4442;4425:32;:::i;:::-;4488:2;4473:18;;4466:34;;;-1:-1:-1;;;;;4537:55:265;;4531:3;4516:19;;4509:84;4624:3;4609:19;;4602:35;;;4674:22;;;4668:3;4653:19;;4646:51;4746:13;;4768:22;;;4818:2;4844:15;;;;-1:-1:-1;4806:15:265;;;;-1:-1:-1;4887:169:265;4901:6;4898:1;4895:13;4887:169;;;4962:13;;4950:26;;5031:15;;;;4996:12;;;;4923:1;4916:9;4887:169;;;-1:-1:-1;5073:3:265;;3802:1280;-1:-1:-1;;;;;;;;;;;;3802:1280:265:o;5087:127::-;5148:10;5143:3;5139:20;5136:1;5129:31;5179:4;5176:1;5169:15;5203:4;5200:1;5193:15;5219:248;5286:2;5280:9;5328:4;5316:17;;5363:18;5348:34;;5384:22;;;5345:62;5342:88;;;5410:18;;:::i;:::-;5446:2;5439:22;5219:248;:::o;5472:167::-;5539:20;;5599:14;5588:26;;5578:37;;5568:65;;5629:1;5626;5619:12;5644:718;5686:5;5739:3;5732:4;5724:6;5720:17;5716:27;5706:55;;5757:1;5754;5747:12;5706:55;5793:6;5780:20;5819:18;5856:2;5852;5849:10;5846:36;;;5862:18;;:::i;:::-;5937:2;5931:9;5905:2;5991:13;;-1:-1:-1;;5987:22:265;;;6011:2;5983:31;5979:40;5967:53;;;6035:18;;;6055:22;;;6032:46;6029:72;;;6081:18;;:::i;:::-;6121:10;6117:2;6110:22;6156:2;6148:6;6141:18;6202:3;6195:4;6190:2;6182:6;6178:15;6174:26;6171:35;6168:55;;;6219:1;6216;6209:12;6168:55;6283:2;6276:4;6268:6;6264:17;6257:4;6249:6;6245:17;6232:54;6330:1;6323:4;6318:2;6310:6;6306:15;6302:26;6295:37;6350:6;6341:15;;;;;;5644:718;;;;:::o;6367:1100::-;6463:6;6516:2;6504:9;6495:7;6491:23;6487:32;6484:52;;;6532:1;6529;6522:12;6484:52;6572:9;6559:23;6601:18;6642:2;6634:6;6631:14;6628:34;;;6658:1;6655;6648:12;6628:34;6681:22;;;;6737:4;6719:16;;;6715:27;6712:47;;;6755:1;6752;6745:12;6712:47;6781:17;;:::i;:::-;6821:22;6840:2;6821:22;:::i;:::-;6814:5;6807:37;6876:31;6903:2;6899;6895:11;6876:31;:::i;:::-;6871:2;6864:5;6860:14;6853:55;6961:2;6957;6953:11;6940:25;6935:2;6928:5;6924:14;6917:49;7019:2;7015;7011:11;6998:25;6993:2;6986:5;6982:14;6975:49;7057:31;7083:3;7079:2;7075:12;7057:31;:::i;:::-;7051:3;7044:5;7040:15;7033:56;7135:3;7131:2;7127:12;7114:26;7165:2;7155:8;7152:16;7149:36;;;7181:1;7178;7171:12;7149:36;7218:44;7254:7;7243:8;7239:2;7235:17;7218:44;:::i;:::-;7212:3;7205:5;7201:15;7194:69;;7309:3;7305:2;7301:12;7288:26;7339:2;7329:8;7326:16;7323:36;;;7355:1;7352;7345:12;7323:36;7392:44;7428:7;7417:8;7413:2;7409:17;7392:44;:::i;:::-;7386:3;7375:15;;7368:69;-1:-1:-1;7379:5:265;6367:1100;-1:-1:-1;;;;;6367:1100:265:o;7654:638::-;7796:6;7804;7812;7865:2;7853:9;7844:7;7840:23;7836:32;7833:52;;;7881:1;7878;7871:12;7833:52;7921:9;7908:23;7954:18;7946:6;7943:30;7940:50;;;7986:1;7983;7976:12;7940:50;8025:89;8106:7;8097:6;8086:9;8082:22;8025:89;:::i;:::-;8133:8;;-1:-1:-1;7999:115:265;-1:-1:-1;;8218:2:265;8203:18;;8190:32;8231:31;8190:32;8231:31;:::i;:::-;8281:5;8271:15;;;7654:638;;;;;:::o;8297:127::-;8358:10;8353:3;8349:20;8346:1;8339:31;8389:4;8386:1;8379:15;8413:4;8410:1;8403:15;8429:328;8526:4;8584:11;8571:25;8678:2;8674:7;8663:8;8647:14;8643:29;8639:43;8619:18;8615:68;8605:96;;8697:1;8694;8687:12;8605:96;8718:33;;;;;8429:328;-1:-1:-1;;8429:328:265:o;9094:521::-;9171:4;9177:6;9237:11;9224:25;9331:2;9327:7;9316:8;9300:14;9296:29;9292:43;9272:18;9268:68;9258:96;;9350:1;9347;9340:12;9258:96;9377:33;;9429:20;;;-1:-1:-1;9472:18:265;9461:30;;9458:50;;;9504:1;9501;9494:12;9458:50;9537:4;9525:17;;-1:-1:-1;9568:14:265;9564:27;;;9554:38;;9551:58;;;9605:1;9602;9595:12;9620:360;9831:6;9823;9818:3;9805:33;9901:2;9897:15;;;;-1:-1:-1;;9893:53:265;9857:16;;9882:65;;;9971:2;9963:11;;9620:360;-1:-1:-1;9620:360:265:o;9985:287::-;10114:3;10152:6;10146:13;10168:66;10227:6;10222:3;10215:4;10207:6;10203:17;10168:66;:::i;10277:160::-;10342:20;;10398:13;;10391:21;10381:32;;10371:60;;10427:1;10424;10417:12;10442:180;10498:6;10551:2;10539:9;10530:7;10526:23;10522:32;10519:52;;;10567:1;10564;10557:12;10519:52;10590:26;10606:9;10590:26;:::i;10627:1161::-;10816:2;10805:9;10798:21;10779:4;10854:6;10841:20;10870:31;10895:5;10870:31;:::i;:::-;-1:-1:-1;;;;;10941:5:265;10937:54;10932:2;10921:9;10917:18;10910:82;;11042:32;11070:2;11062:6;11058:15;11042:32;:::i;:::-;11035:40;11028:48;11023:2;11012:9;11008:18;11001:76;11137:2;11129:6;11125:15;11112:29;11221:2;11217:7;11208:6;11192:14;11188:27;11184:41;11164:18;11160:66;11150:94;;11240:1;11237;11230:12;11150:94;11268:31;;11380:2;11367:16;;;11322:21;11406:18;11395:30;;11392:50;;;11438:1;11435;11428:12;11392:50;11487:6;11471:14;11467:27;11458:7;11454:41;11451:61;;;11508:1;11505;11498:12;11451:61;11550:4;11543;11532:9;11528:20;11521:34;11592:6;11586:3;11575:9;11571:19;11564:35;11651:6;11642:7;11636:3;11625:9;11621:19;11608:50;11708:1;11702:3;11693:6;11682:9;11678:22;11674:32;11667:43;11778:3;11771:2;11767:7;11762:2;11754:6;11750:15;11746:29;11735:9;11731:45;11727:55;11719:63;;;;10627:1161;;;;:::o;11793:337::-;11898:4;11956:11;11943:25;12050:3;12046:8;12035;12019:14;12015:29;12011:44;11991:18;11987:69;11977:97;;12070:1;12067;12060:12;12135:222;12200:9;;;12221:10;;;12218:133;;;12273:10;12268:3;12264:20;12261:1;12254:31;12308:4;12305:1;12298:15;12336:4;12333:1;12326:15;12846:184;12904:6;12957:2;12945:9;12936:7;12932:23;12928:32;12925:52;;;12973:1;12970;12963:12;12925:52;12996:28;13014:9;12996:28;:::i;14491:271::-;14674:6;14666;14661:3;14648:33;14630:3;14700:16;;14725:13;;;14700:16;14491:271;-1:-1:-1;14491:271:265:o;14767:127::-;14828:10;14823:3;14819:20;14816:1;14809:31;14859:4;14856:1;14849:15;14883:4;14880:1;14873:15;14899:380;14978:1;14974:12;;;;15021;;;15042:61;;15096:4;15088:6;15084:17;15074:27;;15042:61;15149:2;15141:6;15138:14;15118:18;15115:38;15112:161;;15195:10;15190:3;15186:20;15183:1;15176:31;15230:4;15227:1;15220:15;15258:4;15255:1;15248:15;15112:161;;14899:380;;;:::o;15284:217::-;15324:1;15350;15340:132;;15394:10;15389:3;15385:20;15382:1;15375:31;15429:4;15426:1;15419:15;15457:4;15454:1;15447:15;15340:132;-1:-1:-1;15486:9:265;;15284:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "36411": [
        {
          "start": 3300,
          "length": 32
        }
      ],
      "36413": [
        {
          "start": 3258,
          "length": 32
        }
      ],
      "36415": [
        {
          "start": 3216,
          "length": 32
        }
      ],
      "36417": [
        {
          "start": 3381,
          "length": 32
        }
      ],
      "36419": [
        {
          "start": 3421,
          "length": 32
        }
      ],
      "36422": [
        {
          "start": 1704,
          "length": 32
        }
      ],
      "36425": [
        {
          "start": 1754,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": "97259d9c",
    "eip712Domain()": "84b0196e",
    "execute((address,address,uint256,uint256,uint48,bytes,bytes))": "df905caf",
    "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": "ccf96b4a",
    "executeMulticall((address,bool,bytes)[])": "089168fe",
    "nonces(address)": "7ecebe00",
    "verify((address,address,uint256,uint256,uint48,bytes,bytes))": "19d8d38c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder_v1.SingleCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"CallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"createDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder_v1.SingleCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"executeMulticall\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder_v1.Result[]\",\"name\":\"results\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Inverter Network\",\"custom:security-contact\":\"security@inverter.network                          In case of any concerns or findings, please refer to our Security Policy                          at security.inverter.network or email us directly!  +\",\"details\":\"Integrates {ERC2771Forwarder} and {Context} to manage and relay meta transactions.          It handles nonce management, signature verification, and ensures only trusted calls          are forwarded.\",\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"CallFailed((address,bool,bytes))\":[{\"params\":{\"call\":\"The call that failed.\"}}],\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"createDigest((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"The signature field of the given `ForwardRequestData` can be empty.\",\"params\":{\"req\":\"The ForwardRequest you want to get the digest from.\"},\"returns\":{\"digest\":\"The digest needed to create a signature for the request.\"}},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"executeMulticall((address,bool,bytes)[])\":{\"params\":{\"calls\":\"Array of call structs that should be executed in the multicall.\"},\"returns\":{\"results\":\"The return data of the calls that were executed.\"}},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"}},\"title\":\"Inverter Meta-Transaction & Multicall Forwarder\",\"version\":1},\"userdoc\":{\"errors\":{\"CallFailed((address,bool,bytes))\":[{\"notice\":\"The request `from` doesn't match with the recovered `signer`.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the contract with the name of the contract.\"},\"createDigest((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"notice\":\"Creates a digest for the given `ForwardRequestData`.\"},\"executeMulticall((address,bool,bytes)[])\":{\"notice\":\"Enables the execution of multiple calls in a single transaction.\"}},\"notice\":\"This contract enables users to interact with smart contracts indirectly through          a trusted forwarder. It supports meta transactions, allowing transactions to be          sent by one party but signed and paid for by another. It also handles batch          transactions (multi-call), facilitating complex, multi-step interactions within a single          transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/forwarder/TransactionForwarder_v1.sol\":\"TransactionForwarder_v1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":750},\"remappings\":[\":@aut/=src/modules/authorizer/\",\":@df/=lib/deterministic-factory/src/\",\":@ex/=src/external/\",\":@fm/=src/modules/fundingManager/\",\":@lm/=src/modules/logicModule/\",\":@lm_pc/=src/modules/logicModule/paymentClient/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@pp/=src/modules/paymentProcessor/\",\":@uma/=lib/uma-protocol/packages/core/contracts/\",\":deterministic-factory/=lib/deterministic-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/deterministic-factory/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":uma-protocol/=lib/uma-protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f\",\"dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK\"]},\"lib/openzeppelin-contracts/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314\",\"dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/external/forwarder/TransactionForwarder_v1.sol\":{\"keccak256\":\"0x86bfbe2793c1d085bc1e353b9283b6dd9ffcaf0e5649ac29e9ad5e888b1590ce\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cb9c3630fff780240b5f235a33411a83830704ec0cd85b6fa77faddb881e1376\",\"dweb:/ipfs/QmXRYjakHyyXzVjFdBZtgKJAcn2h3stS4phYzuyVcioUJr\"]},\"src/external/forwarder/interfaces/ITransactionForwarder_v1.sol\":{\"keccak256\":\"0xec79d80bcec6b717afba3e739bc36c9d798ce2836a2abf648528502598ab44c5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a7001f41ea0b41011ea8e263b334875ff543952f0b597c3af84c9998abce2730\",\"dweb:/ipfs/QmQ3gbhDdygD2KYF5hJvLJVcEUmEiqk7SHKUZi2f8n4GLt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "struct ITransactionForwarder_v1.SingleCall",
              "name": "call",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "type": "error",
          "name": "CallFailed"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "deadline",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderExpiredRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderInvalidSigner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestedValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderMismatchedValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2771UntrustfulTarget"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "currentNonce",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidAccountNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutedForwardRequest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "createDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "digest",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [
            {
              "internalType": "struct ITransactionForwarder_v1.SingleCall[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeMulticall",
          "outputs": [
            {
              "internalType": "struct ITransactionForwarder_v1.Result[]",
              "name": "results",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "The signature field of the given `ForwardRequestData` can be empty.",
            "params": {
              "req": "The ForwardRequest you want to get the digest from."
            },
            "returns": {
              "digest": "The digest needed to create a signature for the request."
            }
          },
          "eip712Domain()": {
            "details": "See {IERC-5267}."
          },
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}."
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "details": "Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting."
          },
          "executeMulticall((address,bool,bytes)[])": {
            "params": {
              "calls": "Array of call structs that should be executed in the multicall."
            },
            "returns": {
              "results": "The return data of the calls that were executed."
            }
          },
          "nonces(address)": {
            "details": "Returns the next unused nonce for an address."
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Initializes the contract with the name of the contract."
          },
          "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "notice": "Creates a digest for the given `ForwardRequestData`."
          },
          "executeMulticall((address,bool,bytes)[])": {
            "notice": "Enables the execution of multiple calls in a single transaction."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aut/=src/modules/authorizer/",
        "@df/=lib/deterministic-factory/src/",
        "@ex/=src/external/",
        "@fm/=src/modules/fundingManager/",
        "@lm/=src/modules/logicModule/",
        "@lm_pc/=src/modules/logicModule/paymentClient/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "@pp/=src/modules/paymentProcessor/",
        "@uma/=lib/uma-protocol/packages/core/contracts/",
        "deterministic-factory/=lib/deterministic-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/deterministic-factory/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "uma-protocol/=lib/uma-protocol/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 750
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/external/forwarder/TransactionForwarder_v1.sol": "TransactionForwarder_v1"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
        "urls": [
          "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
          "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol": {
        "keccak256": "0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6",
        "urls": [
          "bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f",
          "dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/metatx/ERC2771Forwarder.sol": {
        "keccak256": "0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2",
        "urls": [
          "bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314",
          "dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
        "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
        "urls": [
          "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
          "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6",
        "urls": [
          "bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c",
          "dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf",
        "urls": [
          "bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c",
          "dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0",
        "urls": [
          "bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21",
          "dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
        "keccak256": "0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435",
        "urls": [
          "bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c",
          "dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "src/external/forwarder/TransactionForwarder_v1.sol": {
        "keccak256": "0x86bfbe2793c1d085bc1e353b9283b6dd9ffcaf0e5649ac29e9ad5e888b1590ce",
        "urls": [
          "bzz-raw://cb9c3630fff780240b5f235a33411a83830704ec0cd85b6fa77faddb881e1376",
          "dweb:/ipfs/QmXRYjakHyyXzVjFdBZtgKJAcn2h3stS4phYzuyVcioUJr"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/external/forwarder/interfaces/ITransactionForwarder_v1.sol": {
        "keccak256": "0xec79d80bcec6b717afba3e739bc36c9d798ce2836a2abf648528502598ab44c5",
        "urls": [
          "bzz-raw://a7001f41ea0b41011ea8e263b334875ff543952f0b597c3af84c9998abce2730",
          "dweb:/ipfs/QmQ3gbhDdygD2KYF5hJvLJVcEUmEiqk7SHKUZi2f8n4GLt"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 84
}