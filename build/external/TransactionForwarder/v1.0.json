{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "createDigest",
            "inputs": [
                {
                    "name": "req",
                    "type": "tuple",
                    "internalType": "struct ERC2771Forwarder.ForwardRequestData",
                    "components": [
                        {
                            "name": "from",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "to",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "value",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "gas",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "deadline",
                            "type": "uint48",
                            "internalType": "uint48"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "signature",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "eip712Domain",
            "inputs": [],
            "outputs": [
                {
                    "name": "fields",
                    "type": "bytes1",
                    "internalType": "bytes1"
                },
                {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "verifyingContract",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "extensions",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "execute",
            "inputs": [
                {
                    "name": "request",
                    "type": "tuple",
                    "internalType": "struct ERC2771Forwarder.ForwardRequestData",
                    "components": [
                        {
                            "name": "from",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "to",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "value",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "gas",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "deadline",
                            "type": "uint48",
                            "internalType": "uint48"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "signature",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "executeBatch",
            "inputs": [
                {
                    "name": "requests",
                    "type": "tuple[]",
                    "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
                    "components": [
                        {
                            "name": "from",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "to",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "value",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "gas",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "deadline",
                            "type": "uint48",
                            "internalType": "uint48"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "signature",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "refundReceiver",
                    "type": "address",
                    "internalType": "address payable"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "executeMulticall",
            "inputs": [
                {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct ITransactionForwarder.SingleCall[]",
                    "components": [
                        {
                            "name": "target",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "allowFailure",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "callData",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "results",
                    "type": "tuple[]",
                    "internalType": "struct ITransactionForwarder.Result[]",
                    "components": [
                        {
                            "name": "success",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "returnData",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "nonces",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "verify",
            "inputs": [
                {
                    "name": "request",
                    "type": "tuple",
                    "internalType": "struct ERC2771Forwarder.ForwardRequestData",
                    "components": [
                        {
                            "name": "from",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "to",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "value",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "gas",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "deadline",
                            "type": "uint48",
                            "internalType": "uint48"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "signature",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "EIP712DomainChanged",
            "inputs": [],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ExecutedForwardRequest",
            "inputs": [
                {
                    "name": "signer",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nonce",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "success",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AddressInsufficientBalance",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "CallFailed",
            "inputs": [
                {
                    "name": "call",
                    "type": "tuple",
                    "internalType": "struct ITransactionForwarder.SingleCall",
                    "components": [
                        {
                            "name": "target",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "allowFailure",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "callData",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC2771ForwarderExpiredRequest",
            "inputs": [
                {
                    "name": "deadline",
                    "type": "uint48",
                    "internalType": "uint48"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC2771ForwarderInvalidSigner",
            "inputs": [
                {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC2771ForwarderMismatchedValue",
            "inputs": [
                {
                    "name": "requestedValue",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC2771UntrustfulTarget",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "forwarder",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "FailedInnerCall",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidAccountNonce",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "currentNonce",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "InvalidShortString",
            "inputs": []
        },
        {
            "type": "error",
            "name": "StringTooLong",
            "inputs": [
                {
                    "name": "str",
                    "type": "string",
                    "internalType": "string"
                }
            ]
        }
    ],
    "bytecode": {
        "object": "0x6101606040523480156200001257600080fd5b5060405162001e8e38038062001e8e8339810160408190526200003591620001d0565b6040805180820190915260018152603160f81b6020820152819081906200005e8260006200010f565b610120526200006f8160016200010f565b61014052815160208084019190912060e052815190820120610100524660a052620000fd60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200043f9050565b60006020835110156200012f57620001278362000148565b905062000142565b816200013c848262000319565b5060ff90505b92915050565b600080829050601f815111156200017f578260405163305a27a960e01b8152600401620001769190620003e5565b60405180910390fd5b80516200018c826200041a565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001c7578181015183820152602001620001ad565b50506000910152565b600060208284031215620001e357600080fd5b81516001600160401b0380821115620001fb57600080fd5b818401915084601f8301126200021057600080fd5b81518181111562000225576200022562000194565b604051601f8201601f19908116603f0116810190838211818310171562000250576200025062000194565b816040528281528760208487010111156200026a57600080fd5b6200027d836020830160208801620001aa565b979650505050505050565b600181811c908216806200029d57607f821691505b602082108103620002be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000314576000816000526020600020601f850160051c81016020861015620002ef5750805b601f850160051c820191505b818110156200031057828155600101620002fb565b5050505b505050565b81516001600160401b0381111562000335576200033562000194565b6200034d8162000346845462000288565b84620002c4565b602080601f8311600181146200038557600084156200036c5750858301515b600019600386901b1c1916600185901b17855562000310565b600085815260208120601f198616915b82811015620003b65788860151825594840194600190910190840162000395565b5085821015620003d55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000825180602084015262000406816040850160208701620001aa565b601f01601f19169190910160400192915050565b80516020808301519190811015620002be5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516119f46200049a60003960006107da015260006107a801526000610f4401526000610f1c01526000610e7701526000610ea101526000610ecb01526119f46000f3fe6080604052600436106100705760003560e01c806384b0196e1161004e57806384b0196e1461012c57806397259d9c14610154578063ccf96b4a14610174578063df905caf1461018957600080fd5b8063089168fe1461007557806319d8d38c146100ab5780637ecebe00146100db575b600080fd5b34801561008157600080fd5b506100956100903660046111a6565b61019c565b6040516100a29190611238565b60405180910390f35b3480156100b757600080fd5b506100cb6100c63660046112ce565b6103fa565b60405190151581526020016100a2565b3480156100e757600080fd5b5061011e6100f6366004611342565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b6040519081526020016100a2565b34801561013857600080fd5b5061014161042c565b6040516100a2979695949392919061135f565b34801561016057600080fd5b5061011e61016f36600461151c565b61048e565b6101876101823660046115f4565b6104a7565b005b6101876101973660046112ce565b6105cf565b6060818067ffffffffffffffff8111156101b8576101b8611421565b6040519080825280602002602001820160405280156101fe57816020015b6040805180820190915260008152606060208201528152602001906001900390816101d65790505b50915036606060005b838110156103f0578686828181106102215761022161164b565b9050602002810190610233919061167a565b925061024a6102456020850185611342565b61065c565b6102b15761025b6020840184611342565b6040517fd2650cd100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201523060248201526044015b60405180910390fd5b6102be60408401846116b8565b336040516020016102d19392919061171d565b60408051601f1981840301815291905291506000806102f36020860186611342565b73ffffffffffffffffffffffffffffffffffffffff16846040516103179190611756565b6000604051808303816000865af19150503d8060008114610354576040519150601f19603f3d011682016040523d82523d6000602084013e610359565b606091505b50915091508115801561037957506103776040860160208701611778565b155b156103b257846040517f4def4a8c0000000000000000000000000000000000000000000000000000000081526004016102a89190611793565b60405180604001604052808315158152602001828152508784815181106103db576103db61164b565b60209081029190910101525050600101610207565b5050505092915050565b60008060008061040985610707565b5092509250925082801561041a5750815b80156104235750805b95945050505050565b6000606080600080600060606104406107a1565b6104486107d3565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60006104a161049c83610800565b6108fc565b92915050565b73ffffffffffffffffffffffffffffffffffffffff811615600080805b85811015610574578686828181106104de576104de61164b565b90506020028101906104f09190611868565b6104fe90604001358461189c565b9250600061052f8888848181106105175761051761164b565b90506020028101906105299190611868565b86610944565b90508061056b578787838181106105485761054861164b565b905060200281019061055a9190611868565b61056890604001358461189c565b92505b506001016104c4565b503482146105b7576040517f70647f79000000000000000000000000000000000000000000000000000000008152600481018390523460248201526044016102a8565b80156105c7576105c78482610b54565b505050505050565b8060400135341461061857604080517f70647f790000000000000000000000000000000000000000000000000000000081529082013560048201523460248201526044016102a8565b610623816001610944565b610659576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b604051306024820152600090819060440160408051601f19818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f572b6c050000000000000000000000000000000000000000000000000000000017815282519293506000928392839290918391895afa92503d915060005190508280156106f1575060208210155b80156106fd5750600081115b9695505050505050565b60008060008060008061071987610c2f565b90925090506107316102456040890160208a01611342565b4261074260a08a0160808b016118d6565b65ffffffffffff161015838015610790575061076160208a018a611342565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b919750955093509150509193509193565b60606107ce7f00000000000000000000000000000000000000000000000000000000000000006000610db1565b905090565b60606107ce7f00000000000000000000000000000000000000000000000000000000000000006001610db1565b60007f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac8260000151836020015184604001518560600151610867876000015173ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b608088015160a089015180516020918201206040516108df99989796959493920197885273ffffffffffffffffffffffffffffffffffffffff96871660208901529490951660408701526060860192909252608085015260a084015265ffffffffffff9190911660c083015260e08201526101000190565b604051602081830303815290604052805190602001209050919050565b60006104a1610909610e5d565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b600080600080600061095587610707565b93509350935093508515610a2f57836109785761025b6040880160208901611342565b826109ca5761098d60a08801608089016118d6565b6040517f94eef58a00000000000000000000000000000000000000000000000000000000815265ffffffffffff90911660048201526024016102a8565b81610a2f57806109dd6020890189611342565b6040517fc845a05600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152911660248201526044016102a8565b838015610a395750815b8015610a425750825b156103f05773ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408120805460018101909155905060608801356000610a8e60408b0160208c01611342565b905060408a01356000610aa460a08d018d6116b8565b610ab160208f018f611342565b604051602001610ac39392919061171d565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610af2818e610f95565b604080518781528c1515602082015273ffffffffffffffffffffffffffffffffffffffff8916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505050505092915050565b80471015610b90576040517fcd7860590000000000000000000000000000000000000000000000000000000081523060048201526024016102a8565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610bea576040519150601f19603f3d011682016040523d82523d6000602084013e610bef565b606091505b5050905080610c2a576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000808080610d8b610c4460c08701876116b8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d8592507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610cac905060208a018a611342565b610cbc60408b0160208c01611342565b60408b013560608c0135610cd66100f660208f018f611342565b8d6080016020810190610ce991906118d6565b8e8060a00190610cf991906116b8565b604051610d079291906118f1565b60408051918290038220602083019990995273ffffffffffffffffffffffffffffffffffffffff97881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e082015261010081019190915261012001604051602081830303815290604052805190602001206108fc565b90610fb1565b5090925090506000816003811115610da557610da5611901565b14959194509092505050565b606060ff8314610dcb57610dc483610ffe565b90506104a1565b818054610dd790611930565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0390611930565b8015610e505780601f10610e2557610100808354040283529160200191610e50565b820191906000526020600020905b815481529060010190602001808311610e3357829003601f168201915b5050505050905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015610ec357507f000000000000000000000000000000000000000000000000000000000000000046145b15610eed57507f000000000000000000000000000000000000000000000000000000000000000090565b6107ce604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610fa4603f6060830135611983565b821015610fad57fe5b5050565b60008060008351604103610feb5760208401516040850151606086015160001a610fdd8882858561103d565b955095509550505050610ff7565b50508151600091506002905b9250925092565b6060600061100b83611119565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611078575060009150600390508261110f565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156110cc573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff81166111055750600092506001915082905061110f565b9250600091508190505b9450945094915050565b600060ff8216601f8111156104a1576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083601f84011261116c57600080fd5b50813567ffffffffffffffff81111561118457600080fd5b6020830191508360208260051b850101111561119f57600080fd5b9250929050565b600080602083850312156111b957600080fd5b823567ffffffffffffffff8111156111d057600080fd5b6111dc8582860161115a565b90969095509350505050565b60005b838110156112035781810151838201526020016111eb565b50506000910152565b600081518084526112248160208601602086016111e8565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b838110156112c0578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001855281518051151584528701518784018790526112ad8785018261120c565b9588019593505090860190600101611261565b509098975050505050505050565b6000602082840312156112e057600080fd5b813567ffffffffffffffff8111156112f757600080fd5b820160e0818503121561130957600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461065957600080fd5b803561133d81611310565b919050565b60006020828403121561135457600080fd5b813561130981611310565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e0602084015261139c60e084018a61120c565b83810360408501526113ae818a61120c565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561140f578351835292840192918401916001016113f3565b50909c9b505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561147357611473611421565b60405290565b803565ffffffffffff8116811461133d57600080fd5b600082601f8301126114a057600080fd5b813567ffffffffffffffff808211156114bb576114bb611421565b604051601f8301601f19908116603f011681019082821181831017156114e3576114e3611421565b816040528381528660208588010111156114fc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561152e57600080fd5b813567ffffffffffffffff8082111561154657600080fd5b9083019060e0828603121561155a57600080fd5b611562611450565b61156b83611332565b815261157960208401611332565b6020820152604083013560408201526060830135606082015261159e60808401611479565b608082015260a0830135828111156115b557600080fd5b6115c18782860161148f565b60a08301525060c0830135828111156115d957600080fd5b6115e58782860161148f565b60c08301525095945050505050565b60008060006040848603121561160957600080fd5b833567ffffffffffffffff81111561162057600080fd5b61162c8682870161115a565b909450925050602084013561164081611310565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126116ae57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126116ed57600080fd5b83018035915067ffffffffffffffff82111561170857600080fd5b60200191503681900382131561119f57600080fd5b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b600082516116ae8184602087016111e8565b8035801515811461133d57600080fd5b60006020828403121561178a57600080fd5b61130982611768565b60208152600082356117a481611310565b73ffffffffffffffffffffffffffffffffffffffff81166020840152506117cd60208401611768565b1515604083015260408301357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261180957600080fd5b830160208101903567ffffffffffffffff81111561182657600080fd5b80360382131561183557600080fd5b606080850152806080850152808260a0860137600060a0828601015260a0601f19601f8301168501019250505092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126116ae57600080fd5b808201808211156104a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156118e857600080fd5b61130982611479565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600181811c9082168061194457607f821691505b60208210810361197d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000826119b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122090d6b44dbfb14c27c9703fd0118ee54b6d4f5b3b35ff519417ef0c1080050b6964736f6c63430008170033",
        "sourceMap": "385:4386:86:-:0;;;608:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:53;;;;;;;;;;;;-1:-1:-1;;;3328:431:53;;;;657:4:86;;;;3401:45:53;657:4:86;-1:-1:-1;3401:30:53;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4142:25:219;4183:18;;;4176:34;;;;4226:18;;;4219:34;4255:13:53;4269:18:219;;;4262:34;4278:4:53;4312:19:219;;;4305:61;4168:7:53;;4114:19:219;;4204:80:53;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:53;3725:27;;-1:-1:-1;385:4386:86;;-1:-1:-1;385:4386:86;2914:340:49;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;:20::i;:::-;3077:27;;;;3033:215;3161:5;3135:46;3176:5;3161;3135:46;:::i;:::-;-1:-1:-1;1390:66:49;;-1:-1:-1;3033:215:49;2914:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:49;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:49:o;14:127:219:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:219;370:16;;363:27;146:250::o;401:897::-;481:6;534:2;522:9;513:7;509:23;505:32;502:52;;;550:1;547;540:12;502:52;577:16;;-1:-1:-1;;;;;642:14:219;;;639:34;;;669:1;666;659:12;639:34;707:6;696:9;692:22;682:32;;752:7;745:4;741:2;737:13;733:27;723:55;;774:1;771;764:12;723:55;803:2;797:9;825:2;821;818:10;815:36;;;831:18;;:::i;:::-;906:2;900:9;874:2;960:13;;-1:-1:-1;;956:22:219;;;980:2;952:31;948:40;936:53;;;1004:18;;;1024:22;;;1001:46;998:72;;;1050:18;;:::i;:::-;1090:10;1086:2;1079:22;1125:2;1117:6;1110:18;1165:7;1160:2;1155;1151;1147:11;1143:20;1140:33;1137:53;;;1186:1;1183;1176:12;1137:53;1199:68;1264:2;1259;1251:6;1247:15;1242:2;1238;1234:11;1199:68;:::i;:::-;1286:6;401:897;-1:-1:-1;;;;;;;401:897:219:o;1303:380::-;1382:1;1378:12;;;;1425;;;1446:61;;1500:4;1492:6;1488:17;1478:27;;1446:61;1553:2;1545:6;1542:14;1522:18;1519:38;1516:161;;1599:10;1594:3;1590:20;1587:1;1580:31;1634:4;1631:1;1624:15;1662:4;1659:1;1652:15;1516:161;;1303:380;;;:::o;1814:543::-;1916:2;1911:3;1908:11;1905:446;;;1952:1;1976:5;1973:1;1966:16;2020:4;2017:1;2007:18;2090:2;2078:10;2074:19;2071:1;2067:27;2061:4;2057:38;2126:4;2114:10;2111:20;2108:47;;;-1:-1:-1;2149:4:219;2108:47;2204:2;2199:3;2195:12;2192:1;2188:20;2182:4;2178:31;2168:41;;2259:82;2277:2;2270:5;2267:13;2259:82;;;2322:17;;;2303:1;2292:13;2259:82;;;2263:3;;;1905:446;1814:543;;;:::o;2533:1345::-;2653:10;;-1:-1:-1;;;;;2675:30:219;;2672:56;;;2708:18;;:::i;:::-;2737:97;2827:6;2787:38;2819:4;2813:11;2787:38;:::i;:::-;2781:4;2737:97;:::i;:::-;2889:4;;2946:2;2935:14;;2963:1;2958:663;;;;3665:1;3682:6;3679:89;;;-1:-1:-1;3734:19:219;;;3728:26;3679:89;-1:-1:-1;;2490:1:219;2486:11;;;2482:24;2478:29;2468:40;2514:1;2510:11;;;2465:57;3781:81;;2928:944;;2958:663;1761:1;1754:14;;;1798:4;1785:18;;-1:-1:-1;;2994:20:219;;;3112:236;3126:7;3123:1;3120:14;3112:236;;;3215:19;;;3209:26;3194:42;;3307:27;;;;3275:1;3263:14;;;;3142:19;;3112:236;;;3116:3;3376:6;3367:7;3364:19;3361:201;;;3437:19;;;3431:26;-1:-1:-1;;3520:1:219;3516:14;;;3532:3;3512:24;3508:37;3504:42;3489:58;3474:74;;3361:201;-1:-1:-1;;;;;3608:1:219;3592:14;;;3588:22;3575:36;;-1:-1:-1;2533:1345:219:o;4377:396::-;4526:2;4515:9;4508:21;4489:4;4558:6;4552:13;4601:6;4596:2;4585:9;4581:18;4574:34;4617:79;4689:6;4684:2;4673:9;4669:18;4664:2;4656:6;4652:15;4617:79;:::i;:::-;4757:2;4736:15;-1:-1:-1;;4732:29:219;4717:45;;;;4764:2;4713:54;;4377:396;-1:-1:-1;;4377:396:219:o;4778:297::-;4896:12;;4943:4;4932:16;;;4926:23;;4896:12;4961:16;;4958:111;;;-1:-1:-1;;5035:4:219;5031:17;;;;5028:1;5024:25;5020:38;5009:50;;4778:297;-1:-1:-1;4778:297:219:o;:::-;385:4386:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x6080604052600436106100705760003560e01c806384b0196e1161004e57806384b0196e1461012c57806397259d9c14610154578063ccf96b4a14610174578063df905caf1461018957600080fd5b8063089168fe1461007557806319d8d38c146100ab5780637ecebe00146100db575b600080fd5b34801561008157600080fd5b506100956100903660046111a6565b61019c565b6040516100a29190611238565b60405180910390f35b3480156100b757600080fd5b506100cb6100c63660046112ce565b6103fa565b60405190151581526020016100a2565b3480156100e757600080fd5b5061011e6100f6366004611342565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b6040519081526020016100a2565b34801561013857600080fd5b5061014161042c565b6040516100a2979695949392919061135f565b34801561016057600080fd5b5061011e61016f36600461151c565b61048e565b6101876101823660046115f4565b6104a7565b005b6101876101973660046112ce565b6105cf565b6060818067ffffffffffffffff8111156101b8576101b8611421565b6040519080825280602002602001820160405280156101fe57816020015b6040805180820190915260008152606060208201528152602001906001900390816101d65790505b50915036606060005b838110156103f0578686828181106102215761022161164b565b9050602002810190610233919061167a565b925061024a6102456020850185611342565b61065c565b6102b15761025b6020840184611342565b6040517fd2650cd100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201523060248201526044015b60405180910390fd5b6102be60408401846116b8565b336040516020016102d19392919061171d565b60408051601f1981840301815291905291506000806102f36020860186611342565b73ffffffffffffffffffffffffffffffffffffffff16846040516103179190611756565b6000604051808303816000865af19150503d8060008114610354576040519150601f19603f3d011682016040523d82523d6000602084013e610359565b606091505b50915091508115801561037957506103776040860160208701611778565b155b156103b257846040517f4def4a8c0000000000000000000000000000000000000000000000000000000081526004016102a89190611793565b60405180604001604052808315158152602001828152508784815181106103db576103db61164b565b60209081029190910101525050600101610207565b5050505092915050565b60008060008061040985610707565b5092509250925082801561041a5750815b80156104235750805b95945050505050565b6000606080600080600060606104406107a1565b6104486107d3565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60006104a161049c83610800565b6108fc565b92915050565b73ffffffffffffffffffffffffffffffffffffffff811615600080805b85811015610574578686828181106104de576104de61164b565b90506020028101906104f09190611868565b6104fe90604001358461189c565b9250600061052f8888848181106105175761051761164b565b90506020028101906105299190611868565b86610944565b90508061056b578787838181106105485761054861164b565b905060200281019061055a9190611868565b61056890604001358461189c565b92505b506001016104c4565b503482146105b7576040517f70647f79000000000000000000000000000000000000000000000000000000008152600481018390523460248201526044016102a8565b80156105c7576105c78482610b54565b505050505050565b8060400135341461061857604080517f70647f790000000000000000000000000000000000000000000000000000000081529082013560048201523460248201526044016102a8565b610623816001610944565b610659576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b604051306024820152600090819060440160408051601f19818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f572b6c050000000000000000000000000000000000000000000000000000000017815282519293506000928392839290918391895afa92503d915060005190508280156106f1575060208210155b80156106fd5750600081115b9695505050505050565b60008060008060008061071987610c2f565b90925090506107316102456040890160208a01611342565b4261074260a08a0160808b016118d6565b65ffffffffffff161015838015610790575061076160208a018a611342565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b919750955093509150509193509193565b60606107ce7f00000000000000000000000000000000000000000000000000000000000000006000610db1565b905090565b60606107ce7f00000000000000000000000000000000000000000000000000000000000000006001610db1565b60007f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac8260000151836020015184604001518560600151610867876000015173ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b608088015160a089015180516020918201206040516108df99989796959493920197885273ffffffffffffffffffffffffffffffffffffffff96871660208901529490951660408701526060860192909252608085015260a084015265ffffffffffff9190911660c083015260e08201526101000190565b604051602081830303815290604052805190602001209050919050565b60006104a1610909610e5d565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b600080600080600061095587610707565b93509350935093508515610a2f57836109785761025b6040880160208901611342565b826109ca5761098d60a08801608089016118d6565b6040517f94eef58a00000000000000000000000000000000000000000000000000000000815265ffffffffffff90911660048201526024016102a8565b81610a2f57806109dd6020890189611342565b6040517fc845a05600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152911660248201526044016102a8565b838015610a395750815b8015610a425750825b156103f05773ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408120805460018101909155905060608801356000610a8e60408b0160208c01611342565b905060408a01356000610aa460a08d018d6116b8565b610ab160208f018f611342565b604051602001610ac39392919061171d565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610af2818e610f95565b604080518781528c1515602082015273ffffffffffffffffffffffffffffffffffffffff8916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505050505092915050565b80471015610b90576040517fcd7860590000000000000000000000000000000000000000000000000000000081523060048201526024016102a8565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610bea576040519150601f19603f3d011682016040523d82523d6000602084013e610bef565b606091505b5050905080610c2a576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000808080610d8b610c4460c08701876116b8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d8592507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610cac905060208a018a611342565b610cbc60408b0160208c01611342565b60408b013560608c0135610cd66100f660208f018f611342565b8d6080016020810190610ce991906118d6565b8e8060a00190610cf991906116b8565b604051610d079291906118f1565b60408051918290038220602083019990995273ffffffffffffffffffffffffffffffffffffffff97881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e082015261010081019190915261012001604051602081830303815290604052805190602001206108fc565b90610fb1565b5090925090506000816003811115610da557610da5611901565b14959194509092505050565b606060ff8314610dcb57610dc483610ffe565b90506104a1565b818054610dd790611930565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0390611930565b8015610e505780601f10610e2557610100808354040283529160200191610e50565b820191906000526020600020905b815481529060010190602001808311610e3357829003601f168201915b5050505050905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015610ec357507f000000000000000000000000000000000000000000000000000000000000000046145b15610eed57507f000000000000000000000000000000000000000000000000000000000000000090565b6107ce604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610fa4603f6060830135611983565b821015610fad57fe5b5050565b60008060008351604103610feb5760208401516040850151606086015160001a610fdd8882858561103d565b955095509550505050610ff7565b50508151600091506002905b9250925092565b6060600061100b83611119565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611078575060009150600390508261110f565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156110cc573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff81166111055750600092506001915082905061110f565b9250600091508190505b9450945094915050565b600060ff8216601f8111156104a1576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083601f84011261116c57600080fd5b50813567ffffffffffffffff81111561118457600080fd5b6020830191508360208260051b850101111561119f57600080fd5b9250929050565b600080602083850312156111b957600080fd5b823567ffffffffffffffff8111156111d057600080fd5b6111dc8582860161115a565b90969095509350505050565b60005b838110156112035781810151838201526020016111eb565b50506000910152565b600081518084526112248160208601602086016111e8565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b838110156112c0578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001855281518051151584528701518784018790526112ad8785018261120c565b9588019593505090860190600101611261565b509098975050505050505050565b6000602082840312156112e057600080fd5b813567ffffffffffffffff8111156112f757600080fd5b820160e0818503121561130957600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461065957600080fd5b803561133d81611310565b919050565b60006020828403121561135457600080fd5b813561130981611310565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e0602084015261139c60e084018a61120c565b83810360408501526113ae818a61120c565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561140f578351835292840192918401916001016113f3565b50909c9b505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561147357611473611421565b60405290565b803565ffffffffffff8116811461133d57600080fd5b600082601f8301126114a057600080fd5b813567ffffffffffffffff808211156114bb576114bb611421565b604051601f8301601f19908116603f011681019082821181831017156114e3576114e3611421565b816040528381528660208588010111156114fc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561152e57600080fd5b813567ffffffffffffffff8082111561154657600080fd5b9083019060e0828603121561155a57600080fd5b611562611450565b61156b83611332565b815261157960208401611332565b6020820152604083013560408201526060830135606082015261159e60808401611479565b608082015260a0830135828111156115b557600080fd5b6115c18782860161148f565b60a08301525060c0830135828111156115d957600080fd5b6115e58782860161148f565b60c08301525095945050505050565b60008060006040848603121561160957600080fd5b833567ffffffffffffffff81111561162057600080fd5b61162c8682870161115a565b909450925050602084013561164081611310565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126116ae57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126116ed57600080fd5b83018035915067ffffffffffffffff82111561170857600080fd5b60200191503681900382131561119f57600080fd5b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b600082516116ae8184602087016111e8565b8035801515811461133d57600080fd5b60006020828403121561178a57600080fd5b61130982611768565b60208152600082356117a481611310565b73ffffffffffffffffffffffffffffffffffffffff81166020840152506117cd60208401611768565b1515604083015260408301357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261180957600080fd5b830160208101903567ffffffffffffffff81111561182657600080fd5b80360382131561183557600080fd5b606080850152806080850152808260a0860137600060a0828601015260a0601f19601f8301168501019250505092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126116ae57600080fd5b808201808211156104a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156118e857600080fd5b61130982611479565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600181811c9082168061194457607f821691505b60208210810361197d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000826119b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122090d6b44dbfb14c27c9703fd0118ee54b6d4f5b3b35ff519417ef0c1080050b6964736f6c63430008170033",
        "sourceMap": "385:4386:86:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:1168;;;;;;;;;;-1:-1:-1;1424:1168:86;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4845:244:32;;;;;;;;;;-1:-1:-1;4845:244:32;;;;;:::i;:::-;;:::i;:::-;;;3161:14:219;;3154:22;3136:41;;3124:2;3109:18;4845:244:32;2996:187:219;538:107:48;;;;;;;;;;-1:-1:-1;538:107:48;;;;;:::i;:::-;624:14;;598:7;624:14;;;:7;:14;;;;;;;538:107;;;;3884:25:219;;;3872:2;3857:18;538:107:48;3738:177:219;5144:557:53;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1086:181:86:-;;;;;;;;;;-1:-1:-1;1086:181:86;;;;;:::i;:::-;;:::i;7519:1264:32:-;;;;;;:::i;:::-;;:::i;:::-;;5605:513;;;;;;:::i;:::-;;:::i;1424:1168:86:-;1513:23;1566:5;;1598:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1598:20:86;;;;;;;;;;;;;;;;1588:30;;1629:25;1664:17;1736:6;1731:855;1752:6;1748:1;:10;1731:855;;;1787:5;;1793:1;1787:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1779:16;-1:-1:-1;1878:33:86;1898:12;;;;1779:16;1898:12;:::i;:::-;1878:19;:33::i;:::-;1873:132;;1962:12;;;;:5;:12;:::i;:::-;1938:52;;;;;9349:42:219;9418:15;;;1938:52:86;;;9400:34:219;1984:4:86;9450:18:219;;;9443:43;9312:18;;1938:52:86;;;;;;;;1873:132;2177:14;;;;:5;:14;:::i;:::-;735:10:47;2160:46:86;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2160:46:86;;;;;;;;;;-1:-1:-1;2248:12:86;;2289;2160:46;2289:12;;:5;:12;:::i;:::-;:17;;2307:4;2289:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:65;;;;2397:7;2396:8;:31;;;;-1:-1:-1;2409:18:86;;;;;;;;:::i;:::-;2408:19;2396:31;2392:94;;;2465:5;2454:17;;;;;;;;;;;:::i;2392:94::-;2548:27;;;;;;;;2555:7;2548:27;;;;;;2564:10;2548:27;;;2535:7;2543:1;2535:10;;;;;;;;:::i;:::-;;;;;;;;;;:40;-1:-1:-1;;1760:3:86;;1731:855;;;;1542:1050;;;1424:1168;;;;:::o;4845:244:32:-;4927:4;4944:23;4969:11;4982:16;5004:18;5014:7;5004:9;:18::i;:::-;4943:79;;;;;;;5039:18;:28;;;;;5061:6;5039:28;:43;;;;;5071:11;5039:43;5032:50;4845:244;-1:-1:-1;;;;;4845:244:32:o;5144:557:53:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;5482:212;;;;-1:-1:-1;5482:212:53;;-1:-1:-1;5590:13:53;;-1:-1:-1;5625:4:53;;-1:-1:-1;5652:1:53;-1:-1:-1;5668:16:53;-1:-1:-1;5482:212:53;-1:-1:-1;5144:557:53:o;1086:181:86:-;1186:14;1223:37;1240:19;1255:3;1240:14;:19::i;:::-;1223:16;:37::i;:::-;1216:44;1086:181;-1:-1:-1;;1086:181:86:o;7519:1264:32:-;7682:28;;;;7668:11;;;7782:251;7798:19;;;7782:251;;;7855:8;;7864:1;7855:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7838:34;;7855:17;;;7838:34;;:::i;:::-;;;7886:12;7901:29;7910:8;;7919:1;7910:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7923:6;7901:8;:29::i;:::-;7886:44;;7949:7;7944:79;;7991:8;;8000:1;7991:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7976:32;;7991:17;;;7976:32;;:::i;:::-;;;7944:79;-1:-1:-1;7819:3:32;;7782:251;;;;8186:9;8169:13;:26;8165:121;;8218:57;;;;;;;;13266:25:219;;;8265:9:32;13307:18:219;;;13300:34;13239:18;;8218:57:32;13092:248:219;8165:121:32;8453:16;;8449:328;;8720:46;8738:14;8754:11;8720:17;:46::i;:::-;7658:1125;;;7519:1264;;;:::o;5605:513::-;5911:7;:13;;;5898:9;:26;5894:121;;5979:13;5947:57;;;;;5979:13;;;;5947:57;;;13266:25:219;5994:9:32;13307:18:219;;;13300:34;13239:18;;5947:57:32;13092:248:219;5894:121:32;6030:23;6039:7;6048:4;6030:8;:23::i;:::-;6025:87;;6076:25;;;;;;;;;;;;;;6025:87;5605:513;:::o;3504:1265:86:-;3628:66;;3687:4;3628:66;;;13491:74:219;3571:4:86;;;;13464:18:219;;3628:66:86;;;-1:-1:-1;;3628:66:86;;;;;;;;;;;;;;;;;;;;;4521:20;;3628:66;;-1:-1:-1;;;;;;;3628:66:86;;-1:-1:-1;;4447:6:86;4420:5;4388:220;4361:247;;4635:16;4621:30;;4685:1;4679:8;4664:23;;4714:7;:29;;;;;4739:4;4725:10;:18;;4714:29;:48;;;;;4761:1;4747:11;:15;4714:48;4707:55;3504:1265;-1:-1:-1;;;;;;3504:1265:86:o;8967:457:32:-;9068:23;9093:11;9106:16;9124:14;9151:12;9165:17;9186:37;9215:7;9186:28;:37::i;:::-;9150:73;;-1:-1:-1;9150:73:32;-1:-1:-1;9255:30:32;9274:10;;;;;;;;:::i;9255:30::-;9319:15;9299:16;;;;;;;;:::i;:::-;:35;;;;9348:7;:36;;;;-1:-1:-1;9372:12:32;;;;:7;:12;:::i;:::-;9359:25;;:9;:25;;;9348:36;9234:183;;-1:-1:-1;9234:183:32;-1:-1:-1;9234:183:32;-1:-1:-1;9398:9:32;-1:-1:-1;;8967:457:32;;;;;:::o;6021:126:53:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;2696:459:86:-;2815:7;3070:141:32;2939:3:86;:8;;;2965:3;:6;;;2989:3;:9;;;3016:3;:7;;;3041:16;3048:3;:8;;;624:14:48;;598:7;624:14;;;:7;:14;;;;;;;538:107;3041:16:86;3075:12;;;;3115:8;;;;3105:19;;;;;;;2868:270;;;;;;;;;;3075:12;2868:270;14106:25:219;;;14150:42;14228:15;;;14223:2;14208:18;;14201:43;14280:15;;;;14275:2;14260:18;;14253:43;14327:2;14312:18;;14305:34;;;;14370:3;14355:19;;14348:35;14414:3;14399:19;;14392:35;14476:14;14464:27;;;;14458:3;14443:19;;14436:56;14523:3;14508:19;;14501:35;14093:3;14078:19;;13765:777;2868:270:86;;;;;;;;;;;;;2845:303;;;;;;2838:310;;2696:459;;;:::o;4917:176:53:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3555:4:54;3549:11;3585:10;3573:23;;3625:4;3616:14;;3609:39;;;;3677:4;3668:14;;3661:34;3733:4;3718:20;;;3353:401;11009:1643:32;11138:12;11163:23;11188:11;11201:16;11219:14;11237:18;11247:7;11237:9;:18::i;:::-;11162:93;;;;;;;;11453:19;11449:402;;;11493:18;11488:115;;11562:10;;;;;;;;:::i;11488:115::-;11622:6;11617:101;;11686:16;;;;;;;;:::i;:::-;11655:48;;;;;14721:14:219;14709:27;;;11655:48:32;;;14691:46:219;14664:18;;11655:48:32;14547:196:219;11617:101:32;11737:11;11732:109;;11805:6;11813:12;;;;:7;:12;:::i;:::-;11775:51;;;;;9349:42:219;9418:15;;;11775:51:32;;;9400:34:219;9470:15;;9450:18;;;9443:43;9312:18;;11775:51:32;9165:327:219;11732:109:32;11938:18;:33;;;;;11960:11;11938:33;:43;;;;;11975:6;11938:43;11934:712;;;1121:14:48;;;12082:20:32;1121:14:48;;;:7;:14;;;;;:16;;;;;;;;12082:40:32;-1:-1:-1;12154:11:32;;;;12137:14;12192:10;;;;;;;;:::i;:::-;12179:23;-1:-1:-1;12232:13:32;;;;12216;12296:12;;;;12232:7;12296:12;:::i;:::-;12310;;;;:7;:12;:::i;:::-;12279:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12259:64;;12338:15;12463:1;12460;12453:4;12447:11;12440:4;12434;12430:15;12423:5;12419:2;12411:6;12406:59;12395:70;;12493:5;12482:16;;12526:36;12545:7;12554;12526:18;:36::i;:::-;12582:53;;;14916:25:219;;;14984:14;;14977:22;14972:2;14957:18;;14950:50;12582:53:32;;;;;;14889:18:219;12582:53:32;;;;;;;11983:663;;;;;;11152:1500;;;;11009:1643;;;;:::o;1531:331:46:-;1640:6;1616:21;:30;1612:109;;;1669:41;;;;;1704:4;1669:41;;;13491:74:219;13464:18;;1669:41:46;13345:226:219;1612:109:46;1732:12;1750:9;:14;;1772:6;1750:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;9716:709:32:-;9836:4;;;;9909:445;10336:17;;;;:7;:17;:::i;:::-;9909:445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9909:415:32;;-1:-1:-1;3070:141:32;;-1:-1:-1;10045:12:32;;-1:-1:-1;10045:12:32;;;:7;:12;:::i;:::-;10079:10;;;;;;;;:::i;:::-;10111:13;;;;10146:11;;;;10179:20;10186:12;;;;10111:7;10186:12;:::i;10179:20::-;10221:7;:16;;;;;;;;;;:::i;:::-;10269:7;:12;;;;;;;;:::i;:::-;10259:23;;;;;;;:::i;:::-;;;;;;;;;;9966:334;;;14106:25:219;;;;14150:42;14228:15;;;14208:18;;;14201:43;14280:15;;;;14260:18;;;14253:43;14312:18;;;14305:34;;;;14355:19;;;14348:35;14399:19;;;14392:35;14476:14;14464:27;14443:19;;;14436:56;14508:19;;;14501:35;;;;14078:19;;9966:334:32;;;;;;;;;;;;9939:375;;;;;;9909:16;:415::i;:::-;:426;;:445::i;:::-;-1:-1:-1;9861:493:32;;-1:-1:-1;9861:493:32;-1:-1:-1;10380:26:32;10373:3;:33;;;;;;;;:::i;:::-;;;10408:9;;-1:-1:-1;9716:709:32;;-1:-1:-1;;;9716:709:32:o;3385:267:49:-;3479:13;1390:66;3508:46;;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;:::o;3845:262:53:-;3898:7;3929:4;3921:28;3938:11;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:53;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;16666:25:219;4226:11:53;16707:18:219;;;16700:34;;;;4239:14:53;16750:18:219;;;16743:34;4255:13:53;16793:18:219;;;16786:34;4278:4:53;16836:19:219;;;16829:84;4168:7:53;;16638:19:219;;4204:80:53;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;14599:2198:32;16351:16;16365:2;16351:11;;;;:16;:::i;:::-;16341:7;:26;16337:454;;;16758:9;16337:454;14599:2198;;:::o;2129:766:52:-;2210:7;2219:12;2233:7;2256:9;:16;2276:2;2256:22;2252:637;;2592:4;2577:20;;2571:27;2641:4;2626:20;;2620:27;2698:4;2683:20;;2677:27;2294:9;2669:36;2739:25;2750:4;2669:36;2571:27;2620;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;-1:-1:-1;;2860:16:52;;2811:1;;-1:-1:-1;2815:35:52;;2252:637;2129:766;;;;;:::o;2078:405:49:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:49;;2300:14;;;;;;;;;-1:-1:-1;;;2390:16:49;;;-1:-1:-1;2435:4:49;2426:14;;2419:28;;;;-1:-1:-1;2390:16:49;2078:405::o;5140:1530:52:-;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:52;;-1:-1:-1;6301:30:52;;-1:-1:-1;6333:1:52;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;17151:25:219;;;17224:4;17212:17;;17192:18;;;17185:45;;;;17246:18;;;17239:34;;;17289:18;;;17282:34;;;6457:24:52;;17123:19:219;;6457:24:52;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:52;;-1:-1:-1;;6457:24:52;;;-1:-1:-1;;6495:20:52;;;6491:113;;-1:-1:-1;6547:1:52;;-1:-1:-1;6551:29:52;;-1:-1:-1;6547:1:52;;-1:-1:-1;6531:62:52;;6491:113;6622:6;-1:-1:-1;6630:20:52;;-1:-1:-1;6630:20:52;;-1:-1:-1;5140:1530:52;;;;;;;;;:::o;2555:245:49:-;2616:7;2688:4;2652:40;;2715:2;2706:11;;2702:69;;;2740:20;;;;;;;;;;;;;;14:386:219;96:8;106:6;160:3;153:4;145:6;141:17;137:27;127:55;;178:1;175;168:12;127:55;-1:-1:-1;201:20:219;;244:18;233:30;;230:50;;;276:1;273;266:12;230:50;313:4;305:6;301:17;289:29;;373:3;366:4;356:6;353:1;349:14;341:6;337:27;333:38;330:47;327:67;;;390:1;387;380:12;327:67;14:386;;;;;:::o;405:487::-;522:6;530;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;639:9;626:23;672:18;664:6;661:30;658:50;;;704:1;701;694:12;658:50;743:89;824:7;815:6;804:9;800:22;743:89;:::i;:::-;851:8;;717:115;;-1:-1:-1;405:487:219;-1:-1:-1;;;;405:487:219:o;897:250::-;982:1;992:113;1006:6;1003:1;1000:13;992:113;;;1082:11;;;1076:18;1063:11;;;1056:39;1028:2;1021:10;992:113;;;-1:-1:-1;;1139:1:219;1121:16;;1114:27;897:250::o;1152:329::-;1193:3;1231:5;1225:12;1258:6;1253:3;1246:19;1274:76;1343:6;1336:4;1331:3;1327:14;1320:4;1313:5;1309:16;1274:76;:::i;:::-;1395:2;1383:15;-1:-1:-1;;1379:88:219;1370:98;;;;1470:4;1366:109;;1152:329;-1:-1:-1;;1152:329:219:o;1486:1101::-;1678:4;1707:2;1747;1736:9;1732:18;1777:2;1766:9;1759:21;1800:6;1835;1829:13;1866:6;1858;1851:22;1892:2;1882:12;;1925:2;1914:9;1910:18;1903:25;;1987:2;1977:6;1974:1;1970:14;1959:9;1955:30;1951:39;2025:2;2017:6;2013:15;2046:1;2056:502;2070:6;2067:1;2064:13;2056:502;;;2135:22;;;2159:66;2131:95;2119:108;;2250:13;;2305:9;;2298:17;2291:25;2276:41;;2356:11;;2350:18;2388:15;;;2381:27;;;2431:47;2462:15;;;2350:18;2431:47;:::i;:::-;2536:12;;;;2421:57;-1:-1:-1;;2501:15:219;;;;2092:1;2085:9;2056:502;;;-1:-1:-1;2575:6:219;;1486:1101;-1:-1:-1;;;;;;;;1486:1101:219:o;2592:399::-;2690:6;2743:2;2731:9;2722:7;2718:23;2714:32;2711:52;;;2759:1;2756;2749:12;2711:52;2799:9;2786:23;2832:18;2824:6;2821:30;2818:50;;;2864:1;2861;2854:12;2818:50;2887:22;;2943:3;2925:16;;;2921:26;2918:46;;;2960:1;2957;2950:12;2918:46;2983:2;2592:399;-1:-1:-1;;;2592:399:219:o;3188:154::-;3274:42;3267:5;3263:54;3256:5;3253:65;3243:93;;3332:1;3329;3322:12;3347:134;3415:20;;3444:31;3415:20;3444:31;:::i;:::-;3347:134;;;:::o;3486:247::-;3545:6;3598:2;3586:9;3577:7;3573:23;3569:32;3566:52;;;3614:1;3611;3604:12;3566:52;3653:9;3640:23;3672:31;3697:5;3672:31;:::i;3920:1333::-;4317:66;4309:6;4305:79;4294:9;4287:98;4268:4;4404:2;4442:3;4437:2;4426:9;4422:18;4415:31;4469:45;4509:3;4498:9;4494:19;4486:6;4469:45;:::i;:::-;4562:9;4554:6;4550:22;4545:2;4534:9;4530:18;4523:50;4596:32;4621:6;4613;4596:32;:::i;:::-;4659:2;4644:18;;4637:34;;;4720:42;4708:55;;4702:3;4687:19;;4680:84;4795:3;4780:19;;4773:35;;;4845:22;;;4839:3;4824:19;;4817:51;4917:13;;4939:22;;;4989:2;5015:15;;;;-1:-1:-1;4977:15:219;;;;-1:-1:-1;5058:169:219;5072:6;5069:1;5066:13;5058:169;;;5133:13;;5121:26;;5202:15;;;;5167:12;;;;5094:1;5087:9;5058:169;;;-1:-1:-1;5244:3:219;;3920:1333;-1:-1:-1;;;;;;;;;;;;3920:1333:219:o;5258:184::-;5310:77;5307:1;5300:88;5407:4;5404:1;5397:15;5431:4;5428:1;5421:15;5447:248;5514:2;5508:9;5556:4;5544:17;;5591:18;5576:34;;5612:22;;;5573:62;5570:88;;;5638:18;;:::i;:::-;5674:2;5667:22;5447:248;:::o;5700:167::-;5767:20;;5827:14;5816:26;;5806:37;;5796:65;;5857:1;5854;5847:12;5872:777;5914:5;5967:3;5960:4;5952:6;5948:17;5944:27;5934:55;;5985:1;5982;5975:12;5934:55;6021:6;6008:20;6047:18;6084:2;6080;6077:10;6074:36;;;6090:18;;:::i;:::-;6224:2;6218:9;6286:4;6278:13;;-1:-1:-1;;6274:22:219;;;6298:2;6270:31;6266:40;6254:53;;;6322:18;;;6342:22;;;6319:46;6316:72;;;6368:18;;:::i;:::-;6408:10;6404:2;6397:22;6443:2;6435:6;6428:18;6489:3;6482:4;6477:2;6469:6;6465:15;6461:26;6458:35;6455:55;;;6506:1;6503;6496:12;6455:55;6570:2;6563:4;6555:6;6551:17;6544:4;6536:6;6532:17;6519:54;6617:1;6610:4;6605:2;6597:6;6593:15;6589:26;6582:37;6637:6;6628:15;;;;;;5872:777;;;;:::o;6654:1100::-;6750:6;6803:2;6791:9;6782:7;6778:23;6774:32;6771:52;;;6819:1;6816;6809:12;6771:52;6859:9;6846:23;6888:18;6929:2;6921:6;6918:14;6915:34;;;6945:1;6942;6935:12;6915:34;6968:22;;;;7024:4;7006:16;;;7002:27;6999:47;;;7042:1;7039;7032:12;6999:47;7068:17;;:::i;:::-;7108:22;7127:2;7108:22;:::i;:::-;7101:5;7094:37;7163:31;7190:2;7186;7182:11;7163:31;:::i;:::-;7158:2;7151:5;7147:14;7140:55;7248:2;7244;7240:11;7227:25;7222:2;7215:5;7211:14;7204:49;7306:2;7302;7298:11;7285:25;7280:2;7273:5;7269:14;7262:49;7344:31;7370:3;7366:2;7362:12;7344:31;:::i;:::-;7338:3;7331:5;7327:15;7320:56;7422:3;7418:2;7414:12;7401:26;7452:2;7442:8;7439:16;7436:36;;;7468:1;7465;7458:12;7436:36;7505:44;7541:7;7530:8;7526:2;7522:17;7505:44;:::i;:::-;7499:3;7492:5;7488:15;7481:69;;7596:3;7592:2;7588:12;7575:26;7626:2;7616:8;7613:16;7610:36;;;7642:1;7639;7632:12;7610:36;7679:44;7715:7;7704:8;7700:2;7696:17;7679:44;:::i;:::-;7673:3;7662:15;;7655:69;-1:-1:-1;7666:5:219;6654:1100;-1:-1:-1;;;;;6654:1100:219:o;7941:638::-;8083:6;8091;8099;8152:2;8140:9;8131:7;8127:23;8123:32;8120:52;;;8168:1;8165;8158:12;8120:52;8208:9;8195:23;8241:18;8233:6;8230:30;8227:50;;;8273:1;8270;8263:12;8227:50;8312:89;8393:7;8384:6;8373:9;8369:22;8312:89;:::i;:::-;8420:8;;-1:-1:-1;8286:115:219;-1:-1:-1;;8505:2:219;8490:18;;8477:32;8518:31;8477:32;8518:31;:::i;:::-;8568:5;8558:15;;;7941:638;;;;;:::o;8584:184::-;8636:77;8633:1;8626:88;8733:4;8730:1;8723:15;8757:4;8754:1;8747:15;8773:387;8870:4;8928:11;8915:25;9018:66;9007:8;8991:14;8987:29;8983:102;8963:18;8959:127;8949:155;;9100:1;9097;9090:12;8949:155;9121:33;;;;;8773:387;-1:-1:-1;;8773:387:219:o;9497:580::-;9574:4;9580:6;9640:11;9627:25;9730:66;9719:8;9703:14;9699:29;9695:102;9675:18;9671:127;9661:155;;9812:1;9809;9802:12;9661:155;9839:33;;9891:20;;;-1:-1:-1;9934:18:219;9923:30;;9920:50;;;9966:1;9963;9956:12;9920:50;9999:4;9987:17;;-1:-1:-1;10030:14:219;10026:27;;;10016:38;;10013:58;;;10067:1;10064;10057:12;10082:395;10293:6;10285;10280:3;10267:33;10363:2;10359:15;;;;10376:66;10355:88;10319:16;;10344:100;;;10468:2;10460:11;;10082:395;-1:-1:-1;10082:395:219:o;10482:287::-;10611:3;10649:6;10643:13;10665:66;10724:6;10719:3;10712:4;10704:6;10700:17;10665:66;:::i;10774:160::-;10839:20;;10895:13;;10888:21;10878:32;;10868:60;;10924:1;10921;10914:12;10939:180;10995:6;11048:2;11036:9;11027:7;11023:23;11019:32;11016:52;;;11064:1;11061;11054:12;11016:52;11087:26;11103:9;11087:26;:::i;11124:1279::-;11313:2;11302:9;11295:21;11276:4;11351:6;11338:20;11367:31;11392:5;11367:31;:::i;:::-;11445:42;11438:5;11434:54;11429:2;11418:9;11414:18;11407:82;;11539:32;11567:2;11559:6;11555:15;11539:32;:::i;:::-;11532:40;11525:48;11520:2;11509:9;11505:18;11498:76;11634:2;11626:6;11622:15;11609:29;11714:66;11705:6;11689:14;11685:27;11681:100;11661:18;11657:125;11647:153;;11796:1;11793;11786:12;11647:153;11824:31;;11936:2;11923:16;;;11878:21;11962:18;11951:30;;11948:50;;;11994:1;11991;11984:12;11948:50;12043:6;12027:14;12023:27;12014:7;12010:41;12007:61;;;12064:1;12061;12054:12;12007:61;12106:4;12099;12088:9;12084:20;12077:34;12148:6;12142:3;12131:9;12127:19;12120:35;12207:6;12198:7;12192:3;12181:9;12177:19;12164:50;12264:1;12258:3;12249:6;12238:9;12234:22;12230:32;12223:43;12393:3;-1:-1:-1;;12318:2:219;12310:6;12306:15;12302:88;12291:9;12287:104;12283:114;12275:122;;;;11124:1279;;;;:::o;12408:395::-;12513:4;12571:11;12558:25;12661:66;12650:8;12634:14;12630:29;12626:102;12606:18;12602:127;12592:155;;12743:1;12740;12733:12;12808:279;12873:9;;;12894:10;;;12891:190;;;12937:77;12934:1;12927:88;13038:4;13035:1;13028:15;13066:4;13063:1;13056:15;13576:184;13634:6;13687:2;13675:9;13666:7;13662:23;13658:32;13655:52;;;13703:1;13700;13693:12;13655:52;13726:28;13744:9;13726:28;:::i;15221:271::-;15404:6;15396;15391:3;15378:33;15360:3;15430:16;;15455:13;;;15430:16;15221:271;-1:-1:-1;15221:271:219:o;15497:184::-;15549:77;15546:1;15539:88;15646:4;15643:1;15636:15;15670:4;15667:1;15660:15;15686:437;15765:1;15761:12;;;;15808;;;15829:61;;15883:4;15875:6;15871:17;15861:27;;15829:61;15936:2;15928:6;15925:14;15905:18;15902:38;15899:218;;15973:77;15970:1;15963:88;16074:4;16071:1;16064:15;16102:4;16099:1;16092:15;15899:218;;15686:437;;;:::o;16128:274::-;16168:1;16194;16184:189;;16229:77;16226:1;16219:88;16330:4;16327:1;16320:15;16358:4;16355:1;16348:15;16184:189;-1:-1:-1;16387:9:219;;16128:274::o",
        "linkReferences": {},
        "immutableReferences": {
            "35494": [
                {
                    "start": 3787,
                    "length": 32
                }
            ],
            "35496": [
                {
                    "start": 3745,
                    "length": 32
                }
            ],
            "35498": [
                {
                    "start": 3703,
                    "length": 32
                }
            ],
            "35500": [
                {
                    "start": 3868,
                    "length": 32
                }
            ],
            "35502": [
                {
                    "start": 3908,
                    "length": 32
                }
            ],
            "35505": [
                {
                    "start": 1960,
                    "length": 32
                }
            ],
            "35508": [
                {
                    "start": 2010,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": "97259d9c",
        "eip712Domain()": "84b0196e",
        "execute((address,address,uint256,uint256,uint48,bytes,bytes))": "df905caf",
        "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": "ccf96b4a",
        "executeMulticall((address,bool,bytes)[])": "089168fe",
        "nonces(address)": "7ecebe00",
        "verify((address,address,uint256,uint256,uint48,bytes,bytes))": "19d8d38c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder.SingleCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"CallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"createDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder.SingleCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"executeMulticall\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct ITransactionForwarder.Result[]\",\"name\":\"results\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"createDigest((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"The signature field of the given ForwardRequestData can be empty\",\"params\":{\"req\":\"The ForwardRequest you want to get the digest from\"},\"returns\":{\"digest\":\"The digest needed to create a signature for the request\"}},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"executeMulticall((address,bool,bytes)[])\":{\"params\":{\"calls\":\"Array of call structs that should be executed in the multicall\"},\"returns\":{\"results\":\"The return data of the calls that were executed\"}},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"CallFailed((address,bool,bytes))\":[{\"notice\":\"The request `from` doesn't match with the recovered `signer`.\"}]},\"kind\":\"user\",\"methods\":{\"createDigest((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"notice\":\"Creates a digest for the given ForwardRequestData\"},\"executeMulticall((address,bool,bytes)[])\":{\"notice\":\"Enables the execution of multiple calls in a single transaction\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/forwarder/TransactionForwarder.sol\":\"TransactionForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f\",\"dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK\"]},\"lib/openzeppelin-contracts/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314\",\"dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/external/forwarder/ITransactionForwarder.sol\":{\"keccak256\":\"0x72c0f8c7d9acc25a3357ae90138daf1095c051875c98f1fa5fb7c6ac1debed1b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://19fadde6ba0584d6af4ea0782828ee238e53fd2a5aed0d1dd8ea673fe8ec51df\",\"dweb:/ipfs/QmSynrxay99a5ato2nJkYBRztxWs11UAtsFi7zn1Y6TwXb\"]},\"src/external/forwarder/TransactionForwarder.sol\":{\"keccak256\":\"0xed21833dc7d293d1a3223193e46a5a1e117777d8528bb21dd26bec899a6a64e4\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://27b0e8b8f945c6a7a78ffba7b51acb19f01ea55675f92aabc54083f933a62872\",\"dweb:/ipfs/QmSTajiyCot7xX9zohM739yKsgQgeQZ7gPX7wTzi7Bdw2f\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.23+commit.f704f362"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressInsufficientBalance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ITransactionForwarder.SingleCall",
                            "name": "call",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "target",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "allowFailure",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "callData",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "type": "error",
                    "name": "CallFailed"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint48",
                            "name": "deadline",
                            "type": "uint48"
                        }
                    ],
                    "type": "error",
                    "name": "ERC2771ForwarderExpiredRequest"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "signer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC2771ForwarderInvalidSigner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "requestedValue",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "msgValue",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC2771ForwarderMismatchedValue"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "forwarder",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC2771UntrustfulTarget"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FailedInnerCall"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "currentNonce",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "InvalidAccountNonce"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidShortString"
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "str",
                            "type": "string"
                        }
                    ],
                    "type": "error",
                    "name": "StringTooLong"
                },
                {
                    "inputs": [],
                    "type": "event",
                    "name": "EIP712DomainChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "signer",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nonce",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ExecutedForwardRequest",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ERC2771Forwarder.ForwardRequestData",
                            "name": "req",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gas",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint48",
                                    "name": "deadline",
                                    "type": "uint48"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "signature",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "createDigest",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "digest",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "eip712Domain",
                    "outputs": [
                        {
                            "internalType": "bytes1",
                            "name": "fields",
                            "type": "bytes1"
                        },
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "version",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "chainId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "verifyingContract",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "extensions",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ERC2771Forwarder.ForwardRequestData",
                            "name": "request",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gas",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint48",
                                    "name": "deadline",
                                    "type": "uint48"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "signature",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "execute"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
                            "name": "requests",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gas",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint48",
                                    "name": "deadline",
                                    "type": "uint48"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "signature",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "address payable",
                            "name": "refundReceiver",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "executeBatch"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ITransactionForwarder.SingleCall[]",
                            "name": "calls",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "target",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "allowFailure",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "callData",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "executeMulticall",
                    "outputs": [
                        {
                            "internalType": "struct ITransactionForwarder.Result[]",
                            "name": "results",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "success",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "returnData",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "nonces",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ERC2771Forwarder.ForwardRequestData",
                            "name": "request",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gas",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint48",
                                    "name": "deadline",
                                    "type": "uint48"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "signature",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "verify",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": {
                        "details": "The signature field of the given ForwardRequestData can be empty",
                        "params": {
                            "req": "The ForwardRequest you want to get the digest from"
                        },
                        "returns": {
                            "digest": "The digest needed to create a signature for the request"
                        }
                    },
                    "eip712Domain()": {
                        "details": "See {IERC-5267}."
                    },
                    "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
                        "details": "Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}."
                    },
                    "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
                        "details": "Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting."
                    },
                    "executeMulticall((address,bool,bytes)[])": {
                        "params": {
                            "calls": "Array of call structs that should be executed in the multicall"
                        },
                        "returns": {
                            "results": "The return data of the calls that were executed"
                        }
                    },
                    "nonces(address)": {
                        "details": "Returns the next unused nonce for an address."
                    },
                    "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
                        "details": "Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "createDigest((address,address,uint256,uint256,uint48,bytes,bytes))": {
                        "notice": "Creates a digest for the given ForwardRequestData"
                    },
                    "executeMulticall((address,bool,bytes)[])": {
                        "notice": "Enables the execution of multiple calls in a single transaction"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@oz/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 5000
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/external/forwarder/TransactionForwarder.sol": "TransactionForwarder"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
                "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
                "urls": [
                    "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
                    "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol": {
                "keccak256": "0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6",
                "urls": [
                    "bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f",
                    "dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/metatx/ERC2771Forwarder.sol": {
                "keccak256": "0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2",
                "urls": [
                    "bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314",
                    "dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
                "urls": [
                    "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
                    "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
                "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
                "urls": [
                    "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
                    "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
                "keccak256": "0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6",
                "urls": [
                    "bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c",
                    "dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
                "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
                "urls": [
                    "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
                    "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
                "urls": [
                    "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
                    "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
                "keccak256": "0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf",
                "urls": [
                    "bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c",
                    "dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
                "keccak256": "0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0",
                "urls": [
                    "bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21",
                    "dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
                "keccak256": "0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435",
                "urls": [
                    "bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c",
                    "dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
                "urls": [
                    "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
                    "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
                "urls": [
                    "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
                    "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
                ],
                "license": "MIT"
            },
            "src/external/forwarder/ITransactionForwarder.sol": {
                "keccak256": "0x72c0f8c7d9acc25a3357ae90138daf1095c051875c98f1fa5fb7c6ac1debed1b",
                "urls": [
                    "bzz-raw://19fadde6ba0584d6af4ea0782828ee238e53fd2a5aed0d1dd8ea673fe8ec51df",
                    "dweb:/ipfs/QmSynrxay99a5ato2nJkYBRztxWs11UAtsFi7zn1Y6TwXb"
                ],
                "license": "LGPL-3.0-only"
            },
            "src/external/forwarder/TransactionForwarder.sol": {
                "keccak256": "0xed21833dc7d293d1a3223193e46a5a1e117777d8528bb21dd26bec899a6a64e4",
                "urls": [
                    "bzz-raw://27b0e8b8f945c6a7a78ffba7b51acb19f01ea55675f92aabc54083f933a62872",
                    "dweb:/ipfs/QmSTajiyCot7xX9zohM739yKsgQgeQZ7gPX7wTzi7Bdw2f"
                ],
                "license": "LGPL-3.0-only"
            }
        },
        "version": 1
    },
    "id": 86
}